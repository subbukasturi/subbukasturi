






<!DOCTYPE html>
<html lang="en" data-color-mode="dark" data-light-theme="light" data-dark-theme="dark_high_contrast" data-a11y-animated-images="system">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">
  <link rel="preconnect" href="https://github.githubassets.com" crossorigin>
  <link rel="preconnect" href="https://avatars.githubusercontent.com">



  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/dark_high_contrast-188ef1de59e6.css" /><link data-color-theme="light" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light-719f1193e0c0.css" /><link data-color-theme="dark" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark-0c343b529849.css" /><link data-color-theme="dark_dimmed" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_dimmed-f22da508b62a.css" /><link data-color-theme="dark_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind-bc6bf4eea850.css" /><link data-color-theme="light_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind-527658dec362.css" /><link data-color-theme="light_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_high_contrast-c7a7fe0cd8ec.css" /><link data-color-theme="light_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_tritanopia-6aa855bdae0f.css" /><link data-color-theme="dark_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_tritanopia-6aa5e25aacc0.css" />
  
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-9563bd5b49b1.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/global-de4f252acb9b.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/github-b351ad9a2d52.css" />
  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/code-356644123695.css" />

    <meta name="optimizely-datafile" content="{&quot;groups&quot;: [], &quot;environmentKey&quot;: &quot;production&quot;, &quot;rollouts&quot;: [], &quot;typedAudiences&quot;: [], &quot;projectId&quot;: &quot;16737760170&quot;, &quot;variables&quot;: [], &quot;featureFlags&quot;: [], &quot;experiments&quot;: [], &quot;version&quot;: &quot;4&quot;, &quot;audiences&quot;: [{&quot;conditions&quot;: &quot;[\&quot;or\&quot;, {\&quot;match\&quot;: \&quot;exact\&quot;, \&quot;name\&quot;: \&quot;$opt_dummy_attribute\&quot;, \&quot;type\&quot;: \&quot;custom_attribute\&quot;, \&quot;value\&quot;: \&quot;$opt_dummy_value\&quot;}]&quot;, &quot;id&quot;: &quot;$opt_dummy_audience&quot;, &quot;name&quot;: &quot;Optimizely-Generated Audience for Backwards Compatibility&quot;}], &quot;anonymizeIP&quot;: true, &quot;sdkKey&quot;: &quot;WTc6awnGuYDdG98CYRban&quot;, &quot;attributes&quot;: [{&quot;id&quot;: &quot;16822470375&quot;, &quot;key&quot;: &quot;user_id&quot;}, {&quot;id&quot;: &quot;17143601254&quot;, &quot;key&quot;: &quot;spammy&quot;}, {&quot;id&quot;: &quot;18175660309&quot;, &quot;key&quot;: &quot;organization_plan&quot;}, {&quot;id&quot;: &quot;18813001570&quot;, &quot;key&quot;: &quot;is_logged_in&quot;}, {&quot;id&quot;: &quot;19073851829&quot;, &quot;key&quot;: &quot;geo&quot;}, {&quot;id&quot;: &quot;20175462351&quot;, &quot;key&quot;: &quot;requestedCurrency&quot;}, {&quot;id&quot;: &quot;20785470195&quot;, &quot;key&quot;: &quot;country_code&quot;}, {&quot;id&quot;: &quot;21656311196&quot;, &quot;key&quot;: &quot;opened_downgrade_dialog&quot;}], &quot;botFiltering&quot;: false, &quot;accountId&quot;: &quot;16737760170&quot;, &quot;events&quot;: [{&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;17911811441&quot;, &quot;key&quot;: &quot;hydro_click.dashboard.teacher_toolbox_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18124116703&quot;, &quot;key&quot;: &quot;submit.organizations.complete_sign_up&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18145892387&quot;, &quot;key&quot;: &quot;no_metric.tracked_outside_of_optimizely&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18178755568&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.add_repo&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18180553241&quot;, &quot;key&quot;: &quot;submit.repository_imports.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18186103728&quot;, &quot;key&quot;: &quot;click.help.learn_more_about_repository_creation&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18188530140&quot;, &quot;key&quot;: &quot;test_event&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18191963644&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.transfer_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18195612788&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.import_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18210945499&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.invite_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18211063248&quot;, &quot;key&quot;: &quot;click.empty_org_repo_cta.create_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18215721889&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.update_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18224360785&quot;, &quot;key&quot;: &quot;click.org_onboarding_checklist.dismiss&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18234832286&quot;, &quot;key&quot;: &quot;submit.organization_activation.complete&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18252392383&quot;, &quot;key&quot;: &quot;submit.org_repository.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18257551537&quot;, &quot;key&quot;: &quot;submit.org_member_invitation.create&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18259522260&quot;, &quot;key&quot;: &quot;submit.organization_profile.update&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18564603625&quot;, &quot;key&quot;: &quot;view.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18568612016&quot;, &quot;key&quot;: &quot;click.classroom_sign_in_click&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18572592540&quot;, &quot;key&quot;: &quot;view.classroom_name&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18574203855&quot;, &quot;key&quot;: &quot;click.classroom_create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18582053415&quot;, &quot;key&quot;: &quot;click.classroom_select_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18589463420&quot;, &quot;key&quot;: &quot;click.classroom_create_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591323364&quot;, &quot;key&quot;: &quot;click.classroom_create_first_classroom&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18591652321&quot;, &quot;key&quot;: &quot;click.classroom_grant_access&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18607131425&quot;, &quot;key&quot;: &quot;view.classroom_creation&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;18831680583&quot;, &quot;key&quot;: &quot;upgrade_account_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19064064515&quot;, &quot;key&quot;: &quot;click.signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19075373687&quot;, &quot;key&quot;: &quot;click.view_account_billing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19077355841&quot;, &quot;key&quot;: &quot;click.dismiss_signup_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19079713938&quot;, &quot;key&quot;: &quot;click.contact_sales&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19120963070&quot;, &quot;key&quot;: &quot;click.compare_account_plans&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19151690317&quot;, &quot;key&quot;: &quot;click.upgrade_account_cta&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19424193129&quot;, &quot;key&quot;: &quot;click.open_account_switcher&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19520330825&quot;, &quot;key&quot;: &quot;click.visit_account_profile&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19540970635&quot;, &quot;key&quot;: &quot;click.switch_account_context&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19730198868&quot;, &quot;key&quot;: &quot;submit.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19820830627&quot;, &quot;key&quot;: &quot;click.homepage_signup&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;19988571001&quot;, &quot;key&quot;: &quot;click.create_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20036538294&quot;, &quot;key&quot;: &quot;click.create_organization_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20040653299&quot;, &quot;key&quot;: &quot;click.input_enterprise_trial_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20062030003&quot;, &quot;key&quot;: &quot;click.continue_with_team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20068947153&quot;, &quot;key&quot;: &quot;click.create_organization_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20086636658&quot;, &quot;key&quot;: &quot;click.signup_continue.username&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20091648988&quot;, &quot;key&quot;: &quot;click.signup_continue.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20103637615&quot;, &quot;key&quot;: &quot;click.signup_continue.email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20111574253&quot;, &quot;key&quot;: &quot;click.signup_continue.password&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20120044111&quot;, &quot;key&quot;: &quot;view.pricing_page&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20152062109&quot;, &quot;key&quot;: &quot;submit.create_account&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20165800992&quot;, &quot;key&quot;: &quot;submit.upgrade_payment_form&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20171520319&quot;, &quot;key&quot;: &quot;submit.create_organization&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20222645674&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.discuss_your_needs&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20227443657&quot;, &quot;key&quot;: &quot;submit.verify_primary_user_email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20234607160&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.try_enterprise&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20238175784&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.team&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20239847212&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.continue_free&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20251097193&quot;, &quot;key&quot;: &quot;recommended_plan&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20438619534&quot;, &quot;key&quot;: &quot;click.pricing_calculator.1_member&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20456699683&quot;, &quot;key&quot;: &quot;click.pricing_calculator.15_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20467868331&quot;, &quot;key&quot;: &quot;click.pricing_calculator.10_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20476267432&quot;, &quot;key&quot;: &quot;click.trial_days_remaining&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20476357660&quot;, &quot;key&quot;: &quot;click.discover_feature&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20479287901&quot;, &quot;key&quot;: &quot;click.pricing_calculator.custom_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20481107083&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_teacher_benefits&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20483089392&quot;, &quot;key&quot;: &quot;click.pricing_calculator.5_members&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20484283944&quot;, &quot;key&quot;: &quot;click.onboarding_task&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20484996281&quot;, &quot;key&quot;: &quot;click.recommended_plan_in_signup.apply_student_benefits&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20486713726&quot;, &quot;key&quot;: &quot;click.onboarding_task_breadcrumb&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20490791319&quot;, &quot;key&quot;: &quot;click.upgrade_to_enterprise&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20491786766&quot;, &quot;key&quot;: &quot;click.talk_to_us&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20494144087&quot;, &quot;key&quot;: &quot;click.dismiss_enterprise_trial&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20499722759&quot;, &quot;key&quot;: &quot;completed_all_tasks&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20500710104&quot;, &quot;key&quot;: &quot;completed_onboarding_tasks&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20513160672&quot;, &quot;key&quot;: &quot;click.read_doc&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20516196762&quot;, &quot;key&quot;: &quot;actions_enabled&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20518980986&quot;, &quot;key&quot;: &quot;click.dismiss_trial_banner&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20535446721&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.dismiss_prompt&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20557002247&quot;, &quot;key&quot;: &quot;click.issue_actions_prompt.setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20595070227&quot;, &quot;key&quot;: &quot;click.pull_request_setup_workflow&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20626600314&quot;, &quot;key&quot;: &quot;click.seats_input&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20642310305&quot;, &quot;key&quot;: &quot;click.decrease_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20662990045&quot;, &quot;key&quot;: &quot;click.increase_seats_number&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20679620969&quot;, &quot;key&quot;: &quot;click.public_product_roadmap&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20761240940&quot;, &quot;key&quot;: &quot;click.dismiss_survey_banner&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20767210721&quot;, &quot;key&quot;: &quot;click.take_survey&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20795281201&quot;, &quot;key&quot;: &quot;click.archive_list&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20966790249&quot;, &quot;key&quot;: &quot;contact_sales.submit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20996500333&quot;, &quot;key&quot;: &quot;contact_sales.existing_customer&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;20996890162&quot;, &quot;key&quot;: &quot;contact_sales.blank_message_field&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21000470317&quot;, &quot;key&quot;: &quot;contact_sales.personal_email&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21002790172&quot;, &quot;key&quot;: &quot;contact_sales.blank_phone_field&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21354412592&quot;, &quot;key&quot;: &quot;click.dismiss_create_readme&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21366102546&quot;, &quot;key&quot;: &quot;click.dismiss_zero_user_content&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21370252505&quot;, &quot;key&quot;: &quot;account_did_downgrade&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21370840408&quot;, &quot;key&quot;: &quot;click.cta_create_readme&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21375451068&quot;, &quot;key&quot;: &quot;click.cta_create_new_repository&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21385390948&quot;, &quot;key&quot;: &quot;click.zero_user_content&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21467712175&quot;, &quot;key&quot;: &quot;click.downgrade_keep&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21484112202&quot;, &quot;key&quot;: &quot;click.downgrade&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21495292213&quot;, &quot;key&quot;: &quot;click.downgrade_survey_exit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21508241468&quot;, &quot;key&quot;: &quot;click.downgrade_survey_submit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21512030356&quot;, &quot;key&quot;: &quot;click.downgrade_support&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21539090022&quot;, &quot;key&quot;: &quot;click.downgrade_exit&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21543640644&quot;, &quot;key&quot;: &quot;click_fetch_upstream&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21646510300&quot;, &quot;key&quot;: &quot;click.move_your_work&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21656151116&quot;, &quot;key&quot;: &quot;click.add_branch_protection_rule&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21663860599&quot;, &quot;key&quot;: &quot;click.downgrade_dialog_open&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21687860483&quot;, &quot;key&quot;: &quot;click.learn_about_protected_branches&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21689050333&quot;, &quot;key&quot;: &quot;click.dismiss_protect_this_branch&quot;}, {&quot;experimentIds&quot;: [], &quot;id&quot;: &quot;21864370109&quot;, &quot;key&quot;: &quot;click.sign_in&quot;}], &quot;revision&quot;: &quot;1367&quot;}" />


  <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/wp-runtime-4fc1cdb8fd6a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_smoothscroll-polyfill_dist_smoothscroll_js-node_modules_stacktrace-parse-297da6-aaa32681a0b3.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/environment-28efc4e97933.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_selector-observer_dist_index_esm_js-650337916dbd.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_details-dialog-elemen-63debe-4a2f37f7419e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-node_modules_github_catalyst_-6afc16-fa4f01d20b81.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_clipboard-copy-element_dist_index_esm_js-node_modules_github_mark-f079ea-692b8e7bcdfd.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-b4f804-8392f40d4e89.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_github_text-ex-3415a8-72e8230400a2.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_primer_view-components_app_components_primer_primer_js-node_modules_gith-6a1af4-04815a449ad4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/github-elements-36de792c3510.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/element-registry-c3e63773d5f3.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-e954e8c01c93.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_manuelpuyol_turbo_dist_turbo_es2017-esm_js-ac3bd901e26b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_alive-client_dist-bf5aa2-cb53b34c4b84.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_dimensions_js-node_modules_github_hotkey_dist_-9fc4f4-0d86101e85d9.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_github_template-parts_lib_-273494-2c3a60646ab4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_paste-markdown_dist_index_esm_js-node_modules_github_quote-select-84b903-e4c363354688.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_hydro-analytics_ts-app_assets_modules_github_soft-nav_state_ts-ui_p-e465e4-4b5f869b18ef.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_updatable-content_ts-62df1309213c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-66be359b1346.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_keyboard-shortcuts-helper_ts-app_assets_modules_github_be-f5afdb-e0346850e585.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_user-content_ts-app_assets_modules_github_blob-anchor_ts--b39cba-04786f2d5e49.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-cb56bba555dc.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/behaviors-635df24c3959.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-06ff531-596c6d852b03.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/notifications-global-869bd2ddc368.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_optimizely_optimizely-sdk_dist_optimizely_browser_es_min_js-node_modules-77839b-550a5f909f1b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/optimizely-b5e5c69aa424.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_virtualized-list_es_index_js-node_modules_github_memoize_dist_esm_index_-ced8cc-ffd5e4d6ee17.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_mini-throt-a33094-133bfae4158f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_github_mini-th-85225b-d5c5eb0b8bb2.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_ref-selector_ts-eb4fbb464325.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/repositories-bae26b76f8fa.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_clipboard-copy-element_dist_index_esm_js-node_modules_github_remo-8e6bec-4a54aa10cc28.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_decorators_js-node_modules_scroll-anchoring_di-e71893-c446bed4261b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_diffs_blob-lines_ts-app_assets_modules_github_diffs_linkable-line-n-dca161-bf0171cec2b2.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/diffs-3fb71f896836.js"></script>
  

  <title>300-python-Interview-questions-and-solutions/350interview.txt at main · kiransagar1/300-python-Interview-questions-and-solutions</title>



    

  <meta name="request-id" content="B41D:B1B0:678CF9F:6A914A1:63BDCB6D" data-turbo-transient="true" /><meta name="html-safe-nonce" content="bd4e4130dee936beddbe39900a6c46722df8a252b9db804a181ed850db421891" data-turbo-transient="true" /><meta name="visitor-payload" content="eyJyZWZlcnJlciI6Imh0dHBzOi8vZ2l0aHViLmNvbS9raXJhbnNhZ2FyMS8zMDAtcHl0aG9uLUludGVydmlldy1xdWVzdGlvbnMtYW5kLXNvbHV0aW9ucy9maW5kL21haW4iLCJyZXF1ZXN0X2lkIjoiQjQxRDpCMUIwOjY3OENGOUY6NkE5MTRBMTo2M0JEQ0I2RCIsInZpc2l0b3JfaWQiOiI3MzYxOTU0ODM3NjAxMDY2MDgwIiwicmVnaW9uX2VkZ2UiOiJmcmEiLCJyZWdpb25fcmVuZGVyIjoiaWFkIn0=" data-turbo-transient="true" /><meta name="visitor-hmac" content="be6456458f99ee3b94541390c83e744147cadc70260c8252f25ff77b5d159840" data-turbo-transient="true" />


    <meta name="hovercard-subject-tag" content="repository:387432244" data-turbo-transient>


  <meta name="github-keyboard-shortcuts" content="repository,source-code,file-tree" data-turbo-transient="true" />
  

  <meta name="selected-link" value="repo_source" data-turbo-transient>

    <meta name="google-site-verification" content="c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY">
  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
  <meta name="google-site-verification" content="Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I">

<meta name="octolytics-url" content="https://collector.github.com/github/collect" /><meta name="octolytics-actor-id" content="121307557" /><meta name="octolytics-actor-login" content="subbukasturi" /><meta name="octolytics-actor-hash" content="276c10b208cd6360b3dd082db3c1f5c26bcd3c1b274faa80c615340ea0f5ebdd" />

  <meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-turbo-transient="true" />

  




  

    <meta name="user-login" content="subbukasturi">

  <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="viewport" content="width=device-width">
    
      <meta name="description" content="Contribute to kiransagar1/300-python-Interview-questions-and-solutions development by creating an account on GitHub.">
      <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <meta property="fb:app_id" content="1401488693436528">
    <meta name="apple-itunes-app" content="app-id=1477376905" />
      <meta name="twitter:image:src" content="https://opengraph.githubassets.com/9f8ecc21a37a149082e949f63d410c31fc5a9c7c4284c5a06c83435cc6df4432/kiransagar1/300-python-Interview-questions-and-solutions" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:title" content="300-python-Interview-questions-and-solutions/350interview.txt at main · kiransagar1/300-python-Interview-questions-and-solutions" /><meta name="twitter:description" content="Contribute to kiransagar1/300-python-Interview-questions-and-solutions development by creating an account on GitHub." />
      <meta property="og:image" content="https://opengraph.githubassets.com/9f8ecc21a37a149082e949f63d410c31fc5a9c7c4284c5a06c83435cc6df4432/kiransagar1/300-python-Interview-questions-and-solutions" /><meta property="og:image:alt" content="Contribute to kiransagar1/300-python-Interview-questions-and-solutions development by creating an account on GitHub." /><meta property="og:image:width" content="1200" /><meta property="og:image:height" content="600" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="300-python-Interview-questions-and-solutions/350interview.txt at main · kiransagar1/300-python-Interview-questions-and-solutions" /><meta property="og:url" content="https://github.com/kiransagar1/300-python-Interview-questions-and-solutions" /><meta property="og:description" content="Contribute to kiransagar1/300-python-Interview-questions-and-solutions development by creating an account on GitHub." />
      
    <link rel="assets" href="https://github.githubassets.com/">
      <link rel="shared-web-socket" href="wss://alive.github.com/_sockets/u/121307557/ws?session=eyJ2IjoiVjMiLCJ1IjoxMjEzMDc1NTcsInMiOjEwMjEzNDc4MTUsImMiOjQxODgxODA2OTcsInQiOjE2NzMzODI3NjV9--ebd29cede811debbfb3047bdac20dce0360be5c24ed7291ee2beb2bbedbc657d" data-refresh-url="/_alive" data-session-id="d0fd747047550b05807695ff61711811eef78fc07a1ce3d0ef7c23c92a08b67f">
      <link rel="shared-web-socket-src" href="/assets-cdn/worker/socket-worker-b87581f5816c.js">


        <meta name="hostname" content="github.com">


      <meta name="keyboard-shortcuts-preference" content="all">
      <script type="application/json" id="memex_keyboard_shortcuts_preference">"all"</script>

        <meta name="expected-hostname" content="github.com">

    <meta name="enabled-features" content="TURBO_EXPERIMENT_RISKY,IMAGE_METRIC_TRACKING,GEOJSON_AZURE_MAPS">


  <meta http-equiv="x-pjax-version" content="e8ff4ffea7d58987f533a359f8e60b6cc700de9e98c546128abd29b38c4beb3c" data-turbo-track="reload">
  <meta http-equiv="x-pjax-csp-version" content="40aca5a152a13213a876f7628c466cd600db12fb858cdddccc3f1cc387eb7dad" data-turbo-track="reload">
  <meta http-equiv="x-pjax-css-version" content="84e90a841e0beb56d2e626c6e2083ee880b661bdb2fc2776238f477810151643" data-turbo-track="reload">
  <meta http-equiv="x-pjax-js-version" content="b28f61ee241f618b549190f9a658e70037ada99ec07261a073ba9e8c2af6f147" data-turbo-track="reload">

  <meta name="turbo-cache-control" content="no-preview" data-turbo-transient="">

        <meta data-hydrostats="publish">

  <meta name="go-import" content="github.com/kiransagar1/300-python-Interview-questions-and-solutions git https://github.com/kiransagar1/300-python-Interview-questions-and-solutions.git">

  <meta name="octolytics-dimension-user_id" content="68487922" /><meta name="octolytics-dimension-user_login" content="kiransagar1" /><meta name="octolytics-dimension-repository_id" content="387432244" /><meta name="octolytics-dimension-repository_nwo" content="kiransagar1/300-python-Interview-questions-and-solutions" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="387432244" /><meta name="octolytics-dimension-repository_network_root_nwo" content="kiransagar1/300-python-Interview-questions-and-solutions" />



    <link rel="canonical" href="https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt" data-turbo-transient>
  <meta name="turbo-body-classes" content="logged-in env-production page-responsive page-blob">


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <meta name="browser-optimizely-client-errors-url" content="https://api.github.com/_private/browser/optimizely_client/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="alternate icon" class="js-site-favicon" type="image/png" href="https://github.githubassets.com/favicons/favicon.png">
  <link rel="icon" class="js-site-favicon" type="image/svg+xml" href="https://github.githubassets.com/favicons/favicon.svg">

<meta name="theme-color" content="#1e2327">
<meta name="color-scheme" content="dark light" />

  <meta name="msapplication-TileImage" content="/windows-tile.png">
  <meta name="msapplication-TileColor" content="#ffffff">

  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-responsive page-blob" style="word-wrap: break-word;">
    <div data-turbo-body class="logged-in env-production page-responsive page-blob" style="word-wrap: break-word;">
      


    <div class="position-relative js-header-wrapper ">
      <a href="#start-of-content" class="p-3 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content">Skip to content</a>
      <span data-view-component="true" class="progress-pjax-loader Progress position-fixed width-full">
    <span style="width: 0%;" data-view-component="true" class="Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis"></span>
</span>      
      


        <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_decorators_js-node_modules_github_command-pale-4090c9-fc81c2b8560e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_clipboard-copy-element_dist_index_esm_js-node_modules_delegated-e-b37f7d-6dbeacf8e3ba.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_command-palette_items_help-item_ts-app_assets_modules_github_comman-48ad9d-1115dce523df.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/command-palette-f1e16b497655.js"></script>

            <header class="Header js-details-container Details px-3 px-md-4 px-lg-5 flex-wrap flex-md-nowrap" role="banner">

    <div class="Header-item mt-n1 mb-n1  d-none d-md-flex">
      <a
  class="Header-link"
  href="https://github.com/"
  data-hotkey="g d"
  aria-label="Homepage "
  data-turbo="false"
  data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;}"
>
  <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github v-align-middle">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>

    </div>

    <div class="Header-item d-md-none">
        <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="Header-link js-details-target btn-link">    <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-three-bars">
    <path fill-rule="evenodd" d="M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z"></path>
</svg>
</button>    </div>

    <div class="Header-item Header-item--full flex-column flex-md-row width-full flex-order-2 flex-md-order-none mr-0 mt-3 mt-md-0 Details-content--hidden-not-important d-md-flex">
              



<div class="header-search flex-auto position-relative js-site-search flex-self-stretch flex-md-self-auto mb-3 mb-md-0 mr-0 mr-md-3 scoped-search site-scoped-search js-jump-to"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="387432244" data-scoped-search-url="/kiransagar1/300-python-Interview-questions-and-solutions/search" data-owner-scoped-search-url="/users/kiransagar1/search" data-unscoped-search-url="/search" data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/search" accept-charset="UTF-8" method="get">
      <label class="form-control header-search-wrapper input-sm p-0 js-chromeless-input-container header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center">
        <input type="text"
          class="form-control js-site-search-focus header-search-input jump-to-field js-jump-to-field js-site-search-field is-clearable"
          data-hotkey=s,/
          name="q"
          data-test-selector="nav-search-input"
          placeholder="Search or jump to…"
          data-unscoped-placeholder="Search or jump to…"
          data-scoped-placeholder="Search or jump to…"
          autocapitalize="off"
          role="combobox"
          aria-haspopup="listbox"
          aria-expanded="false"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search or jump to…"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations"
          spellcheck="false"
          autocomplete="off"
        >
        <input type="hidden" value="am8XRZFcdeQRgFj1LZ_ybWYYsEOvHNl9mUHxYPPHto9HIiDvylLnaMoGqQILvGlYzkIDIb66JMd2HYbPayCcPw" data-csrf="true" class="js-data-jump-to-suggestions-path-csrf" />
        <input type="hidden" class="js-site-search-type-field" name="type" >
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20" aria-hidden="true" class="mr-1 header-search-key-slash"><path fill="none" stroke="#979A9C" opacity=".4" d="M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z"></path><path fill="#979A9C" d="M11.8 6L8 15.1h-.9L10.8 6h1z"></path></svg>


          <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
            
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="suggestion">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="color-fg-muted">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-owner-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="owner_scoped_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this user">
        In this user
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="" data-item-type="global_search">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg title="Repository" aria-label="Repository" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo js-jump-to-octicon-repo d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
      <svg title="Project" aria-label="Project" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project js-jump-to-octicon-project d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z"></path>
</svg>
      <svg title="Search" aria-label="Search" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search js-jump-to-octicon-search d-none flex-shrink-0">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>

    <div aria-hidden="true" class="border rounded-2 flex-shrink-0 color-bg-subtle px-1 color-fg-muted ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">↵</span>
    </div>
  </a>
</li>


    <li class="d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion">
      <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="m-3 anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
    </li>
</ul>

          </div>
      </label>
</form>  </div>
</div>

        <nav id="global-nav" class="d-flex flex-column flex-md-row flex-self-stretch flex-md-self-auto" aria-label="Global">
    <a class="Header-link py-md-3 d-block d-md-none py-2 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:dashboard:user" aria-label="Dashboard" data-turbo="false" href="/dashboard">Dashboard</a>

  <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-turbo="false" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
      Pull<span class="d-inline d-md-none d-lg-inline"> request</span>s
</a>
  <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-turbo="false" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">Issues</a>

      <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:workspaces context:user" data-turbo="false" data-selected-links="/codespaces /codespaces" href="/codespaces">Codespaces</a>

    <div class="d-flex position-relative">
      <a class="js-selected-navigation-item Header-link flex-auto mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar" data-turbo="false" data-selected-links=" /marketplace" href="/marketplace">Marketplace</a>
    </div>

  <a class="js-selected-navigation-item Header-link mt-md-n3 mb-md-n3 py-2 py-md-3 mr-0 mr-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:explore" data-turbo="false" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">Explore</a>

      <a class="js-selected-navigation-item Header-link d-block d-md-none py-2 py-md-3 border-top border-md-top-0 border-white-fade" data-ga-click="Header, click, Nav menu - item:Sponsors" data-hydro-click="{&quot;event_type&quot;:&quot;sponsors.button_click&quot;,&quot;payload&quot;:{&quot;button&quot;:&quot;HEADER_SPONSORS_DASHBOARD&quot;,&quot;sponsorable_login&quot;:&quot;subbukasturi&quot;,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="0c1aac38d849bcb46e2201e0d213bd88512372f85c9b2785e4ea1701a585d2af" data-turbo="false" data-selected-links=" /sponsors/accounts" href="/sponsors/accounts">Sponsors</a>

    <a class="Header-link d-block d-md-none mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade" data-turbo="false" href="/settings/profile">Settings</a>

    <a class="Header-link d-block d-md-none mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade" data-turbo="false" href="/subbukasturi">
      <img class="avatar avatar-user" loading="lazy" decoding="async" src="https://avatars.githubusercontent.com/u/121307557?s=40&amp;v=4" width="20" height="20" alt="@subbukasturi" />
      subbukasturi
</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-turbo="false" action="/logout" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="YsXJcCxIVtyy_oeG2rAlk69Z94or4GEg2e5X9XR9P3s2X2So9Cjaa_gHExOTuC-EXVOhCBe5SFjRQSsEY5dGHA" />
      <button
        type="submit"
        class="Header-link mr-0 mr-md-3 py-2 py-md-3 border-top border-md-top-0 border-white-fade d-md-none btn-link d-block width-full text-left"
        style="padding-left: 2px;"
        data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;sign out&quot;,&quot;label&quot;:&quot;icon:logout&quot;}"
      >
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-sign-out v-align-middle">
    <path fill-rule="evenodd" d="M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm10.44 4.5H6.75a.75.75 0 000 1.5h5.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25a.75.75 0 000-1.06l-3.25-3.25a.75.75 0 10-1.06 1.06l1.97 1.97z"></path>
</svg>
        Sign out
      </button>
</form></nav>

    </div>

    <div class="Header-item Header-item--full flex-justify-center d-md-none position-relative">
        <a
  class="Header-link"
  href="https://github.com/"
  data-hotkey="g d"
  aria-label="Homepage "
  data-turbo="false"
  data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to dashboard&quot;,&quot;label&quot;:&quot;icon:logo&quot;}"
>
  <svg height="32" aria-hidden="true" viewBox="0 0 16 16" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github v-align-middle">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>

    </div>

    <div class="Header-item mr-0 mr-md-3 flex-order-1 flex-md-order-none">
        

<notification-indicator data-channel="eyJjIjoibm90aWZpY2F0aW9uLWNoYW5nZWQ6MTIxMzA3NTU3IiwidCI6MTY3MzM4Mjc2Nn0=--862bf4e7a13d513bdddef4dd911c744d1fa774432ef1851cd7f5082289d57267" data-indicator-mode="none" data-tooltip-global="You have unread notifications" data-tooltip-unavailable="Notifications are unavailable at the moment." data-tooltip-none="You have no unread notifications" data-view-component="true" class="js-socket-channel">
  <a id="AppHeader-notifications-button" href="/notifications"
    class="Header-link notification-indicator position-relative tooltipped tooltipped-sw"

    

    data-hotkey="g n"
    data-target="notification-indicator.link"
    aria-label="Notifications"

      data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;go to notifications&quot;,&quot;label&quot;:&quot;icon:read&quot;}"
  >

    <span
      data-target="notification-indicator.badge"
      class="mail-status unread" hidden>
    </span>

      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell">
    <path d="M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></path>
</svg>
  </a>

</notification-indicator>
    </div>


    <div class="Header-item position-relative d-none d-md-flex">
        <details class="details-overlay details-reset">
  <summary
    class="Header-link"
    aria-label="Create new…"
    data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;create new&quot;,&quot;label&quot;:&quot;icon:add&quot;}"
  >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-plus">
    <path fill-rule="evenodd" d="M7.75 2a.75.75 0 01.75.75V7h4.25a.75.75 0 110 1.5H8.5v4.25a.75.75 0 11-1.5 0V8.5H2.75a.75.75 0 010-1.5H7V2.75A.75.75 0 017.75 2z"></path>
</svg> <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw">
    
<a role="menuitem" class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a role="menuitem" class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

  <a role="menuitem" class="dropdown-item" href="/codespaces/new">
    New codespace
  </a>

<a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a role="menuitem" class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  </details-menu>
</details>

    </div>

    <div class="Header-item position-relative mr-0 d-none d-md-flex">
        
  <details class="details-overlay details-reset js-feature-preview-indicator-container" data-feature-preview-indicator-src="/users/subbukasturi/feature_preview/indicator_check">

  <summary
    class="Header-link"
    aria-label="View profile and more"
    data-analytics-event="{&quot;category&quot;:&quot;Header&quot;,&quot;action&quot;:&quot;show menu&quot;,&quot;label&quot;:&quot;icon:avatar&quot;}"
  >
    <img src="https://avatars.githubusercontent.com/u/121307557?s=40&amp;v=4" alt="@subbukasturi" size="20" height="20" width="20" data-view-component="true" class="avatar avatar-small circle" />
      <span class="unread-indicator js-feature-preview-indicator" style="top: 1px;" hidden></span>
    <span class="dropdown-caret"></span>
  </summary>
  <details-menu
      class="dropdown-menu dropdown-menu-sw"
      style="width: 180px"
      
      preload>
      <include-fragment src="/users/121307557/menu" loading="lazy">
        <p class="text-center mt-3" data-hide-on-error>
          <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
        </p>
        <p class="ml-1 mb-2 mt-2 color-fg-default" data-show-on-error>
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
          Sorry, something went wrong.
        </p>
      </include-fragment>
  </details-menu>
</details>

    </div>
</header>

            
    </div>

  <div id="start-of-content" class="show-on-focus"></div>







    <div id="js-flash-container" data-turbo-replace>





  <template class="js-flash-template">
    
<div class="flash flash-full   {{ className }}">
  <div class="px-2" >
    <button autofocus class="flash-close js-flash-close" type="button" aria-label="Dismiss this message">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    <div aria-atomic="true" role="alert" class="js-flash-alert">
      
      <div>{{ message }}</div>

    </div>
  </div>
</div>
  </template>
</div>


    
  <include-fragment class="js-notification-shelf-include-fragment" data-base-src="https://github.com/notifications/beta/shelf"></include-fragment>





      <details
  class="details-reset details-overlay details-overlay-dark js-command-palette-dialog"
  id="command-palette-pjax-container"
  data-turbo-replace
>
  <summary aria-label="command palette trigger" tabindex="-1"></summary>
  <details-dialog class="command-palette-details-dialog d-flex flex-column flex-justify-center height-fit" aria-label="command palette">
    <command-palette
      class="command-palette color-bg-default rounded-3 border color-shadow-small"
      return-to=/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt
      user-id="121307557"
      activation-hotkey="Mod+k,Mod+Alt+k"
      command-mode-hotkey="Mod+Shift+k"
      data-action="
        command-palette-input-ready:command-palette#inputReady
        command-palette-page-stack-updated:command-palette#updateInputScope
        itemsUpdated:command-palette#itemsUpdated
        keydown:command-palette#onKeydown
        loadingStateChanged:command-palette#loadingStateChanged
        selectedItemChanged:command-palette#selectedItemChanged
        pageFetchError:command-palette#pageFetchError
      ">

        <command-palette-mode
          data-char="#"
            data-scope-types="[&quot;&quot;]"
            data-placeholder="Search issues and pull requests"
        ></command-palette-mode>
        <command-palette-mode
          data-char="#"
            data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-placeholder="Search issues, pull requests, discussions, and projects"
        ></command-palette-mode>
        <command-palette-mode
          data-char="!"
            data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-placeholder="Search projects"
        ></command-palette-mode>
        <command-palette-mode
          data-char="@"
            data-scope-types="[&quot;&quot;]"
            data-placeholder="Search or jump to a user, organization, or repository"
        ></command-palette-mode>
        <command-palette-mode
          data-char="@"
            data-scope-types="[&quot;owner&quot;]"
            data-placeholder="Search or jump to a repository"
        ></command-palette-mode>
        <command-palette-mode
          data-char="/"
            data-scope-types="[&quot;repository&quot;]"
            data-placeholder="Search files"
        ></command-palette-mode>
        <command-palette-mode
          data-char="?"
        ></command-palette-mode>
        <command-palette-mode
          data-char="&gt;"
            data-placeholder="Run a command"
        ></command-palette-mode>
        <command-palette-mode
          data-char=""
            data-scope-types="[&quot;&quot;]"
            data-placeholder="Search or jump to..."
        ></command-palette-mode>
        <command-palette-mode
          data-char=""
            data-scope-types="[&quot;owner&quot;]"
            data-placeholder="Search or jump to..."
        ></command-palette-mode>
      <command-palette-mode
        class="js-command-palette-default-mode"
        data-char=""
        data-placeholder="Search or jump to..."
      ></command-palette-mode>

      <command-palette-input placeholder="Search or jump to..."

        data-action="
          command-palette-input:command-palette#onInput
          command-palette-select:command-palette#onSelect
          command-palette-descope:command-palette#onDescope
          command-palette-cleared:command-palette#onInputClear
        "
      >
        <div class="js-search-icon d-flex flex-items-center mr-2" style="height: 26px">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search color-fg-muted">
    <path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path>
</svg>
        </div>
        <div class="js-spinner d-flex flex-items-center mr-2 color-fg-muted" hidden>
          <svg aria-label="Loading" class="anim-rotate" viewBox="0 0 16 16" fill="none" width="16" height="16">
            <circle
              cx="8"
              cy="8"
              r="7"
              stroke="currentColor"
              stroke-opacity="0.25"
              stroke-width="2"
              vector-effect="non-scaling-stroke"
            ></circle>
            <path
              d="M15 8a7.002 7.002 0 00-7-7"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              vector-effect="non-scaling-stroke"
            ></path>
          </svg>
        </div>
        <command-palette-scope >
          <div data-target="command-palette-scope.placeholder" hidden class="color-fg-subtle">/&nbsp;&nbsp;<span class="text-semibold color-fg-default">...</span>&nbsp;&nbsp;/&nbsp;&nbsp;</div>
              <command-palette-token
                data-text="kiransagar1"
                data-id="MDQ6VXNlcjY4NDg3OTIy"
                data-type="owner"
                data-value="kiransagar1"
                data-targets="command-palette-scope.tokens"
                class="color-fg-default text-semibold"
                style="white-space:nowrap;line-height:20px;"
                >kiransagar1<span class="color-fg-subtle text-normal">&nbsp;&nbsp;/&nbsp;&nbsp;</span></command-palette-token>
              <command-palette-token
                data-text="300-python-Interview-questions-and-solutions"
                data-id="MDEwOlJlcG9zaXRvcnkzODc0MzIyNDQ="
                data-type="repository"
                data-value="300-python-Interview-questions-and-solutions"
                data-targets="command-palette-scope.tokens"
                class="color-fg-default text-semibold"
                style="white-space:nowrap;line-height:20px;"
                >300-python-Interv...<span class="color-fg-subtle text-normal">&nbsp;&nbsp;/&nbsp;&nbsp;</span></command-palette-token>
        </command-palette-scope>
        <div class="command-palette-input-group flex-1 form-control border-0 box-shadow-none" style="z-index: 0">
          <div class="command-palette-typeahead position-absolute d-flex flex-items-center Truncate">
            <span class="typeahead-segment input-mirror" data-target="command-palette-input.mirror"></span>
            <span class="Truncate-text" data-target="command-palette-input.typeaheadText"></span>
            <span class="typeahead-segment" data-target="command-palette-input.typeaheadPlaceholder"></span>
          </div>
          <input
            class="js-overlay-input typeahead-input d-none"
            disabled
            tabindex="-1"
            aria-label="Hidden input for typeahead"
          >
          <input
            type="text"
            autocomplete="off"
            autocorrect="off"
            autocapitalize="off"
            spellcheck="false"
            class="js-input typeahead-input form-control border-0 box-shadow-none input-block width-full no-focus-indicator"
            aria-label="Command palette input"
            aria-haspopup="listbox"
            aria-expanded="false"
            aria-autocomplete="list"
            aria-controls="command-palette-page-stack"
            role="combobox"
            data-action="
              input:command-palette-input#onInput
              keydown:command-palette-input#onKeydown
            "
          >
        </div>
          <div data-view-component="true" class="position-relative d-inline-block">
    <button aria-keyshortcuts="Control+Backspace" data-action="click:command-palette-input#onClear keypress:command-palette-input#onClear" data-target="command-palette-input.clearButton" id="command-palette-clear-button" hidden="hidden" type="button" data-view-component="true" class="btn-octicon command-palette-input-clear-button">      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x-circle-fill">
    <path fill-rule="evenodd" d="M2.343 13.657A8 8 0 1113.657 2.343 8 8 0 012.343 13.657zM6.03 4.97a.75.75 0 00-1.06 1.06L6.94 8 4.97 9.97a.75.75 0 101.06 1.06L8 9.06l1.97 1.97a.75.75 0 101.06-1.06L9.06 8l1.97-1.97a.75.75 0 10-1.06-1.06L8 6.94 6.03 4.97z"></path>
</svg>
</button>    <tool-tip for="command-palette-clear-button" data-direction="w" data-type="label" data-view-component="true" class="sr-only position-absolute">Clear Command Palette</tool-tip>
</div>
      </command-palette-input>

      <command-palette-page-stack
        data-default-scope-id="MDEwOlJlcG9zaXRvcnkzODc0MzIyNDQ="
        data-default-scope-type="Repository"
        data-action="command-palette-page-octicons-cached:command-palette-page-stack#cacheOcticons"
      >
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">#</kbd> to search pull requests
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">#</kbd> to search issues
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">#</kbd> to search discussions
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">!</kbd> to search projects
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;owner&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">@</kbd> to search teams
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">@</kbd> to search people and organizations
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type <kbd class="hx_kbd">&gt;</kbd> to activate command mode
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode=""
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Go to your accessibility settings to change your keyboard shortcuts
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode="#"
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type author:@me to search your content
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode="#"
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type is:pr to filter to pull requests
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode="#"
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type is:issue to filter to issues
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
            data-mode="#"
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type is:project to filter to projects
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
          <command-palette-tip
            class="color-fg-muted f6 px-3 py-1 my-2"
              data-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
            data-mode="#"
            data-value="">
            <div class="d-flex flex-items-start flex-justify-between">
              <div>
                <span class="text-bold">Tip:</span>
                  Type is:open to filter to open content
              </div>
              <div class="ml-2 flex-shrink-0">
                Type <kbd class="hx_kbd">?</kbd> for help and tips
              </div>
            </div>
          </command-palette-tip>
        <command-palette-tip class="mx-3 my-2 flash flash-error d-flex flex-items-center" data-scope-types="*" data-on-error>
          <div>
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
          </div>
          <div class="px-2">
            We’ve encountered an error and some results aren't available at this time. Type a new search or try again later.
          </div>
        </command-palette-tip>
        <command-palette-tip class="h4 color-fg-default pl-3 pb-2 pt-3" data-on-empty data-scope-types="*" data-match-mode="[^?]|^$">
          No results matched your search
        </command-palette-tip>

        <div hidden>

            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="arrow-right-color-fg-muted">
              <svg height="16" class="octicon octicon-arrow-right color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="arrow-right-color-fg-default">
              <svg height="16" class="octicon octicon-arrow-right color-fg-default" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="codespaces-color-fg-muted">
              <svg height="16" class="octicon octicon-codespaces color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 1.75C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 01-1.75 1.75h-8.5A1.75 1.75 0 012 6.75v-5zm1.75-.25a.25.25 0 00-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 00.25-.25v-5a.25.25 0 00-.25-.25h-8.5zM0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25v-3zM1.75 11a.25.25 0 00-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 00.25-.25v-3a.25.25 0 00-.25-.25H1.75z"></path><path fill-rule="evenodd" d="M3 12.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zm4 0a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="copy-color-fg-muted">
              <svg height="16" class="octicon octicon-copy color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="dash-color-fg-muted">
              <svg height="16" class="octicon octicon-dash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 7.75A.75.75 0 012.75 7h10a.75.75 0 010 1.5h-10A.75.75 0 012 7.75z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="file-color-fg-muted">
              <svg height="16" class="octicon octicon-file color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M3.75 1.5a.25.25 0 00-.25.25v12.5c0 .138.112.25.25.25h9.5a.25.25 0 00.25-.25V6h-2.75A1.75 1.75 0 019 4.25V1.5H3.75zm6.75.062V4.25c0 .138.112.25.25.25h2.688a.252.252 0 00-.011-.013l-2.914-2.914a.272.272 0 00-.013-.011zM2 1.75C2 .784 2.784 0 3.75 0h6.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v9.586A1.75 1.75 0 0113.25 16h-9.5A1.75 1.75 0 012 14.25V1.75z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="gear-color-fg-muted">
              <svg height="16" class="octicon octicon-gear color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.429 1.525a6.593 6.593 0 011.142 0c.036.003.108.036.137.146l.289 1.105c.147.56.55.967.997 1.189.174.086.341.183.501.29.417.278.97.423 1.53.27l1.102-.303c.11-.03.175.016.195.046.219.31.41.641.573.989.014.031.022.11-.059.19l-.815.806c-.411.406-.562.957-.53 1.456a4.588 4.588 0 010 .582c-.032.499.119 1.05.53 1.456l.815.806c.08.08.073.159.059.19a6.494 6.494 0 01-.573.99c-.02.029-.086.074-.195.045l-1.103-.303c-.559-.153-1.112-.008-1.529.27-.16.107-.327.204-.5.29-.449.222-.851.628-.998 1.189l-.289 1.105c-.029.11-.101.143-.137.146a6.613 6.613 0 01-1.142 0c-.036-.003-.108-.037-.137-.146l-.289-1.105c-.147-.56-.55-.967-.997-1.189a4.502 4.502 0 01-.501-.29c-.417-.278-.97-.423-1.53-.27l-1.102.303c-.11.03-.175-.016-.195-.046a6.492 6.492 0 01-.573-.989c-.014-.031-.022-.11.059-.19l.815-.806c.411-.406.562-.957.53-1.456a4.587 4.587 0 010-.582c.032-.499-.119-1.05-.53-1.456l-.815-.806c-.08-.08-.073-.159-.059-.19a6.44 6.44 0 01.573-.99c.02-.029.086-.075.195-.045l1.103.303c.559.153 1.112.008 1.529-.27.16-.107.327-.204.5-.29.449-.222.851-.628.998-1.189l.289-1.105c.029-.11.101-.143.137-.146zM8 0c-.236 0-.47.01-.701.03-.743.065-1.29.615-1.458 1.261l-.29 1.106c-.017.066-.078.158-.211.224a5.994 5.994 0 00-.668.386c-.123.082-.233.09-.3.071L3.27 2.776c-.644-.177-1.392.02-1.82.63a7.977 7.977 0 00-.704 1.217c-.315.675-.111 1.422.363 1.891l.815.806c.05.048.098.147.088.294a6.084 6.084 0 000 .772c.01.147-.038.246-.088.294l-.815.806c-.474.469-.678 1.216-.363 1.891.2.428.436.835.704 1.218.428.609 1.176.806 1.82.63l1.103-.303c.066-.019.176-.011.299.071.213.143.436.272.668.386.133.066.194.158.212.224l.289 1.106c.169.646.715 1.196 1.458 1.26a8.094 8.094 0 001.402 0c.743-.064 1.29-.614 1.458-1.26l.29-1.106c.017-.066.078-.158.211-.224a5.98 5.98 0 00.668-.386c.123-.082.233-.09.3-.071l1.102.302c.644.177 1.392-.02 1.82-.63.268-.382.505-.789.704-1.217.315-.675.111-1.422-.364-1.891l-.814-.806c-.05-.048-.098-.147-.088-.294a6.1 6.1 0 000-.772c-.01-.147.039-.246.088-.294l.814-.806c.475-.469.679-1.216.364-1.891a7.992 7.992 0 00-.704-1.218c-.428-.609-1.176-.806-1.82-.63l-1.103.303c-.066.019-.176.011-.299-.071a5.991 5.991 0 00-.668-.386c-.133-.066-.194-.158-.212-.224L10.16 1.29C9.99.645 9.444.095 8.701.031A8.094 8.094 0 008 0zm1.5 8a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM11 8a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="lock-color-fg-muted">
              <svg height="16" class="octicon octicon-lock color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 4v2h-.25A1.75 1.75 0 002 7.75v5.5c0 .966.784 1.75 1.75 1.75h8.5A1.75 1.75 0 0014 13.25v-5.5A1.75 1.75 0 0012.25 6H12V4a4 4 0 10-8 0zm6.5 2V4a2.5 2.5 0 00-5 0v2h5zM12 7.5h.25a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-8.5a.25.25 0 01-.25-.25v-5.5a.25.25 0 01.25-.25H12z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="moon-color-fg-muted">
              <svg height="16" class="octicon octicon-moon color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.598 1.591a.75.75 0 01.785-.175 7 7 0 11-8.967 8.967.75.75 0 01.961-.96 5.5 5.5 0 007.046-7.046.75.75 0 01.175-.786zm1.616 1.945a7 7 0 01-7.678 7.678 5.5 5.5 0 107.678-7.678z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="person-color-fg-muted">
              <svg height="16" class="octicon octicon-person color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M10.5 5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm.061 3.073a4 4 0 10-5.123 0 6.004 6.004 0 00-3.431 5.142.75.75 0 001.498.07 4.5 4.5 0 018.99 0 .75.75 0 101.498-.07 6.005 6.005 0 00-3.432-5.142z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="pencil-color-fg-muted">
              <svg height="16" class="octicon octicon-pencil color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="issue-opened-open">
              <svg height="16" class="octicon octicon-issue-opened open" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path><path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="git-pull-request-draft-color-fg-muted">
              <svg height="16" class="octicon octicon-git-pull-request-draft color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M2.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.25 1a2.25 2.25 0 00-.75 4.372v5.256a2.251 2.251 0 101.5 0V5.372A2.25 2.25 0 003.25 1zm0 11a.75.75 0 100 1.5.75.75 0 000-1.5zm9.5 3a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5zm0-3a.75.75 0 100 1.5.75.75 0 000-1.5z"></path><path d="M14 7.5a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zm0-4.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="search-color-fg-muted">
              <svg height="16" class="octicon octicon-search color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="sun-color-fg-muted">
              <svg height="16" class="octicon octicon-sun color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 10.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM8 12a4 4 0 100-8 4 4 0 000 8zM8 0a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0V.75A.75.75 0 018 0zm0 13a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 018 13zM2.343 2.343a.75.75 0 011.061 0l1.06 1.061a.75.75 0 01-1.06 1.06l-1.06-1.06a.75.75 0 010-1.06zm9.193 9.193a.75.75 0 011.06 0l1.061 1.06a.75.75 0 01-1.06 1.061l-1.061-1.06a.75.75 0 010-1.061zM16 8a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0116 8zM3 8a.75.75 0 01-.75.75H.75a.75.75 0 010-1.5h1.5A.75.75 0 013 8zm10.657-5.657a.75.75 0 010 1.061l-1.061 1.06a.75.75 0 11-1.06-1.06l1.06-1.06a.75.75 0 011.06 0zm-9.193 9.193a.75.75 0 010 1.06l-1.06 1.061a.75.75 0 11-1.061-1.06l1.06-1.061a.75.75 0 011.061 0z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="sync-color-fg-muted">
              <svg height="16" class="octicon octicon-sync color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.5a5.487 5.487 0 00-4.131 1.869l1.204 1.204A.25.25 0 014.896 6H1.25A.25.25 0 011 5.75V2.104a.25.25 0 01.427-.177l1.38 1.38A7.001 7.001 0 0114.95 7.16a.75.75 0 11-1.49.178A5.501 5.501 0 008 2.5zM1.705 8.005a.75.75 0 01.834.656 5.501 5.501 0 009.592 2.97l-1.204-1.204a.25.25 0 01.177-.427h3.646a.25.25 0 01.25.25v3.646a.25.25 0 01-.427.177l-1.38-1.38A7.001 7.001 0 011.05 8.84a.75.75 0 01.656-.834z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="trash-color-fg-muted">
              <svg height="16" class="octicon octicon-trash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="key-color-fg-muted">
              <svg height="16" class="octicon octicon-key color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M6.5 5.5a4 4 0 112.731 3.795.75.75 0 00-.768.18L7.44 10.5H6.25a.75.75 0 00-.75.75v1.19l-.06.06H4.25a.75.75 0 00-.75.75v1.19l-.06.06H1.75a.25.25 0 01-.25-.25v-1.69l5.024-5.023a.75.75 0 00.181-.768A3.995 3.995 0 016.5 5.5zm4-5.5a5.5 5.5 0 00-5.348 6.788L.22 11.72a.75.75 0 00-.22.53v2C0 15.216.784 16 1.75 16h2a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V14h.75a.75.75 0 00.53-.22l.5-.5a.75.75 0 00.22-.53V12h.75a.75.75 0 00.53-.22l.932-.932A5.5 5.5 0 1010.5 0zm.5 6a1 1 0 100-2 1 1 0 000 2z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="comment-discussion-color-fg-muted">
              <svg height="16" class="octicon octicon-comment-discussion color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 2.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v5.5a.25.25 0 01-.25.25h-3.5a.75.75 0 00-.53.22L3.5 11.44V9.25a.75.75 0 00-.75-.75h-1a.25.25 0 01-.25-.25v-5.5zM1.75 1A1.75 1.75 0 000 2.75v5.5C0 9.216.784 10 1.75 10H2v1.543a1.457 1.457 0 002.487 1.03L7.061 10h3.189A1.75 1.75 0 0012 8.25v-5.5A1.75 1.75 0 0010.25 1h-8.5zM14.5 4.75a.25.25 0 00-.25-.25h-.5a.75.75 0 110-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0114.25 12H14v1.543a1.457 1.457 0 01-2.487 1.03L9.22 12.28a.75.75 0 111.06-1.06l2.22 2.22v-2.19a.75.75 0 01.75-.75h1a.25.25 0 00.25-.25v-5.5z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="bell-color-fg-muted">
              <svg height="16" class="octicon octicon-bell color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path d="M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="bell-slash-color-fg-muted">
              <svg height="16" class="octicon octicon-bell-slash color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1.5c-.997 0-1.895.416-2.534 1.086A.75.75 0 014.38 1.55 5 5 0 0113 5v2.373a.75.75 0 01-1.5 0V5A3.5 3.5 0 008 1.5zM4.182 4.31L1.19 2.143a.75.75 0 10-.88 1.214L3 5.305v2.642a.25.25 0 01-.042.139L1.255 10.64A1.518 1.518 0 002.518 13h11.108l1.184.857a.75.75 0 10.88-1.214l-1.375-.996a1.196 1.196 0 00-.013-.01L4.198 4.321a.733.733 0 00-.016-.011zm7.373 7.19L4.5 6.391v1.556c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01.015.015 0 00.005.012.017.017 0 00.006.004l.007.001h9.037zM8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path></svg>
            </div>
            <div data-targets="command-palette-page-stack.localOcticons" data-octicon-id="paintbrush-color-fg-muted">
              <svg height="16" class="octicon octicon-paintbrush color-fg-muted" viewBox="0 0 16 16" version="1.1" width="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.134 1.535C9.722 2.562 8.16 4.057 6.889 5.312 5.8 6.387 5.041 7.401 4.575 8.294a3.745 3.745 0 00-3.227 1.054c-.43.431-.69 1.066-.86 1.657a11.982 11.982 0 00-.358 1.914A21.263 21.263 0 000 15.203v.054l.75-.007-.007.75h.054a14.404 14.404 0 00.654-.012 21.243 21.243 0 001.63-.118c.62-.07 1.3-.18 1.914-.357.592-.17 1.226-.43 1.657-.861a3.745 3.745 0 001.055-3.217c.908-.461 1.942-1.216 3.04-2.3 1.279-1.262 2.764-2.825 3.775-4.249.501-.706.923-1.428 1.125-2.096.2-.659.235-1.469-.368-2.07-.606-.607-1.42-.55-2.069-.34-.66.213-1.376.646-2.076 1.155zm-3.95 8.48a3.76 3.76 0 00-1.19-1.192 9.758 9.758 0 011.161-1.607l1.658 1.658a9.853 9.853 0 01-1.63 1.142zM.742 16l.007-.75-.75.008A.75.75 0 00.743 16zM12.016 2.749c-1.224.89-2.605 2.189-3.822 3.384l1.718 1.718c1.21-1.205 2.51-2.597 3.387-3.833.47-.662.78-1.227.912-1.662.134-.444.032-.551.009-.575h-.001V1.78c-.014-.014-.112-.113-.548.027-.432.14-.995.462-1.655.942zM1.62 13.089a19.56 19.56 0 00-.104 1.395 19.55 19.55 0 001.396-.104 10.528 10.528 0 001.668-.309c.526-.151.856-.325 1.011-.48a2.25 2.25 0 00-3.182-3.182c-.155.155-.329.485-.48 1.01a10.515 10.515 0 00-.309 1.67z"></path></svg>
            </div>

            <command-palette-item-group
              data-group-id="top"
              data-group-title="Top result"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="0"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="commands"
              data-group-title="Commands"
              data-group-hint="Type &gt; to filter"
              data-group-limits="{&quot;static_items_page&quot;:50,&quot;issue&quot;:50,&quot;pull_request&quot;:50,&quot;discussion&quot;:50}"
              data-default-priority="1"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="global_commands"
              data-group-title="Global Commands"
              data-group-hint="Type &gt; to filter"
              data-group-limits="{&quot;issue&quot;:0,&quot;pull_request&quot;:0,&quot;discussion&quot;:0}"
              data-default-priority="2"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="this_page"
              data-group-title="This Page"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="3"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="files"
              data-group-title="Files"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="4"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="default"
              data-group-title="Default"
              data-group-hint=""
              data-group-limits="{&quot;static_items_page&quot;:50}"
              data-default-priority="5"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="pages"
              data-group-title="Pages"
              data-group-hint=""
              data-group-limits="{&quot;repository&quot;:10}"
              data-default-priority="6"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="access_policies"
              data-group-title="Access Policies"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="7"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="organizations"
              data-group-title="Organizations"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="8"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="repositories"
              data-group-title="Repositories"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="9"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="references"
              data-group-title="Issues, pull requests, and discussions"
              data-group-hint="Type # to filter"
              data-group-limits="{}"
              data-default-priority="10"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="teams"
              data-group-title="Teams"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="11"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="users"
              data-group-title="Users"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="12"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="projects"
              data-group-title="Projects"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="13"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="footer"
              data-group-title="Footer"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="14"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="modes_help"
              data-group-title="Modes"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="15"
            >
            </command-palette-item-group>
            <command-palette-item-group
              data-group-id="filters_help"
              data-group-title="Use filters in issues, pull requests, discussions, and projects"
              data-group-hint=""
              data-group-limits="{}"
              data-default-priority="16"
            >
            </command-palette-item-group>

            <command-palette-page
              data-page-title="kiransagar1"
              data-scope-id="MDQ6VXNlcjY4NDg3OTIy"
              data-scope-type="owner"
              data-targets="command-palette-page-stack.defaultPages"
              hidden
            >
            </command-palette-page>
            <command-palette-page
              data-page-title="300-python-Interview-questions-and-solutions"
              data-scope-id="MDEwOlJlcG9zaXRvcnkzODc0MzIyNDQ="
              data-scope-type="repository"
              data-targets="command-palette-page-stack.defaultPages"
              hidden
            >
            </command-palette-page>
        </div>

        <command-palette-page data-is-root>
        </command-palette-page>
          <command-palette-page
            data-page-title="kiransagar1"
            data-scope-id="MDQ6VXNlcjY4NDg3OTIy"
            data-scope-type="owner"
          >
          </command-palette-page>
          <command-palette-page
            data-page-title="300-python-Interview-questions-and-solutions"
            data-scope-id="MDEwOlJlcG9zaXRvcnkzODc0MzIyNDQ="
            data-scope-type="repository"
          >
          </command-palette-page>
      </command-palette-page-stack>

      <server-defined-provider data-type="search-links" data-targets="command-palette.serverDefinedProviderElements"></server-defined-provider>
      <server-defined-provider data-type="help" data-targets="command-palette.serverDefinedProviderElements">
          <command-palette-help
            data-group="modes_help"
              data-prefix="#"
              data-scope-types="[&quot;&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>issues</strong> and <strong>pull requests</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">#</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="#"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>issues, pull requests, discussions,</strong> and <strong>projects</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">#</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="@"
              data-scope-types="[&quot;&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>organizations, repositories,</strong> and <strong>users</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">@</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="!"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>projects</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">!</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="/"
              data-scope-types="[&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Search for <strong>files</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">/</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="modes_help"
              data-prefix="&gt;"
          >
            <span data-target="command-palette-help.titleElement">Activate <strong>command mode</strong></span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd">&gt;</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# author:@me"
          >
            <span data-target="command-palette-help.titleElement">Search your issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># author:@me</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# author:@me"
          >
            <span data-target="command-palette-help.titleElement">Search your issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># author:@me</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:pr"
          >
            <span data-target="command-palette-help.titleElement">Filter to pull requests</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:pr</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:issue"
          >
            <span data-target="command-palette-help.titleElement">Filter to issues</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:issue</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:discussion"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Filter to discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:discussion</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:project"
              data-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          >
            <span data-target="command-palette-help.titleElement">Filter to projects</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:project</kbd>
              </span>
          </command-palette-help>
          <command-palette-help
            data-group="filters_help"
              data-prefix="# is:open"
          >
            <span data-target="command-palette-help.titleElement">Filter to open issues, pull requests, and discussions</span>
              <span data-target="command-palette-help.hintElement">
                <kbd class="hx_kbd"># is:open</kbd>
              </span>
          </command-palette-help>
      </server-defined-provider>

        <server-defined-provider
          data-type="commands"
          data-fetch-debounce="0"
            data-src="/command_palette/commands"
          data-supported-modes="[]"
            data-supports-commands
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="prefetched"
          data-fetch-debounce="0"
            data-src="/command_palette/jump_to_page_navigation"
          data-supported-modes="[&quot;&quot;]"
            data-supported-scope-types="[&quot;&quot;,&quot;owner&quot;,&quot;repository&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/issues"
          data-supported-modes="[&quot;#&quot;,&quot;#&quot;]"
            data-supported-scope-types="[&quot;owner&quot;,&quot;repository&quot;,&quot;&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/jump_to"
          data-supported-modes="[&quot;@&quot;,&quot;@&quot;]"
            data-supported-scope-types="[&quot;&quot;,&quot;owner&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/jump_to_members_only"
          data-supported-modes="[&quot;@&quot;,&quot;@&quot;,&quot;&quot;,&quot;&quot;]"
            data-supported-scope-types="[&quot;&quot;,&quot;owner&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="prefetched"
          data-fetch-debounce="0"
            data-src="/command_palette/jump_to_members_only_prefetched"
          data-supported-modes="[&quot;@&quot;,&quot;@&quot;,&quot;&quot;,&quot;&quot;]"
            data-supported-scope-types="[&quot;&quot;,&quot;owner&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="files"
          data-fetch-debounce="0"
            data-src="/command_palette/files"
          data-supported-modes="[&quot;/&quot;]"
            data-supported-scope-types="[&quot;repository&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/discussions"
          data-supported-modes="[&quot;#&quot;]"
            data-supported-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/projects"
          data-supported-modes="[&quot;#&quot;,&quot;!&quot;]"
            data-supported-scope-types="[&quot;owner&quot;,&quot;repository&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="prefetched"
          data-fetch-debounce="0"
            data-src="/command_palette/recent_issues"
          data-supported-modes="[&quot;#&quot;,&quot;#&quot;]"
            data-supported-scope-types="[&quot;owner&quot;,&quot;repository&quot;,&quot;&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/teams"
          data-supported-modes="[&quot;@&quot;,&quot;&quot;]"
            data-supported-scope-types="[&quot;owner&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
        <server-defined-provider
          data-type="remote"
          data-fetch-debounce="200"
            data-src="/command_palette/name_with_owner_repository"
          data-supported-modes="[&quot;@&quot;,&quot;@&quot;,&quot;&quot;,&quot;&quot;]"
            data-supported-scope-types="[&quot;&quot;,&quot;owner&quot;]"
          
          data-targets="command-palette.serverDefinedProviderElements"
          ></server-defined-provider>
    </command-palette>
  </details-dialog>
</details>

<div class="position-fixed bottom-0 left-0 ml-5 mb-5 js-command-palette-toasts" style="z-index: 1000">
  <div hidden class="Toast Toast--loading">
    <span class="Toast-icon">
      <svg class="Toast--spinner" viewBox="0 0 32 32" width="18" height="18" aria-hidden="true">
        <path
          fill="#959da5"
          d="M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4"
        />
        <path fill="#ffffff" d="M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z"></path>
      </svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast Toast--error">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-stop">
    <path fill-rule="evenodd" d="M4.47.22A.75.75 0 015 0h6a.75.75 0 01.53.22l4.25 4.25c.141.14.22.331.22.53v6a.75.75 0 01-.22.53l-4.25 4.25A.75.75 0 0111 16H5a.75.75 0 01-.53-.22L.22 11.53A.75.75 0 010 11V5a.75.75 0 01.22-.53L4.47.22zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5H5.31zM8 4a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 018 4zm0 8a1 1 0 100-2 1 1 0 000 2z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast Toast--warning">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>


  <div hidden class="anim-fade-in fast Toast Toast--success">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>

  <div hidden class="anim-fade-in fast Toast">
    <span class="Toast-icon">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-info">
    <path fill-rule="evenodd" d="M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z"></path>
</svg>
    </span>
    <span class="Toast-content"></span>
  </div>
</div>


  <div
    class="application-main "
    data-commit-hovercards-enabled
    data-discussion-hovercards-enabled
    data-issue-and-pr-hovercards-enabled
  >
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main id="js-repo-pjax-container" >
      
  


    





  
  <div id="repository-container-header"  class="pt-3 hide-full-screen" style="background-color: var(--color-page-header-bg);" data-turbo-replace>

      <div class="d-flex flex-wrap flex-justify-end mb-3  px-3 px-md-4 px-lg-5" style="gap: 1rem;">

        <div class="flex-auto min-width-0 width-fit mr-3">
            
  <div class=" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo color-fg-muted mr-2">
    <path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"></path>
</svg>
    
    <span class="author flex-self-stretch" itemprop="author">
      <a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/users/kiransagar1/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/kiransagar1">kiransagar1</a>
    </span>
    <span class="mx-1 flex-self-stretch color-fg-muted">/</span>
    <strong itemprop="name" class="mr-2 flex-self-stretch">
      <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="/kiransagar1/300-python-Interview-questions-and-solutions">300-python-Interview-questions-and-solutions</a>
    </strong>

    <span></span><span class="Label Label--secondary v-align-middle mr-1">Public</span>
  </div>


        </div>

          <ul class="pagehead-actions flex-shrink-0 d-none d-md-inline" style="padding: 2px 0;">

      

  <li>
          <notifications-list-subscription-form
      data-action="notifications-dialog-label-toggled:notifications-list-subscription-form#handleDialogLabelToggle"
      class="f5 position-relative"
    >
      <details
        class="details-reset details-overlay f5 position-relative"
        data-target="notifications-list-subscription-form.details"
        data-action="toggle:notifications-list-subscription-form#detailsToggled"
      >

        <summary data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;WATCH_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="de55e34facd6a23610e407328226b60bd8d83e31390b8b93716dfa215cb39966" data-ga-click="Repository, click Watch settings, action:blob#show" aria-label="Notification settings" data-view-component="true" class="btn-sm btn">    <span data-menu-button>
            <span
              hidden
              
              data-target="notifications-list-subscription-form.unwatchButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-eye">
    <path fill-rule="evenodd" d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"></path>
</svg>
              Unwatch
            </span>
            <span
              hidden
              
              data-target="notifications-list-subscription-form.stopIgnoringButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell-slash">
    <path fill-rule="evenodd" d="M8 1.5c-.997 0-1.895.416-2.534 1.086A.75.75 0 014.38 1.55 5 5 0 0113 5v2.373a.75.75 0 01-1.5 0V5A3.5 3.5 0 008 1.5zM4.182 4.31L1.19 2.143a.75.75 0 10-.88 1.214L3 5.305v2.642a.25.25 0 01-.042.139L1.255 10.64A1.518 1.518 0 002.518 13h11.108l1.184.857a.75.75 0 10.88-1.214l-1.375-.996a1.196 1.196 0 00-.013-.01L4.198 4.321a.733.733 0 00-.016-.011zm7.373 7.19L4.5 6.391v1.556c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01.015.015 0 00.005.012.017.017 0 00.006.004l.007.001h9.037zM8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z"></path>
</svg>
              Stop ignoring
            </span>
            <span
              
              
              data-target="notifications-list-subscription-form.watchButtonCopy"
            >
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-eye">
    <path fill-rule="evenodd" d="M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z"></path>
</svg>
              Watch
            </span>
          </span>
            <span id="repo-notifications-counter" data-target="notifications-list-subscription-form.socialCount" data-pjax-replace="true" data-turbo-replace="true" title="6" data-view-component="true" class="Counter">6</span>
          <span class="dropdown-caret"></span>
</summary>
        <details-menu
          class="SelectMenu  "
          role="menu"
          data-target="notifications-list-subscription-form.menu"
          
        >
          <div class="SelectMenu-modal notifications-component-menu-modal">
            <header class="SelectMenu-header">
              <h3 class="SelectMenu-title">Notifications</h3>
              <button class="SelectMenu-closeButton" type="button" aria-label="Close menu" data-action="click:notifications-list-subscription-form#closeMenu">
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
              </button>
            </header>

            <div class="SelectMenu-list">
              <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-target="notifications-list-subscription-form.form" data-action="submit:notifications-list-subscription-form#submitForm" data-turbo="false" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="u4qx6DZp-f9P-WqLqAqKxEsGehWRoiWSsANb3EXppXrSDR7qzh_iQXhKmM1gQxGHaBjstwDUquxtWmQ9UTorJw" autocomplete="off" />

                <input type="hidden" name="repository_id" value="387432244">

                <button
                  type="submit"
                  name="do"
                  value="included"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="true"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                  
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      Participating and @mentions
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Only receive notifications from this repository when participating or @mentioned.
                    </div>
                  </div>
                </button>

                <button
                  type="submit"
                  name="do"
                  value="subscribed"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="false"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      All Activity
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Notified of all notifications on this repository.
                    </div>
                  </div>
                </button>

                <button
                  type="submit"
                  name="do"
                  value="ignore"
                  class="SelectMenu-item flex-items-start"
                  role="menuitemradio"
                  aria-checked="false"
                  data-targets="notifications-list-subscription-form.subscriptionButtons"
                >
                  <span class="f5">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                  </span>
                  <div>
                    <div class="f5 text-bold">
                      Ignore
                    </div>
                    <div class="text-small color-fg-muted text-normal pb-1">
                      Never be notified.
                    </div>
                  </div>
                </button>
</form>
              <button
                class="SelectMenu-item flex-items-start pr-3"
                type="button"
                role="menuitemradio"
                data-target="notifications-list-subscription-form.customButton"
                data-action="click:notifications-list-subscription-form#openCustomDialog"
                aria-haspopup="true"
                aria-checked="false"
                
              >
                <span class="f5">
                  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
                </span>
                <div>
                  <div class="d-flex flex-items-start flex-justify-between">
                    <div class="f5 text-bold">Custom</div>
                    <div class="f5 pr-1">
                      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-right">
    <path fill-rule="evenodd" d="M8.22 2.97a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06l2.97-2.97H3.75a.75.75 0 010-1.5h7.44L8.22 4.03a.75.75 0 010-1.06z"></path>
</svg>
                    </div>
                  </div>
                  <div class="text-small color-fg-muted text-normal pb-1">
                    Select events you want to be notified of in addition to participating and @mentions.
                  </div>
                </div>
              </button>

            </div>
          </div>
        </details-menu>

        <details-dialog
          class="notifications-component-dialog "
          data-target="notifications-list-subscription-form.customDialog"
          aria-label="Custom dialog"
          hidden
        >
          <div class="SelectMenu-modal notifications-component-dialog-modal overflow-visible">
            <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-target="notifications-list-subscription-form.customform" data-action="submit:notifications-list-subscription-form#submitCustomForm" data-turbo="false" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="KClwZCoiLJb-9b0NoZkUHjH3f223Htv8GZpIbZ6sEF5Brt9m0lQ3KMlGT0tp0I9dEunpzyZoVILEw3eMin-eAw" autocomplete="off" />

              <input type="hidden" name="repository_id" value="387432244">

              <header class="d-sm-none SelectMenu-header pb-0 border-bottom-0 px-2 px-sm-3">
                <h1 class="f3 SelectMenu-title d-inline-flex">
                  <button
                    class="color-bg-default border-0 px-2 py-0 m-0 Link--secondary f5"
                    aria-label="Return to menu"
                    type="button"
                    data-action="click:notifications-list-subscription-form#closeCustomDialog"
                  >
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-left">
    <path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path>
</svg>
                  </button>
                  Custom
                </h1>
              </header>

              <header class="d-none d-sm-flex flex-items-start pt-1">
                <button
                  class="border-0 px-2 pt-1 m-0 Link--secondary f5"
                  style="background-color: transparent;"
                  aria-label="Return to menu"
                  type="button"
                  data-action="click:notifications-list-subscription-form#closeCustomDialog"
                >
                  <svg style="position: relative; left: 2px; top: 1px" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-arrow-left">
    <path fill-rule="evenodd" d="M7.78 12.53a.75.75 0 01-1.06 0L2.47 8.28a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 1.06L4.81 7h7.44a.75.75 0 010 1.5H4.81l2.97 2.97a.75.75 0 010 1.06z"></path>
</svg>
                </button>

                <h1 class="pt-1 pr-4 pb-0 pl-0 f5 text-bold">
                  Custom
                </h1>
              </header>

              <fieldset>
                <legend>
                  <div class="text-small color-fg-muted pt-0 pr-3 pb-3 pl-6 pl-sm-5 border-bottom mb-3">
                    Select events you want to be notified of in addition to participating and @mentions.
                  </div>
                </legend>
                <div data-target="notifications-list-subscription-form.labelInputs">
                </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Issue"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Issues
                    </label>


                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="PullRequest"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Pull requests
                    </label>


                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Release"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Releases
                    </label>


                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="Discussion"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                          aria-describedby="Discussion-disabled"
                          aria-disabled="true"
                      >
                      Discussions
                    </label>

                      <div
                        id="Discussion-disabled"
                        class="color-fg-muted"
                        >
                        Discussions are not enabled for this repository
                      </div>

                  </div>
                  <div class="form-checkbox mr-3 ml-6 ml-sm-5 mb-2 mt-0">
                    <label class="f5 text-normal">
                      <input
                        type="checkbox"
                        name="thread_types[]"
                        value="SecurityAlert"
                        data-targets="notifications-list-subscription-form.threadTypeCheckboxes"
                        data-action="change:notifications-list-subscription-form#threadTypeCheckboxesUpdated"
                        
                      >
                      Security alerts
                    </label>


                  </div>
              </fieldset>
              <div class="pt-2 pb-3 px-3 d-flex flex-justify-start flex-row-reverse">
                  <button name="do" value="custom" data-target="notifications-list-subscription-form.customSubmit" disabled="disabled" type="submit" data-view-component="true" class="btn-primary btn-sm btn ml-2">    Apply
</button>

                  <button data-action="click:notifications-list-subscription-form#resetForm" data-close-dialog="" type="button" data-view-component="true" class="btn-sm btn">    Cancel
</button>
              </div>
</form>          </div>
        </details-dialog>


        <div class="notifications-component-dialog-overlay"></div>
      </details>
    </notifications-list-subscription-form>



  </li>

  <li>
        <div data-view-component="true" class="d-flex">
        <div data-view-component="true" class="position-relative d-inline-block">
    <a icon="repo-forked" id="fork-button" href="/kiransagar1/300-python-Interview-questions-and-solutions/fork" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FORK_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="380c3cca6e623b8276a45f35afea906ec1a35c2c7df6adad7b20e151a197deb7" data-ga-click="Repository, show fork modal, action:blob#show; text:Fork" data-view-component="true" class="btn-sm btn BtnGroup-item border-right-0">      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo-forked mr-2">
    <path fill-rule="evenodd" d="M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z"></path>
</svg>Fork
          <span id="repo-network-counter" data-pjax-replace="true" data-turbo-replace="true" title="62" data-view-component="true" class="Counter">62</span>
</a>    <tool-tip for="fork-button" data-direction="s" data-type="description" data-view-component="true" class="sr-only position-absolute">Fork your own copy of kiransagar1/300-python-Interview-questions-and-solutions</tool-tip>
</div>
      <details group_item="true" id="my-forks-menu-387432244" data-view-component="true" class="details-reset details-overlay BtnGroup-parent d-inline-block position-relative">
              <summary aria-label="See your forks of this repository" data-view-component="true" class="btn-sm btn BtnGroup-item px-2 float-none">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-triangle-down">
    <path d="M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"></path>
</svg>
</summary>
  <details-menu
    class="SelectMenu right-0"
      src="/kiransagar1/300-python-Interview-questions-and-solutions/my_forks_menu_content?can_fork=true"
      
      role="menu"
      
>
    <div class="SelectMenu-modal">
        <button class="SelectMenu-closeButton position-absolute right-0 m-2" type="button" aria-label="Close menu" data-toggle-for="details-ed2c7c">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
        </button>
      <div
        id="filter-menu-ed2c7c"
        class="d-flex flex-column flex-1 overflow-hidden"
>
        <div
          class="SelectMenu-list"
          >

            <include-fragment class="SelectMenu-loading" aria-label="Loading">
              <svg role="menuitem" style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
            </include-fragment>
        </div>
        
      </div>
    </div>
  </details-menu>
</details></div>
  </li>

  <li>
        <template class="js-unstar-confirmation-dialog-template">
  <div class="Box-header">
    <h2 class="Box-title">Unstar this repository?</h2>
  </div>
  <div class="Box-body">
    <p class="mb-3">
      This will remove {{ repoNameWithOwner }} from the {{ listsWithCount }} that it's been added to.
    </p>
    <div class="form-actions">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-social-confirmation-form" data-turbo="false" action="{{ confirmUrl }}" accept-charset="UTF-8" method="post">
        <input type="hidden" name="authenticity_token" value="{{ confirmCsrfToken }}">
        <input type="hidden" name="confirm" value="true">
          <button data-close-dialog="true" type="submit" data-view-component="true" class="btn-danger btn width-full">    Unstar
</button>
</form>    </div>
  </div>
</template>

  <div data-view-component="true" class="js-toggler-container js-social-container starring-container d-flex">
    <div data-view-component="true" class="starred BtnGroup flex-1">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-social-form BtnGroup-parent flex-auto js-deferred-toggler-target" data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/unstar" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="etIIcYUlUzWZxXmf0IhRovqtqSHRrdBAehK643ye0OynszS6m7yHFkzbR-kwBB_S-Ksl0RMZ1Ztp2I-5zi0kuA" autocomplete="off" />
          <input type="hidden" value="AeTnTPyDje8lMLl7FFgcHiS5xN6dWjrwILSRSmIA9x3chduH4hpZzPAuhw301FJuJr9ILl_uPyszfqQQ0LMDSQ" data-csrf="true" class="js-confirm-csrf-token" />
        <input type="hidden" name="context" value="repository">
          <button data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;UNSTAR_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="04f87103b03c623d65860c9ac8ef36a628b66965e63dc91a49066cd2a168b7cf" data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar" aria-label="Unstar this repository (72)" type="submit" data-view-component="true" class="rounded-left-2 btn-sm btn BtnGroup-item">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star-fill starred-button-icon d-inline-block mr-2">
    <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z"></path>
</svg><span data-view-component="true" class="d-inline">
            Starred
</span>            <span id="repo-stars-counter-unstar" aria-label="72 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-turbo-replace="true" title="72" data-view-component="true" class="Counter js-social-count">72</span>
</button></form>        <details id="details-user-list-387432244" data-view-component="true" class="details-reset details-overlay BtnGroup-parent js-user-list-menu d-inline-block position-relative">
        <summary aria-label="Add this repository to a list" data-view-component="true" class="btn-sm btn BtnGroup-item px-2 float-none">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-triangle-down">
    <path d="M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"></path>
</svg>
</summary>
  <details-menu
    class="SelectMenu right-0"
      src="/kiransagar1/300-python-Interview-questions-and-solutions/lists"
      
      role="menu"
      
>
    <div class="SelectMenu-modal">
        <button class="SelectMenu-closeButton position-absolute right-0 m-2" type="button" aria-label="Close menu" data-toggle-for="details-270e41">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
        </button>
      <div
        id="filter-menu-270e41"
        class="d-flex flex-column flex-1 overflow-hidden"
>
        <div
          class="SelectMenu-list"
          >

            <include-fragment class="SelectMenu-loading" aria-label="Loading">
              <svg role="menuitem" style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
            </include-fragment>
        </div>
        
      </div>
    </div>
  </details-menu>
</details>
</div>
    <div data-view-component="true" class="unstarred BtnGroup flex-1">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-social-form BtnGroup-parent flex-auto" data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/star" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="Rj4w20tbqw8gSyo3FW2It6zwTLgOqiOKmxG13uFEvBG9_q-HTHSK9VC_Nhp3M_Vb1EYByhh6dwF2tdyp-jTXew" autocomplete="off" />
        <input type="hidden" name="context" value="repository">
          <button data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;STAR_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="ec24fdceb66e31cb6296ce1e3f7ff148c8b857747e594d59a75cc08ac617a233" data-ga-click="Repository, click star button, action:blob#show; text:Star" aria-label="Star this repository (72)" type="submit" data-view-component="true" class="js-toggler-target rounded-left-2 btn-sm btn BtnGroup-item">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star d-inline-block mr-2">
    <path fill-rule="evenodd" d="M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z"></path>
</svg><span data-view-component="true" class="d-inline">
            Star
</span>            <span id="repo-stars-counter-star" aria-label="72 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-turbo-replace="true" title="72" data-view-component="true" class="Counter js-social-count">72</span>
</button></form>        <details id="details-user-list-387432244" data-view-component="true" class="details-reset details-overlay BtnGroup-parent js-user-list-menu d-inline-block position-relative">
        <summary aria-label="Add this repository to a list" data-view-component="true" class="btn-sm btn BtnGroup-item px-2 float-none">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-triangle-down">
    <path d="M4.427 7.427l3.396 3.396a.25.25 0 00.354 0l3.396-3.396A.25.25 0 0011.396 7H4.604a.25.25 0 00-.177.427z"></path>
</svg>
</summary>
  <details-menu
    class="SelectMenu right-0"
      src="/kiransagar1/300-python-Interview-questions-and-solutions/lists"
      
      role="menu"
      
>
    <div class="SelectMenu-modal">
        <button class="SelectMenu-closeButton position-absolute right-0 m-2" type="button" aria-label="Close menu" data-toggle-for="details-270e41">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
        </button>
      <div
        id="filter-menu-270e41"
        class="d-flex flex-column flex-1 overflow-hidden"
>
        <div
          class="SelectMenu-list"
          >

            <include-fragment class="SelectMenu-loading" aria-label="Loading">
              <svg role="menuitem" style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
            </include-fragment>
        </div>
        
      </div>
    </div>
  </details-menu>
</details>
</div></div>
  </li>

    

</ul>

      </div>

        <div id="responsive-meta-container" data-turbo-replace>
</div>


          <nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true" class="js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5">

  <ul data-view-component="true" class="UnderlineNav-body list-style-none">
      <li data-view-component="true" class="d-inline-flex">
  <a id="code-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /kiransagar1/300-python-Interview-questions-and-solutions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g c" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" aria-current="page" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z"></path>
</svg>
        <span data-content="Code">Code</span>
          <span id="code-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="issues-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /kiransagar1/300-python-Interview-questions-and-solutions/issues" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g i" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path><path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"></path>
</svg>
        <span data-content="Issues">Issues</span>
          <span id="issues-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="0" hidden="hidden" data-view-component="true" class="Counter">0</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="pull-requests-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /kiransagar1/300-python-Interview-questions-and-solutions/pulls" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g p" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"></path>
</svg>
        <span data-content="Pull requests">Pull requests</span>
          <span id="pull-requests-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="0" hidden="hidden" data-view-component="true" class="Counter">0</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="actions-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/actions" data-tab-item="i3actions-tab" data-selected-links="repo_actions /kiransagar1/300-python-Interview-questions-and-solutions/actions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g a" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM6.379 5.227A.25.25 0 006 5.442v5.117a.25.25 0 00.379.214l4.264-2.559a.25.25 0 000-.428L6.379 5.227z"></path>
</svg>
        <span data-content="Actions">Actions</span>
          <span id="actions-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="projects-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/projects" data-tab-item="i4projects-tab" data-selected-links="repo_projects new_repo_project repo_project /kiransagar1/300-python-Interview-questions-and-solutions/projects" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g b" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Projects&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-table UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0114.25 16H1.75A1.75 1.75 0 010 14.25V1.75zM1.5 6.5v7.75c0 .138.112.25.25.25H5v-8H1.5zM5 5H1.5V1.75a.25.25 0 01.25-.25H5V5zm1.5 1.5v8h7.75a.25.25 0 00.25-.25V6.5h-8zm8-1.5h-8V1.5h7.75a.25.25 0 01.25.25V5z"></path>
</svg>
        <span data-content="Projects">Projects</span>
          <span id="projects-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="0" hidden="hidden" data-view-component="true" class="Counter">0</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="security-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/security" data-tab-item="i5security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /kiransagar1/300-python-Interview-questions-and-solutions/security" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g s" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M7.467.133a1.75 1.75 0 011.066 0l5.25 1.68A1.75 1.75 0 0115 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.7 1.7 0 01-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 011.217-1.667l5.25-1.68zm.61 1.429a.25.25 0 00-.153 0l-5.25 1.68a.25.25 0 00-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.2.2 0 00.154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.25.25 0 00-.174-.237l-5.25-1.68zM9 10.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.75a.75.75 0 10-1.5 0v3a.75.75 0 001.5 0v-3z"></path>
</svg>
        <span data-content="Security">Security</span>
          <include-fragment src="/kiransagar1/300-python-Interview-questions-and-solutions/security/overall-count" accept="text/fragment+html"></include-fragment>

    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="insights-tab" href="/kiransagar1/300-python-Interview-questions-and-solutions/pulse" data-tab-item="i6insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /kiransagar1/300-python-Interview-questions-and-solutions/pulse" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
                <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline">
    <path fill-rule="evenodd" d="M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z"></path>
</svg>
        <span data-content="Insights">Insights</span>
          <span id="insights-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
</ul>
    <div style="visibility:hidden;" data-view-component="true" class="UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0">      <details data-view-component="true" class="details-overlay details-reset position-relative">
  <summary role="button" data-view-component="true">          <div class="UnderlineNav-item mr-0 border-0">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
            <span class="sr-only">More</span>
          </div>
</summary>
  <details-menu role="menu" data-view-component="true" class="dropdown-menu dropdown-menu-sw">          <ul>
              <li data-menu-item="i0code-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item selected dropdown-item" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /kiransagar1/300-python-Interview-questions-and-solutions" href="/kiransagar1/300-python-Interview-questions-and-solutions">
                  Code
</a>              </li>
              <li data-menu-item="i1issues-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_issues repo_labels repo_milestones /kiransagar1/300-python-Interview-questions-and-solutions/issues" href="/kiransagar1/300-python-Interview-questions-and-solutions/issues">
                  Issues
</a>              </li>
              <li data-menu-item="i2pull-requests-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_pulls checks /kiransagar1/300-python-Interview-questions-and-solutions/pulls" href="/kiransagar1/300-python-Interview-questions-and-solutions/pulls">
                  Pull requests
</a>              </li>
              <li data-menu-item="i3actions-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_actions /kiransagar1/300-python-Interview-questions-and-solutions/actions" href="/kiransagar1/300-python-Interview-questions-and-solutions/actions">
                  Actions
</a>              </li>
              <li data-menu-item="i4projects-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_projects new_repo_project repo_project /kiransagar1/300-python-Interview-questions-and-solutions/projects" href="/kiransagar1/300-python-Interview-questions-and-solutions/projects">
                  Projects
</a>              </li>
              <li data-menu-item="i5security-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="security overview alerts policy token_scanning code_scanning /kiransagar1/300-python-Interview-questions-and-solutions/security" href="/kiransagar1/300-python-Interview-questions-and-solutions/security">
                  Security
</a>              </li>
              <li data-menu-item="i6insights-tab" hidden>
                <a role="menuitem" class="js-selected-navigation-item dropdown-item" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /kiransagar1/300-python-Interview-questions-and-solutions/pulse" href="/kiransagar1/300-python-Interview-questions-and-solutions/pulse">
                  Insights
</a>              </li>
          </ul>
</details-menu>
</details></div>
</nav>

  </div>

  



  <turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance" class="">
      <div id="repo-content-pjax-container" class="repository-content " >
      <a href="https://github.dev/" class="d-none js-github-dev-shortcut" data-hotkey=".">Open in github.dev</a>
  <a href="https://github.dev/" class="d-none js-github-dev-new-tab-shortcut" data-hotkey="Shift+.,Shift+&gt;,&gt;" target="_blank">Open in a new github.dev tab</a>



    
      
  <div class="clearfix container-xl px-3 px-md-4 px-lg-5 mt-4">
    
    
<div data-test-selector="blob-container">
  

  



    
<a class="d-none js-permalink-shortcut" data-hotkey="y" href="/kiransagar1/300-python-Interview-questions-and-solutions/blob/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt">Permalink</a>

<div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-wrap flex-md-nowrap flex-justify-between flex-md-justify-start">
  
<div class="position-relative">
  <details
    class="js-branch-select-menu details-reset details-overlay mr-0 mb-0 "
    id="branch-select-menu"
    data-hydro-click-payload="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;REFS_SELECTOR_MENU&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="fb1679d46ae66eb68af84cec8322c86f81a9d4ac84c1d4544f44d1784cee7e2b">
    <summary class="btn css-truncate"
            data-hotkey="w"
            title="Switch branches or tags">
      <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-branch">
    <path fill-rule="evenodd" d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path>
</svg>
      <span class="css-truncate-target" data-menu-button>main</span>
      <span class="dropdown-caret"></span>
    </summary>

    
<div class="SelectMenu">
  <div class="SelectMenu-modal">
    <header class="SelectMenu-header">
      <span class="SelectMenu-title">Switch branches/tags</span>
      <button class="SelectMenu-closeButton" type="button" data-toggle-for="branch-select-menu"><svg aria-label="Close menu" aria-hidden="false" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg></button>
    </header>

    <input-demux data-action="tab-container-change:input-demux#storeInput tab-container-changed:input-demux#updateInput">
      <tab-container class="d-flex flex-column js-branches-tags-tabs" style="min-height: 0;">
        <div class="SelectMenu-filter">
          <input data-target="input-demux.source"
                 id="context-commitish-filter-field"
                 class="SelectMenu-input form-control"
                 aria-owns="ref-list-branches"
                 data-controls-ref-menu-id="ref-list-branches"
                 autofocus
                 autocomplete="off"
                 aria-label="Filter branches/tags"
                 placeholder="Filter branches/tags"
                 type="text"
          >
        </div>

        <div class="SelectMenu-tabs" role="tablist" data-target="input-demux.control" >
          <button class="SelectMenu-tab" type="button" role="tab" aria-selected="true">Branches</button>
          <button class="SelectMenu-tab" type="button" role="tab">Tags</button>
        </div>

        <div role="tabpanel" id="ref-list-branches" data-filter-placeholder="Filter branches/tags" tabindex="" class="d-flex flex-column flex-auto overflow-auto">
          <ref-selector
            type="branch"
            data-targets="input-demux.sinks"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            query-endpoint="/kiransagar1/300-python-Interview-questions-and-solutions/refs"
            
            cache-key="v0:1626692237.42331"
            current-committish="bWFpbg=="
            default-branch="bWFpbg=="
            name-with-owner="a2lyYW5zYWdhcjEvMzAwLXB5dGhvbi1JbnRlcnZpZXctcXVlc3Rpb25zLWFuZC1zb2x1dGlvbnM="
            prefetch-on-mouseover
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load branches</div>
            </template>

              <template data-target="ref-selector.noMatchTemplate">
    <div class="SelectMenu-message">Nothing to show</div>
</template>


            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list " data-turbo-frame="repo-content-turbo-frame">
              <div class="SelectMenu-loading pt-3 pb-0 overflow-hidden" aria-label="Menu is loading">
                <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
              </div>
            </div>

              

<template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/{{ urlEncodedRefName }}/350interview.txt" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}" >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


              <footer class="SelectMenu-footer"><a href="/kiransagar1/300-python-Interview-questions-and-solutions/branches">View all branches</a></footer>
          </ref-selector>

        </div>

        <div role="tabpanel" id="tags-menu" data-filter-placeholder="Find a tag" tabindex="" hidden class="d-flex flex-column flex-auto overflow-auto">
          <ref-selector
            type="tag"
            data-action="
              input-entered:ref-selector#inputEntered
              tab-selected:ref-selector#tabSelected
              focus-list:ref-selector#focusFirstListMember
            "
            data-targets="input-demux.sinks"
            query-endpoint="/kiransagar1/300-python-Interview-questions-and-solutions/refs"
            cache-key="v0:1626692237.42331"
            current-committish="bWFpbg=="
            default-branch="bWFpbg=="
            name-with-owner="a2lyYW5zYWdhcjEvMzAwLXB5dGhvbi1JbnRlcnZpZXctcXVlc3Rpb25zLWFuZC1zb2x1dGlvbnM="
          >

            <template data-target="ref-selector.fetchFailedTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Could not load tags</div>
            </template>

            <template data-target="ref-selector.noMatchTemplate">
              <div class="SelectMenu-message" data-index="{{ index }}">Nothing to show</div>
            </template>

              

<template data-target="ref-selector.itemTemplate">
  <a href="https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/{{ urlEncodedRefName }}/350interview.txt" class="SelectMenu-item" role="menuitemradio" rel="nofollow" aria-checked="{{ isCurrent }}" data-index="{{ index }}" >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check SelectMenu-icon SelectMenu-icon--check">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    <span class="flex-1 css-truncate css-truncate-overflow {{ isFilteringClass }}">{{ refName }}</span>
    <span hidden="{{ isNotDefault }}" class="Label Label--secondary flex-self-start">default</span>
  </a>
</template>


            <div data-target="ref-selector.listContainer" role="menu" class="SelectMenu-list" data-turbo-frame="repo-content-turbo-frame">
              <div class="SelectMenu-loading pt-3 pb-0 overflow-hidden" aria-label="Menu is loading">
                <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
              </div>
            </div>
              <footer class="SelectMenu-footer"><a href="/kiransagar1/300-python-Interview-questions-and-solutions/tags">View all tags</a></footer>
          </ref-selector>
        </div>
      </tab-container>
    </input-demux>
  </div>
</div>

  </details>

</div>


<div class="Overlay--hidden Overlay-backdrop--center" data-modal-dialog-overlay>
  <modal-dialog role="dialog" id="warn-tag-match-create-branch-dialog" aria-modal="true" aria-labelledby="warn-tag-match-create-branch-dialog-header" data-view-component="true" class="Overlay Overlay--width-large Overlay--height-auto Overlay--motion-scaleFade">
      <header class="Overlay-header Overlay-header--large Overlay-header--divided">
        <div class="Overlay-headerContentWrap">
          <div class="Overlay-titleWrap">
            <h1 id="warn-tag-match-create-branch-dialog-header" class="Overlay-title">Name already in use</h1>
          </div>
          <div class="Overlay-actionWrap">
            <button data-close-dialog-id="warn-tag-match-create-branch-dialog" aria-label="Close" type="button" data-view-component="true" class="close-button Overlay-closeButton"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg></button>
          </div>
        </div>
      </header>
    <div class="Overlay-body ">
      
          <div data-view-component="true">      A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so creating this branch may cause unexpected behavior. Are you sure you want to create this branch?
</div>

    </div>
      <footer class="Overlay-footer Overlay-footer--alignEnd">
            <button data-close-dialog-id="warn-tag-match-create-branch-dialog" type="button" data-view-component="true" class="btn">    Cancel
</button>
            <button data-submit-dialog-id="warn-tag-match-create-branch-dialog" type="button" data-view-component="true" class="btn-danger btn">    Create
</button>
      </footer>
</modal-dialog></div>


  <h2 id="blob-path" class="breadcrumb flex-auto flex-self-center min-width-0 text-normal mx-2 width-full width-md-auto flex-order-1 flex-md-order-none mt-3 mt-md-0">
    <span class="js-repo-root text-bold"><span class="js-path-segment d-inline-block wb-break-all"><a data-turbo-frame="repo-content-turbo-frame" href="/kiransagar1/300-python-Interview-questions-and-solutions"><span>300-python-Interview-questions-and-solutions</span></a></span></span><span class="separator">/</span><strong class="final-path">350interview.txt</strong>
  </h2>
    <a href="/kiransagar1/300-python-Interview-questions-and-solutions/find/main" data-pjax="" data-hotkey="t" data-view-component="true" class="btn mr-2 d-none d-md-block">    Go to file
</a>
  <details id="blob-more-options-details" data-view-component="true" class="details-overlay details-reset position-relative">
    <summary role="button" data-view-component="true" class="btn">    <svg aria-label="More options" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
</summary>
  <div data-view-component="true">      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="d-block d-md-none">
          <a class="dropdown-item d-flex flex-items-baseline" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FIND_FILE_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="1fd4623aa7299370dd63c712775e27823e9550d44115fc57a63f1a491131eedc" data-ga-click="Repository, find file, location:repo overview" data-hotkey="t" href="/kiransagar1/300-python-Interview-questions-and-solutions/find/main">
            <span class="flex-auto">Go to file</span>
            <span class="text-small color-fg-muted" aria-hidden="true">T</span>
</a>        </li>
        <li data-toggle-for="blob-more-options-details">
            <button data-toggle-for="jumpto-line-details-dialog" type="button" data-view-component="true" class="dropdown-item btn-link">    <span class="d-flex flex-items-baseline">
              <span class="flex-auto">Go to line</span>
              <span class="text-small color-fg-muted" aria-hidden="true">L</span>
            </span>
</button>        </li>
        <li class="dropdown-divider" role="none"></li>
        <li>
          <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy path" value="350interview.txt" data-view-component="true" class="dropdown-item cursor-pointer">
    
            Copy path

</clipboard-copy>        </li>
        <li>
          <clipboard-copy data-toggle-for="blob-more-options-details" aria-label="Copy permalink" value="https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt" data-view-component="true" class="dropdown-item cursor-pointer">
    
            <span class="d-flex flex-items-baseline">
              <span class="flex-auto">Copy permalink</span>
            </span>

</clipboard-copy>        </li>
      </ul>
</div>
</details></div>





    <div id="spoof-warning" class="mt-0 pb-3" hidden aria-hidden>
  <div data-view-component="true" class="flash flash-warn mt-0 clearfix">
  
  
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert float-left mt-1">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>

      <div class="overflow-hidden">This commit does not belong to any branch on this repository, and may belong to a fork outside of the repository.</div>


  
</div></div>

    <include-fragment src="/kiransagar1/300-python-Interview-questions-and-solutions/spoofed_commit_check/1f6fae35b30bcc395edf7701362321b01c599972" data-test-selector="spoofed-commit-check"></include-fragment>

    <div class="Box d-flex flex-column flex-shrink-0 mb-3">
  
  <div class="Box-header Details js-details-container">
      <div class="d-flex flex-items-center">
        <span class="flex-shrink-0 ml-n1 mr-n1 mt-n1 mb-n1">
          <a rel="author" href="/kiransagar1"><img class="avatar avatar-user" skip_hovercard="20" src="https://avatars.githubusercontent.com/u/68487922?s=48&amp;v=4" width="24" height="24" alt="@kiransagar1" /></a>
        </span>
        <div class="flex-1 d-flex flex-items-center ml-3 min-width-0">
          <div class="css-truncate css-truncate-overflow">
            <a class="text-bold Link--primary" rel="author" href="/kiransagar1">kiransagar1</a>

              <span class="markdown-title">
                <a data-pjax="true" title="Add files via upload" class="Link--secondary" href="/kiransagar1/300-python-Interview-questions-and-solutions/commit/1f6fae35b30bcc395edf7701362321b01c599972">Add files via upload</a>
              </span>
          </div>


          <span class="ml-2">
            <include-fragment accept="text/fragment+html" src="/kiransagar1/300-python-Interview-questions-and-solutions/commit/1f6fae35b30bcc395edf7701362321b01c599972/rollup?direction=e" class="d-inline"></include-fragment>
          </span>
        </div>
        <div class="ml-3 d-flex flex-shrink-0 flex-items-center flex-justify-end color-fg-muted no-wrap">
          <span class="d-none d-md-inline">
            <span>Latest commit</span>
            <a class="text-small text-mono Link--secondary" href="/kiransagar1/300-python-Interview-questions-and-solutions/commit/1f6fae35b30bcc395edf7701362321b01c599972" data-pjax>1f6fae3</a>
            <span itemprop="dateModified"><relative-time datetime="2021-07-19T10:57:17Z" class="no-wrap">Jul 19, 2021</relative-time></span>
          </span>

          <a data-pjax href="/kiransagar1/300-python-Interview-questions-and-solutions/commits/main/350interview.txt" class="ml-3 no-wrap Link--primary no-underline">
            <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-history">
    <path fill-rule="evenodd" d="M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 01.75.75v2.992l2.028.812a.75.75 0 01-.557 1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 0 017.75 4z"></path>
</svg>
            <span class="d-none d-sm-inline">
              <strong>History</strong>
            </span>
          </a>
        </div>
      </div>

  </div>

  <div class="Box-body d-flex flex-items-center flex-auto border-bottom-0 flex-wrap" >
    <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default float-left mr-3" id="blob_contributors_box">
      <summary class="Link--primary">
        <svg text="gray" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-people">
    <path fill-rule="evenodd" d="M5.5 3.5a2 2 0 100 4 2 2 0 000-4zM2 5.5a3.5 3.5 0 115.898 2.549 5.507 5.507 0 013.034 4.084.75.75 0 11-1.482.235 4.001 4.001 0 00-7.9 0 .75.75 0 01-1.482-.236A5.507 5.507 0 013.102 8.05 3.49 3.49 0 012 5.5zM11 4a.75.75 0 100 1.5 1.5 1.5 0 01.666 2.844.75.75 0 00-.416.672v.352a.75.75 0 00.574.73c1.2.289 2.162 1.2 2.522 2.372a.75.75 0 101.434-.44 5.01 5.01 0 00-2.56-3.012A3 3 0 0011 4z"></path>
</svg>
        <strong>1</strong>
        
        contributor
      </summary>
      <details-dialog
        class="Box Box--overlay d-flex flex-column anim-fade-in fast"
        aria-label="Users who have contributed to this file"
        src="/kiransagar1/300-python-Interview-questions-and-solutions/contributors-list/main/350interview.txt" preload>
        <div class="Box-header">
          <button class="Box-btn-octicon btn-octicon float-right" type="button" aria-label="Close dialog" data-close-dialog>
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
          </button>
          <h3 class="Box-title">
            Users who have contributed to this file
          </h3>
        </div>
        <include-fragment>
          <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="32" height="32" viewBox="0 0 16 16" fill="none" data-view-component="true" class="my-3 mx-auto d-block anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
        </include-fragment>
      </details-dialog>
    </details>
  </div>
</div>



      








  
    <div data-target="readme-toc.content" class="Box mt-3 position-relative">
      
  <div
    class="Box-header js-blob-header py-2 pr-2 d-flex flex-shrink-0 flex-md-row flex-items-center"
    
  >


  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1">

      4415 lines (2800 sloc)
      <span class="file-info-divider"></span>
    148 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between hide-sm hide-md">
      

    <div class="BtnGroup">
        <a data-permalink-href="/kiransagar1/300-python-Interview-questions-and-solutions/raw/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt" href="/kiransagar1/300-python-Interview-questions-and-solutions/raw/main/350interview.txt" id="raw-url" data-view-component="true" class="js-permalink-replaceable-link btn-sm btn BtnGroup-item">    Raw
</a>          <a data-permalink-href="/kiransagar1/300-python-Interview-questions-and-solutions/blame/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt" href="/kiransagar1/300-python-Interview-questions-and-solutions/blame/main/350interview.txt" data-hotkey="b" data-view-component="true" class="js-update-url-with-hash js-permalink-replaceable-link btn-sm btn BtnGroup-item">    Blame
</a>    </div>

    <div class="d-flex">
        
<div class="ml-1" data-test-selector="edit-dropdown-menu-component">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="BtnGroup-parent js-update-url-with-hash " data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/edit/main/350interview.txt" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="vhC43MCmNNWsCxF6kGnxLEfp-kFscl7S3twOq2_lDrtk9GfsxkKzmGbSwH4MfI-k_g7t-qM-d9jrwZO-23AksA" autocomplete="off" />
      <button title="Fork this repository and edit the file" data-hotkey="e" data-disable-with="" data-test-selector="edit-icon-button" type="submit" data-view-component="true" class="btn-sm BtnGroup-item btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-pencil">
    <path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"></path>
</svg>
</button></form>
  <details class="details-reset details-overlay select-menu BtnGroup-parent d-inline-block position-relative">
      <summary data-disable-invalid="" data-disable-with="" data-dropdown-tracking="{&quot;type&quot;:&quot;blob_edit_dropdown.more_options_click&quot;,&quot;context&quot;:{&quot;repository_id&quot;:387432244,&quot;actor_id&quot;:121307557,&quot;github_dev_enabled&quot;:true,&quot;edit_enabled&quot;:true,&quot;small_screen&quot;:false}}" aria-label="Select additional options" data-view-component="true" class="js-blob-dropdown-click select-menu-button btn-sm btn BtnGroup-item float-none px-2">
</summary>    <div class="SelectMenu right-0">
      <div class="SelectMenu-modal width-full">
        <div class="SelectMenu-list SelectMenu-list--borderless py-2">
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="SelectMenu-item js-update-url-with-hash " data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/edit/main/350interview.txt" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="SmOCpnkgKFa9CX41rVSwRAlbm2hfcM7ShCVd6sEpaQ-Qh12Wf8SvG3fQrzExQc7MsLyM05A859ixOMD_dbxDBA" autocomplete="off" />
              <button title="Fork this repository and edit the file" data-test-selector="edit-text-button" type="submit" data-view-component="true" class="btn-invisible btn width-full d-flex flex-justify-between color-fg-default text-normal p-0">    <div class="mr-5">Edit this file</div>
              <div class="color-fg-muted">E</div>
</button></form>
            <a aria-label="Open this file in github.dev" data-test-selector="github-dev-link" data-dropdown-tracking="{&quot;type&quot;:&quot;blob_edit_dropdown.dev_link_click&quot;,&quot;context&quot;:{&quot;repository_id&quot;:387432244,&quot;actor_id&quot;:121307557,&quot;edit_enabled&quot;:true,&quot;small_screen&quot;:false}}" href="https://github.dev/" data-view-component="true" class="SelectMenu-item js-github-dev-shortcut js-blob-dropdown-click width-full d-flex flex-justify-between color-fg-default f5 text-normal">
              <div class="mr-5 no-wrap">Open in github.dev</div>
              <div class="color-fg-muted">.</div>
</a>
            <a data-platforms="windows,mac" data-test-selector="github-desktop-link" aria-label="Open this file in GitHub Desktop" href="x-github-client://openRepo/https://github.com/kiransagar1/300-python-Interview-questions-and-solutions?branch=main&amp;filepath=350interview.txt" data-view-component="true" class="SelectMenu-item no-wrap js-remove-unless-platform width-full text-normal color-fg-default f5">
              Open in GitHub Desktop
</a>        </div>
      </div>
    </div>
  </details>
</div>


        
<div data-test-selector="remote-clipboard-copy">
  <remote-clipboard-copy class="d-inline-block btn-octicon" style="height: 26px" data-src="/kiransagar1/300-python-Interview-questions-and-solutions/raw/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt" data-action="click:remote-clipboard-copy#remoteCopy">
  

  <span data-target="remote-clipboard-copy.idle">      <span class="tooltipped tooltipped-nw cursor-pointer" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;COPY_RAW_CONTENTS_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="7e1e83aa034965a6c3582545089f26925199f215f6fa2b10861c0db888a4ff0a" aria-label="Copy raw contents">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy">
    <path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
</svg>
</span></span>
  <span data-target="remote-clipboard-copy.fetching" hidden="hidden">      <svg style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
</span>
  <span data-target="remote-clipboard-copy.success" hidden="hidden">      <span class="tooltipped tooltipped-nw" aria-label="Copied!">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check color-fg-success">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
      </span>
</span>
  <span data-target="remote-clipboard-copy.error" hidden="hidden">      <span class="tooltipped tooltipped-nw" aria-label="Something went wrong. Try again.">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert color-fg-attention">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
      </span>
</span>
</remote-clipboard-copy></div>


          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" data-turbo="false" action="/kiransagar1/300-python-Interview-questions-and-solutions/delete/main/350interview.txt" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="1VhtKnSTvJ26rqP_v1FoSiq-AYZllLsntl868hlv8aCDkOWLlGyRY0I7vBWKR8cmTYvwJRMDDWJJ1bhRlgAi4A" />
            <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this repository and delete the file" data-disable-with>
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-trash">
    <path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"></path>
</svg>
            </button>
</form>    </div>
  </div>

    <div class="d-flex hide-lg hide-xl flex-order-2 flex-grow-0">
      <details class="dropdown details-reset details-overlay d-inline-block">
        <summary
          class="js-blob-dropdown-click btn-octicon"
          aria-haspopup="true"
          aria-label="possible actions"
          data-test-selector="small-screen-more-options"
          data-dropdown-tracking="{&quot;type&quot;:&quot;blob_edit_dropdown.more_options_click&quot;,&quot;context&quot;:{&quot;repository_id&quot;:387432244,&quot;actor_id&quot;:121307557,&quot;github_dev_enabled&quot;:true,&quot;edit_enabled&quot;:true,&quot;small_screen&quot;:true}}"
        >
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
        </summary>

        <ul class="dropdown-menu dropdown-menu-sw" style="width: 175px">
            <li>
                <a class="dropdown-item tooltipped tooltipped-nw js-remove-unless-platform"
                   data-platforms="windows,mac"
                   href="x-github-client://openRepo/https://github.com/kiransagar1/300-python-Interview-questions-and-solutions?branch=main&amp;filepath=350interview.txt">
                  Open with Desktop
                </a>
            </li>
          <li>
            <a class="dropdown-item" href="/kiransagar1/300-python-Interview-questions-and-solutions/raw/main/350interview.txt">
              View raw
            </a>
          </li>
            <li>
              <remote-clipboard-copy class="dropdown-item" data-src="/kiransagar1/300-python-Interview-questions-and-solutions/raw/main/350interview.txt" data-action="click:remote-clipboard-copy#remoteCopy">
  

  <span data-target="remote-clipboard-copy.idle">                  <span class="cursor-pointer" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;COPY_RAW_CONTENTS_BUTTON&quot;,&quot;repository_id&quot;:387432244,&quot;originating_url&quot;:&quot;https://github.com/kiransagar1/300-python-Interview-questions-and-solutions/blob/main/350interview.txt&quot;,&quot;user_id&quot;:121307557}}" data-hydro-click-hmac="7e1e83aa034965a6c3582545089f26925199f215f6fa2b10861c0db888a4ff0a">
                    Copy raw contents
</span></span>
  <span data-target="remote-clipboard-copy.fetching" hidden="hidden">                  Copy raw contents
                  <span class="d-inline-block position-relative" style="top: 3px">
                    <svg aria-label="fetching contents…" style="box-sizing: content-box; color: var(--color-icon-primary);" width="16" height="16" viewBox="0 0 16 16" fill="none" data-view-component="true" class="anim-rotate">
  <circle cx="8" cy="8" r="7" stroke="currentColor" stroke-opacity="0.25" stroke-width="2" vector-effect="non-scaling-stroke" />
  <path d="M15 8a7.002 7.002 0 00-7-7" stroke="currentColor" stroke-width="2" stroke-linecap="round" vector-effect="non-scaling-stroke" />
</svg>
                  </span>
</span>
  <span data-target="remote-clipboard-copy.success" hidden="hidden">                  Copy raw contents
                  <svg aria-label="Copied!" role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check color-fg-success">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
</span>
  <span data-target="remote-clipboard-copy.error" hidden="hidden">                  Copy raw contents
                  <svg aria-label="Something went wrong. Try again." role="img" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert color-fg-attention">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
</span>
</remote-clipboard-copy>            </li>
            <li>
              <a class="dropdown-item" href="/kiransagar1/300-python-Interview-questions-and-solutions/blame/main/350interview.txt">
                View blame
              </a>
            </li>

              <li class="dropdown-divider" role="none"></li>
              <li>
                <a class="dropdown-item" href="/kiransagar1/300-python-Interview-questions-and-solutions/edit/main/350interview.txt">Edit file</a>
              </li>
                <li>
                  <a class="dropdown-item js-github-dev-shortcut js-blob-dropdown-click" data-test-selector="small-screen-github-dev-link" data-dropdown-tracking="{&quot;type&quot;:&quot;blob_edit_dropdown.dev_link_click&quot;,&quot;context&quot;:{&quot;repository_id&quot;:387432244,&quot;actor_id&quot;:121307557,&quot;edit_enabled&quot;:true,&quot;small_screen&quot;:true}}" href="https://github.dev/">Open with github.dev</a>
                </li>
              <li>
                <a class="dropdown-item menu-item-danger" href="/kiransagar1/300-python-Interview-questions-and-solutions/delete/main/350interview.txt">Delete file</a>
              </li>
        </ul>
      </details>
    </div>
</div>


      
    <div itemprop="text" class="Box-body p-0 blob-wrapper data type-text  gist-border-0">

        
<div class="js-check-bidi js-blob-code-container blob-code-content">

  <template class="js-file-alert-template">
  <div data-view-component="true" class="flash flash-warn flash-full d-flex flex-items-center">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
  
    <span>
      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.
      <a href="https://github.co/hiddenchars" target="_blank">Learn more about bidirectional Unicode characters</a>
    </span>


  <div data-view-component="true" class="flash-action">        <a href="{{ revealButtonHref }}" data-view-component="true" class="btn-sm btn">    Show hidden characters
</a>
</div>
</div></template>
<template class="js-line-alert-template">
  <span aria-label="This line has hidden Unicode characters" data-view-component="true" class="line-alert tooltipped tooltipped-e">
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
</span></template>

  <table data-hpc class="highlight tab-size js-file-line-container js-code-nav-container js-tagsearch-file" data-tab-size="8" data-paste-markdown-skip data-tagsearch-lang="Text" data-tagsearch-path="350interview.txt">
        <tr>
          <td id="L1" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1"></td>
          <td id="LC1" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2"></td>
          <td id="LC2" class="blob-code blob-code-inner js-file-line"> Python Interview Questions and Answers by Pythonlife</td>
        </tr>
        <tr>
          <td id="L3" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3"></td>
          <td id="LC3" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4"></td>
          <td id="LC4" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L5" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="5"></td>
          <td id="LC5" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L6" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="6"></td>
          <td id="LC6" class="blob-code blob-code-inner js-file-line">1. What is Python? What are the benefits of using Python?</td>
        </tr>
        <tr>
          <td id="L7" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="7"></td>
          <td id="LC7" class="blob-code blob-code-inner js-file-line">Ans: Python is a programming language with objects, modules, threads, exceptions and automatic memory management. The benefits of pythons are that it is simple and easy, portable, extensible, build-in data structure and it is an open source.</td>
        </tr>
        <tr>
          <td id="L8" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="8"></td>
          <td id="LC8" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L9" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="9"></td>
          <td id="LC9" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L10" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="10"></td>
          <td id="LC10" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L11" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="11"></td>
          <td id="LC11" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L12" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="12"></td>
          <td id="LC12" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L13" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="13"></td>
          <td id="LC13" class="blob-code blob-code-inner js-file-line">2. What is PEP 8?</td>
        </tr>
        <tr>
          <td id="L14" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="14"></td>
          <td id="LC14" class="blob-code blob-code-inner js-file-line">Ans: PEP 8 is a coding convention, a set of recommendation, about how to write your Python code more readable.</td>
        </tr>
        <tr>
          <td id="L15" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="15"></td>
          <td id="LC15" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L16" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="16"></td>
          <td id="LC16" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L17" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="17"></td>
          <td id="LC17" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L18" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="18"></td>
          <td id="LC18" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L19" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="19"></td>
          <td id="LC19" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L20" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="20"></td>
          <td id="LC20" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L21" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="21"></td>
          <td id="LC21" class="blob-code blob-code-inner js-file-line">3. What is pickling and unpickling?</td>
        </tr>
        <tr>
          <td id="L22" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="22"></td>
          <td id="LC22" class="blob-code blob-code-inner js-file-line">Ans: Pickle module accepts any Python object and converts it into a string representation and dumps it into a file by using dump function, this process is called pickling. While the process of retrieving original Python objects from the stored string representation is called unpickling.</td>
        </tr>
        <tr>
          <td id="L23" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="23"></td>
          <td id="LC23" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L24" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="24"></td>
          <td id="LC24" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L25" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="25"></td>
          <td id="LC25" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L26" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="26"></td>
          <td id="LC26" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L27" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="27"></td>
          <td id="LC27" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L28" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="28"></td>
          <td id="LC28" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L29" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="29"></td>
          <td id="LC29" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L30" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="30"></td>
          <td id="LC30" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L31" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="31"></td>
          <td id="LC31" class="blob-code blob-code-inner js-file-line">4. How Python is interpreted?</td>
        </tr>
        <tr>
          <td id="L32" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="32"></td>
          <td id="LC32" class="blob-code blob-code-inner js-file-line">Ans: Python language is an interpreted language. Python program runs directly from the source code. It converts the source code that is written by the programmer into an intermediate language, which is again translated into machine language that has to be executed.</td>
        </tr>
        <tr>
          <td id="L33" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="33"></td>
          <td id="LC33" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L34" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="34"></td>
          <td id="LC34" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L35" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="35"></td>
          <td id="LC35" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L36" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="36"></td>
          <td id="LC36" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L37" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="37"></td>
          <td id="LC37" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L38" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="38"></td>
          <td id="LC38" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L39" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="39"></td>
          <td id="LC39" class="blob-code blob-code-inner js-file-line">5. How memory is managed in Python?</td>
        </tr>
        <tr>
          <td id="L40" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="40"></td>
          <td id="LC40" class="blob-code blob-code-inner js-file-line">Ans: Python memory is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have an access to this private heap and interpreter takes care of this Python private heap.</td>
        </tr>
        <tr>
          <td id="L41" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="41"></td>
          <td id="LC41" class="blob-code blob-code-inner js-file-line">The allocation of Python heap space for Python objects is done by Python memory manager. The core API gives access to some tools for the programmer to code.</td>
        </tr>
        <tr>
          <td id="L42" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="42"></td>
          <td id="LC42" class="blob-code blob-code-inner js-file-line">Python also have an inbuilt garbage collector, which recycle all the unused memory and frees the memory and makes it available to the heap space.</td>
        </tr>
        <tr>
          <td id="L43" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="43"></td>
          <td id="LC43" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L44" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="44"></td>
          <td id="LC44" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L45" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="45"></td>
          <td id="LC45" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L46" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="46"></td>
          <td id="LC46" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L47" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="47"></td>
          <td id="LC47" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L48" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="48"></td>
          <td id="LC48" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L49" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="49"></td>
          <td id="LC49" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L50" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="50"></td>
          <td id="LC50" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L51" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="51"></td>
          <td id="LC51" class="blob-code blob-code-inner js-file-line">6. What are the tools that help to find bugs or perform static analysis?</td>
        </tr>
        <tr>
          <td id="L52" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="52"></td>
          <td id="LC52" class="blob-code blob-code-inner js-file-line">Ans: PyChecker is a static analysis tool that detects the bugs in Python source code and warns about the style and complexity of the bug. Pylint is another tool that verifies whether the module meets the coding standard.</td>
        </tr>
        <tr>
          <td id="L53" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="53"></td>
          <td id="LC53" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L54" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="54"></td>
          <td id="LC54" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L55" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="55"></td>
          <td id="LC55" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L56" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="56"></td>
          <td id="LC56" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L57" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="57"></td>
          <td id="LC57" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L58" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="58"></td>
          <td id="LC58" class="blob-code blob-code-inner js-file-line">7. What are Python decorators?</td>
        </tr>
        <tr>
          <td id="L59" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="59"></td>
          <td id="LC59" class="blob-code blob-code-inner js-file-line">Ans: A Python decorator is a specific change that we make in Python syntax to alter functions easily.</td>
        </tr>
        <tr>
          <td id="L60" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="60"></td>
          <td id="LC60" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L61" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="61"></td>
          <td id="LC61" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L62" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="62"></td>
          <td id="LC62" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L63" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="63"></td>
          <td id="LC63" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L64" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="64"></td>
          <td id="LC64" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L65" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="65"></td>
          <td id="LC65" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L66" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="66"></td>
          <td id="LC66" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L67" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="67"></td>
          <td id="LC67" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L68" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="68"></td>
          <td id="LC68" class="blob-code blob-code-inner js-file-line">8. What is the difference between list and tuple?</td>
        </tr>
        <tr>
          <td id="L69" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="69"></td>
          <td id="LC69" class="blob-code blob-code-inner js-file-line">Ans: The difference between list and tuple is that list is mutable while tuple is not. Tuple can be hashed for e.g as a key for dictionaries.</td>
        </tr>
        <tr>
          <td id="L70" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="70"></td>
          <td id="LC70" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L71" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="71"></td>
          <td id="LC71" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L72" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="72"></td>
          <td id="LC72" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L73" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="73"></td>
          <td id="LC73" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L74" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="74"></td>
          <td id="LC74" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L75" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="75"></td>
          <td id="LC75" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L76" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="76"></td>
          <td id="LC76" class="blob-code blob-code-inner js-file-line">9. How are arguments passed by value or by reference?</td>
        </tr>
        <tr>
          <td id="L77" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="77"></td>
          <td id="LC77" class="blob-code blob-code-inner js-file-line">Ans: Everything in Python is an object and all variables hold references to the objects. The references values are according to the functions; as a result you cannot change the value of the references. However, you can change the objects if it is mutable.</td>
        </tr>
        <tr>
          <td id="L78" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="78"></td>
          <td id="LC78" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L79" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="79"></td>
          <td id="LC79" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L80" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="80"></td>
          <td id="LC80" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L81" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="81"></td>
          <td id="LC81" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L82" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="82"></td>
          <td id="LC82" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L83" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="83"></td>
          <td id="LC83" class="blob-code blob-code-inner js-file-line">10. What is Dict and List comprehensions are?</td>
        </tr>
        <tr>
          <td id="L84" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="84"></td>
          <td id="LC84" class="blob-code blob-code-inner js-file-line">Ans: They are syntax constructions to ease the creation of a Dictionary or List based on existing iterable.</td>
        </tr>
        <tr>
          <td id="L85" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="85"></td>
          <td id="LC85" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L86" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="86"></td>
          <td id="LC86" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L87" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="87"></td>
          <td id="LC87" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L88" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="88"></td>
          <td id="LC88" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L89" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="89"></td>
          <td id="LC89" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L90" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="90"></td>
          <td id="LC90" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L91" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="91"></td>
          <td id="LC91" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L92" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="92"></td>
          <td id="LC92" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L93" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="93"></td>
          <td id="LC93" class="blob-code blob-code-inner js-file-line">11. What are the built-in type does python provides?</td>
        </tr>
        <tr>
          <td id="L94" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="94"></td>
          <td id="LC94" class="blob-code blob-code-inner js-file-line">Ans: There are mutable and Immutable types of Pythons built in types Mutable built-in types</td>
        </tr>
        <tr>
          <td id="L95" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="95"></td>
          <td id="LC95" class="blob-code blob-code-inner js-file-line">List Sets</td>
        </tr>
        <tr>
          <td id="L96" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="96"></td>
          <td id="LC96" class="blob-code blob-code-inner js-file-line">Dictionaries Immutable built-in types</td>
        </tr>
        <tr>
          <td id="L97" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="97"></td>
          <td id="LC97" class="blob-code blob-code-inner js-file-line">Strings Tuples Numbers</td>
        </tr>
        <tr>
          <td id="L98" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="98"></td>
          <td id="LC98" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L99" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="99"></td>
          <td id="LC99" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="100"></td>
          <td id="LC100" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="101"></td>
          <td id="LC101" class="blob-code blob-code-inner js-file-line">12. What is namespace in Python?</td>
        </tr>
        <tr>
          <td id="L102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="102"></td>
          <td id="LC102" class="blob-code blob-code-inner js-file-line">Ans: In Python, every name introduced has a place where it lives and can be hooked for. This is known as namespace. It is like a box where a variable name is mapped to the object placed. Whenever the variable is searched out, this box will be searched, to get corresponding object.</td>
        </tr>
        <tr>
          <td id="L103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="103"></td>
          <td id="LC103" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="104"></td>
          <td id="LC104" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="105"></td>
          <td id="LC105" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="106"></td>
          <td id="LC106" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="107"></td>
          <td id="LC107" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="108"></td>
          <td id="LC108" class="blob-code blob-code-inner js-file-line">13. What is lambda in Python?</td>
        </tr>
        <tr>
          <td id="L109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="109"></td>
          <td id="LC109" class="blob-code blob-code-inner js-file-line">Ans: It is a single expression anonymous function often used as In-line function.</td>
        </tr>
        <tr>
          <td id="L110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="110"></td>
          <td id="LC110" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="111"></td>
          <td id="LC111" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="112"></td>
          <td id="LC112" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="113"></td>
          <td id="LC113" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="114"></td>
          <td id="LC114" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="115"></td>
          <td id="LC115" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="116"></td>
          <td id="LC116" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="117"></td>
          <td id="LC117" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="118"></td>
          <td id="LC118" class="blob-code blob-code-inner js-file-line">14. Why lambda forms in python does not have statements?</td>
        </tr>
        <tr>
          <td id="L119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="119"></td>
          <td id="LC119" class="blob-code blob-code-inner js-file-line">Ans: A lambda form in python does not have statements as it is used to make new function object and then return them at runtime.</td>
        </tr>
        <tr>
          <td id="L120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="120"></td>
          <td id="LC120" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="121"></td>
          <td id="LC121" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="122"></td>
          <td id="LC122" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="123"></td>
          <td id="LC123" class="blob-code blob-code-inner js-file-line">15. What is pass in Python?</td>
        </tr>
        <tr>
          <td id="L124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="124"></td>
          <td id="LC124" class="blob-code blob-code-inner js-file-line">Ans: Pass means, no-operation Python statement, or in other words it is a place holder in compound statement, where there should be a blank left and nothing has to be written there.</td>
        </tr>
        <tr>
          <td id="L125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="125"></td>
          <td id="LC125" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="126"></td>
          <td id="LC126" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="127"></td>
          <td id="LC127" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="128"></td>
          <td id="LC128" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="129"></td>
          <td id="LC129" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="130"></td>
          <td id="LC130" class="blob-code blob-code-inner js-file-line">16. In Python what are iterators?</td>
        </tr>
        <tr>
          <td id="L131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="131"></td>
          <td id="LC131" class="blob-code blob-code-inner js-file-line">Ans: In Python, iterators are used to iterate a group of elements, containers like list.</td>
        </tr>
        <tr>
          <td id="L132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="132"></td>
          <td id="LC132" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="133"></td>
          <td id="LC133" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="134"></td>
          <td id="LC134" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="135"></td>
          <td id="LC135" class="blob-code blob-code-inner js-file-line">17. What is unit test in Python?</td>
        </tr>
        <tr>
          <td id="L136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="136"></td>
          <td id="LC136" class="blob-code blob-code-inner js-file-line">Ans: A unit testing framework in Python is known as unittest. It supports sharing of setups, automation testing, shutdown code for tests, aggregation of tests into collections etc.</td>
        </tr>
        <tr>
          <td id="L137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="137"></td>
          <td id="LC137" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="138"></td>
          <td id="LC138" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="139"></td>
          <td id="LC139" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="140"></td>
          <td id="LC140" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="141"></td>
          <td id="LC141" class="blob-code blob-code-inner js-file-line">18. In Python what is slicing?</td>
        </tr>
        <tr>
          <td id="L142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="142"></td>
          <td id="LC142" class="blob-code blob-code-inner js-file-line">Ans: A mechanism to select a range of items from sequence types like list, tuple, strings etc. is known as slicing.</td>
        </tr>
        <tr>
          <td id="L143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="143"></td>
          <td id="LC143" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="144"></td>
          <td id="LC144" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="145"></td>
          <td id="LC145" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="146"></td>
          <td id="LC146" class="blob-code blob-code-inner js-file-line">19. What are generators in Python?</td>
        </tr>
        <tr>
          <td id="L147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="147"></td>
          <td id="LC147" class="blob-code blob-code-inner js-file-line">Ans: The way of implementing iterators are known as generators. It is a normal function except that it yields expression in the function.</td>
        </tr>
        <tr>
          <td id="L148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="148"></td>
          <td id="LC148" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="149"></td>
          <td id="LC149" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="150"></td>
          <td id="LC150" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="151"></td>
          <td id="LC151" class="blob-code blob-code-inner js-file-line">20. What is docstring in Python?</td>
        </tr>
        <tr>
          <td id="L152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="152"></td>
          <td id="LC152" class="blob-code blob-code-inner js-file-line">Ans: A Python documentation string is known as docstring, it is a way of documenting Python functions, modules and classes.</td>
        </tr>
        <tr>
          <td id="L153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="153"></td>
          <td id="LC153" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="154"></td>
          <td id="LC154" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="155"></td>
          <td id="LC155" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="156"></td>
          <td id="LC156" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="157"></td>
          <td id="LC157" class="blob-code blob-code-inner js-file-line">21. How can you copy an object in Python?</td>
        </tr>
        <tr>
          <td id="L158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="158"></td>
          <td id="LC158" class="blob-code blob-code-inner js-file-line">Ans: To copy an object in Python, you can try copy.copy () or copy.deepcopy() for the general case. You cannot copy all objects but most of them.</td>
        </tr>
        <tr>
          <td id="L159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="159"></td>
          <td id="LC159" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="160"></td>
          <td id="LC160" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="161"></td>
          <td id="LC161" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="162"></td>
          <td id="LC162" class="blob-code blob-code-inner js-file-line">22. What is negative index in Python?</td>
        </tr>
        <tr>
          <td id="L163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="163"></td>
          <td id="LC163" class="blob-code blob-code-inner js-file-line">Ans: Python sequences can be index in positive and negative numbers. For positive index, 0 is the first index, 1 is the second index and so forth. For negative index, (-1) is the last index and (-2) is the second last index and so forth.</td>
        </tr>
        <tr>
          <td id="L164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="164"></td>
          <td id="LC164" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="165"></td>
          <td id="LC165" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="166"></td>
          <td id="LC166" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="167"></td>
          <td id="LC167" class="blob-code blob-code-inner js-file-line">23. How you can convert a number to a string?</td>
        </tr>
        <tr>
          <td id="L168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="168"></td>
          <td id="LC168" class="blob-code blob-code-inner js-file-line">Ans: In order to convert a number into a string, use the inbuilt function str(). If you want a octal or hexadecimal representation, use the inbuilt function oct() or hex().</td>
        </tr>
        <tr>
          <td id="L169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="169"></td>
          <td id="LC169" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="170"></td>
          <td id="LC170" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="171"></td>
          <td id="LC171" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="172"></td>
          <td id="LC172" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="173"></td>
          <td id="LC173" class="blob-code blob-code-inner js-file-line">24. What is the difference between Xrange and range?</td>
        </tr>
        <tr>
          <td id="L174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="174"></td>
          <td id="LC174" class="blob-code blob-code-inner js-file-line">Ans: Xrange returns the xrange object while range returns the list, and uses the same memory and no matter what the range size is.</td>
        </tr>
        <tr>
          <td id="L175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="175"></td>
          <td id="LC175" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="176"></td>
          <td id="LC176" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="177"></td>
          <td id="LC177" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="178"></td>
          <td id="LC178" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="179"></td>
          <td id="LC179" class="blob-code blob-code-inner js-file-line">25. What is module and package in Python?</td>
        </tr>
        <tr>
          <td id="L180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="180"></td>
          <td id="LC180" class="blob-code blob-code-inner js-file-line">Ans: In Python, module is the way to structure program. Each Python program file is a module, which imports other modules like objects and attributes.</td>
        </tr>
        <tr>
          <td id="L181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="181"></td>
          <td id="LC181" class="blob-code blob-code-inner js-file-line">The folder of Python program is a package of modules. A package can have modules or subfolders.</td>
        </tr>
        <tr>
          <td id="L182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="182"></td>
          <td id="LC182" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="183"></td>
          <td id="LC183" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="184"></td>
          <td id="LC184" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="185"></td>
          <td id="LC185" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="186"></td>
          <td id="LC186" class="blob-code blob-code-inner js-file-line">26. Mention what are the rules for local and global variables in Python?</td>
        </tr>
        <tr>
          <td id="L187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="187"></td>
          <td id="LC187" class="blob-code blob-code-inner js-file-line">Ans: Local variables: If a variable is assigned a new value anywhere within the function’s body, it’s assumed to be local.</td>
        </tr>
        <tr>
          <td id="L188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="188"></td>
          <td id="LC188" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="189"></td>
          <td id="LC189" class="blob-code blob-code-inner js-file-line">Global variables: Those variables that are only referenced inside a function are implicitly global.</td>
        </tr>
        <tr>
          <td id="L190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="190"></td>
          <td id="LC190" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="191"></td>
          <td id="LC191" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="192"></td>
          <td id="LC192" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="193"></td>
          <td id="LC193" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="194"></td>
          <td id="LC194" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="195"></td>
          <td id="LC195" class="blob-code blob-code-inner js-file-line">27. How can you share global variables across modules?</td>
        </tr>
        <tr>
          <td id="L196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="196"></td>
          <td id="LC196" class="blob-code blob-code-inner js-file-line">Ans: To share global variables across modules within a single program, create a special module. Import the config module in all modules of your application. The module will be available as a global variable across modules.</td>
        </tr>
        <tr>
          <td id="L197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="197"></td>
          <td id="LC197" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="198"></td>
          <td id="LC198" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="199"></td>
          <td id="LC199" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="200"></td>
          <td id="LC200" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="201"></td>
          <td id="LC201" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="202"></td>
          <td id="LC202" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="203"></td>
          <td id="LC203" class="blob-code blob-code-inner js-file-line">28. Explain how can you make a Python Script executable on Unix?To make a Python Script executable on Unix, you need to do two things,</td>
        </tr>
        <tr>
          <td id="L204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="204"></td>
          <td id="LC204" class="blob-code blob-code-inner js-file-line">Ans: Script file’s mode must be executable and</td>
        </tr>
        <tr>
          <td id="L205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="205"></td>
          <td id="LC205" class="blob-code blob-code-inner js-file-line">the first line must begin with # ( #!/usr/local/bin/python)</td>
        </tr>
        <tr>
          <td id="L206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="206"></td>
          <td id="LC206" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="207"></td>
          <td id="LC207" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="208"></td>
          <td id="LC208" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="209"></td>
          <td id="LC209" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="210"></td>
          <td id="LC210" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="211"></td>
          <td id="LC211" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="212"></td>
          <td id="LC212" class="blob-code blob-code-inner js-file-line">29. Explain how to delete a file in Python?</td>
        </tr>
        <tr>
          <td id="L213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="213"></td>
          <td id="LC213" class="blob-code blob-code-inner js-file-line">Ans: By using a command os.remove (filename) or os.unlink(filename)</td>
        </tr>
        <tr>
          <td id="L214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="214"></td>
          <td id="LC214" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="215"></td>
          <td id="LC215" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="216"></td>
          <td id="LC216" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="217"></td>
          <td id="LC217" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="218"></td>
          <td id="LC218" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="219"></td>
          <td id="LC219" class="blob-code blob-code-inner js-file-line">30. Explain how can you generate random numbers in Python?</td>
        </tr>
        <tr>
          <td id="L220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="220"></td>
          <td id="LC220" class="blob-code blob-code-inner js-file-line">Ans: To generate random numbers in Python, you need to import command as import random</td>
        </tr>
        <tr>
          <td id="L221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="221"></td>
          <td id="LC221" class="blob-code blob-code-inner js-file-line">random.random()</td>
        </tr>
        <tr>
          <td id="L222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="222"></td>
          <td id="LC222" class="blob-code blob-code-inner js-file-line">This returns a random floating point number in the range [0,1)</td>
        </tr>
        <tr>
          <td id="L223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="223"></td>
          <td id="LC223" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="224"></td>
          <td id="LC224" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="225"></td>
          <td id="LC225" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="226"></td>
          <td id="LC226" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="227"></td>
          <td id="LC227" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="228"></td>
          <td id="LC228" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="229"></td>
          <td id="LC229" class="blob-code blob-code-inner js-file-line">31. Explain how can you access a module written in Python from C?</td>
        </tr>
        <tr>
          <td id="L230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="230"></td>
          <td id="LC230" class="blob-code blob-code-inner js-file-line">Ans: You can access a module written in Python from C by following method, Module = =PyImport_ImportModule(“”);</td>
        </tr>
        <tr>
          <td id="L231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="231"></td>
          <td id="LC231" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="232"></td>
          <td id="LC232" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="233"></td>
          <td id="LC233" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="234"></td>
          <td id="LC234" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="235"></td>
          <td id="LC235" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="236"></td>
          <td id="LC236" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="237"></td>
          <td id="LC237" class="blob-code blob-code-inner js-file-line">32. Mention the use of // operator in Python?</td>
        </tr>
        <tr>
          <td id="L238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="238"></td>
          <td id="LC238" class="blob-code blob-code-inner js-file-line">Ans: It is a Floor Divisionoperator , which is used for dividing two operands with the result as quotient showing only digits before the decimal point. For instance, 10//5 = 2 and 10.0//5.0 = 2.0.</td>
        </tr>
        <tr>
          <td id="L239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="239"></td>
          <td id="LC239" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="240"></td>
          <td id="LC240" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="241"></td>
          <td id="LC241" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="242"></td>
          <td id="LC242" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="243"></td>
          <td id="LC243" class="blob-code blob-code-inner js-file-line">33. Mention five benefits of using Python?</td>
        </tr>
        <tr>
          <td id="L244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="244"></td>
          <td id="LC244" class="blob-code blob-code-inner js-file-line">Ans: Python comprises of a huge standard library for most Internet platforms like Email, HTML, etc.</td>
        </tr>
        <tr>
          <td id="L245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="245"></td>
          <td id="LC245" class="blob-code blob-code-inner js-file-line">Python does not require explicit memory management as the interpreter itself allocates the memory to new variables and free them automatically</td>
        </tr>
        <tr>
          <td id="L246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="246"></td>
          <td id="LC246" class="blob-code blob-code-inner js-file-line">Provide easy readability due to use of square brackets Easy-to-learn for beginners</td>
        </tr>
        <tr>
          <td id="L247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="247"></td>
          <td id="LC247" class="blob-code blob-code-inner js-file-line">Having the built-in data types saves programming time and effort from declaring variables</td>
        </tr>
        <tr>
          <td id="L248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="248"></td>
          <td id="LC248" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="249"></td>
          <td id="LC249" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="250"></td>
          <td id="LC250" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="251"></td>
          <td id="LC251" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="252"></td>
          <td id="LC252" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="253"></td>
          <td id="LC253" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="254"></td>
          <td id="LC254" class="blob-code blob-code-inner js-file-line">34. Mention the use of the split function in Python?</td>
        </tr>
        <tr>
          <td id="L255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="255"></td>
          <td id="LC255" class="blob-code blob-code-inner js-file-line">Ans: The use of the split function in Python is that it breaks a string into shorter strings using the defined separator. It gives a list of all words present in the string.</td>
        </tr>
        <tr>
          <td id="L256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="256"></td>
          <td id="LC256" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="257"></td>
          <td id="LC257" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="258"></td>
          <td id="LC258" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="259"></td>
          <td id="LC259" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="260"></td>
          <td id="LC260" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="261"></td>
          <td id="LC261" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="262"></td>
          <td id="LC262" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="263"></td>
          <td id="LC263" class="blob-code blob-code-inner js-file-line">35. Explain what is Flask &amp; its benefits?</td>
        </tr>
        <tr>
          <td id="L264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="264"></td>
          <td id="LC264" class="blob-code blob-code-inner js-file-line">Ans: Flask is a web micro framework for Python based on “Werkzeug, Jinja 2 and good intentions” BSD licensed. Werkzeug and jingja are two of its dependencies.</td>
        </tr>
        <tr>
          <td id="L265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="265"></td>
          <td id="LC265" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="266"></td>
          <td id="LC266" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="267"></td>
          <td id="LC267" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="268"></td>
          <td id="LC268" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="269"></td>
          <td id="LC269" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="270"></td>
          <td id="LC270" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="271"></td>
          <td id="LC271" class="blob-code blob-code-inner js-file-line">Flask is part of the micro-framework. Which means it will have little to no dependencies on external libraries. It makes the framework light while there is little dependency to update and less security bugs.</td>
        </tr>
        <tr>
          <td id="L272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="272"></td>
          <td id="LC272" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="273"></td>
          <td id="LC273" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="274"></td>
          <td id="LC274" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="275"></td>
          <td id="LC275" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="276"></td>
          <td id="LC276" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="277"></td>
          <td id="LC277" class="blob-code blob-code-inner js-file-line">36. Mention what is the difference between Django, Pyramid, and Flask?</td>
        </tr>
        <tr>
          <td id="L278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="278"></td>
          <td id="LC278" class="blob-code blob-code-inner js-file-line">Ans: Flask is a “micro framework” primarily build for a small application with simpler requirements. In flask, you have to use external libraries. Flask is ready to use.</td>
        </tr>
        <tr>
          <td id="L279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="279"></td>
          <td id="LC279" class="blob-code blob-code-inner js-file-line">Pyramid are build for larger applications. It provides flexibility and lets the developer use the right tools for their project. The developer can choose the database, URL structure, templating style and more. Pyramid is heavy configurable.</td>
        </tr>
        <tr>
          <td id="L280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="280"></td>
          <td id="LC280" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="281"></td>
          <td id="LC281" class="blob-code blob-code-inner js-file-line">Like Pyramid, Django can also used for larger applications. It includes an ORM.</td>
        </tr>
        <tr>
          <td id="L282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="282"></td>
          <td id="LC282" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="283"></td>
          <td id="LC283" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="284"></td>
          <td id="LC284" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="285"></td>
          <td id="LC285" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="286"></td>
          <td id="LC286" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="287"></td>
          <td id="LC287" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="288"></td>
          <td id="LC288" class="blob-code blob-code-inner js-file-line">37. Mention what is Flask-WTF and what are their features?</td>
        </tr>
        <tr>
          <td id="L289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="289"></td>
          <td id="LC289" class="blob-code blob-code-inner js-file-line">Ans: Flask-WTF offers simple integration with WTForms. Features include for Flask WTF are</td>
        </tr>
        <tr>
          <td id="L290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="290"></td>
          <td id="LC290" class="blob-code blob-code-inner js-file-line">Integration with wtforms Secure form with csrf token Global csrf protection Internationalization integration Recaptcha supporting</td>
        </tr>
        <tr>
          <td id="L291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="291"></td>
          <td id="LC291" class="blob-code blob-code-inner js-file-line">File upload that works with Flask Uploads</td>
        </tr>
        <tr>
          <td id="L292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="292"></td>
          <td id="LC292" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="293"></td>
          <td id="LC293" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="294"></td>
          <td id="LC294" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="295"></td>
          <td id="LC295" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="296"></td>
          <td id="LC296" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="297"></td>
          <td id="LC297" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="298"></td>
          <td id="LC298" class="blob-code blob-code-inner js-file-line">38. Explain what is the common way for the Flask script to work?</td>
        </tr>
        <tr>
          <td id="L299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="299"></td>
          <td id="LC299" class="blob-code blob-code-inner js-file-line">Ans: The common way for the flask script to work is…</td>
        </tr>
        <tr>
          <td id="L300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="300"></td>
          <td id="LC300" class="blob-code blob-code-inner js-file-line">Either it should be the import path for your application Or the path to a Python file</td>
        </tr>
        <tr>
          <td id="L301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="301"></td>
          <td id="LC301" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="302"></td>
          <td id="LC302" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="303"></td>
          <td id="LC303" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="304"></td>
          <td id="LC304" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="305"></td>
          <td id="LC305" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="306"></td>
          <td id="LC306" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="307"></td>
          <td id="LC307" class="blob-code blob-code-inner js-file-line">39. Explain how you can access sessions in Flask?</td>
        </tr>
        <tr>
          <td id="L308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="308"></td>
          <td id="LC308" class="blob-code blob-code-inner js-file-line">Ans: A session basically allows you to remember information from one request to another. In a flask, it uses a signed cookie so the user can look at the session contents and modify. The user can modify the session if only it has the secret key Flask.secret_key.</td>
        </tr>
        <tr>
          <td id="L309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="309"></td>
          <td id="LC309" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="310"></td>
          <td id="LC310" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="311"></td>
          <td id="LC311" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="312"></td>
          <td id="LC312" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="313"></td>
          <td id="LC313" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="314"></td>
          <td id="LC314" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="315"></td>
          <td id="LC315" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="316"></td>
          <td id="LC316" class="blob-code blob-code-inner js-file-line">40. Is Flask an MVC model and if yes give an example showing MVC pattern for your application?</td>
        </tr>
        <tr>
          <td id="L317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="317"></td>
          <td id="LC317" class="blob-code blob-code-inner js-file-line">Ans: Basically, Flask is a minimalistic framework which behaves same as MVC framework. So MVC is a perfect fit for Flask, and the pattern for MVC we will consider for the following example</td>
        </tr>
        <tr>
          <td id="L318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="318"></td>
          <td id="LC318" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="319"></td>
          <td id="LC319" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="320"></td>
          <td id="LC320" class="blob-code blob-code-inner js-file-line">from flask import Flaskapp = Flask(_name_)</td>
        </tr>
        <tr>
          <td id="L321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="321"></td>
          <td id="LC321" class="blob-code blob-code-inner js-file-line">@app.route(“/”)</td>
        </tr>
        <tr>
          <td id="L322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="322"></td>
          <td id="LC322" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="323"></td>
          <td id="LC323" class="blob-code blob-code-inner js-file-line">Def hello():</td>
        </tr>
        <tr>
          <td id="L324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="324"></td>
          <td id="LC324" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="325"></td>
          <td id="LC325" class="blob-code blob-code-inner js-file-line">return “Hello World”</td>
        </tr>
        <tr>
          <td id="L326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="326"></td>
          <td id="LC326" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="327"></td>
          <td id="LC327" class="blob-code blob-code-inner js-file-line">app.run(debug = True)</td>
        </tr>
        <tr>
          <td id="L328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="328"></td>
          <td id="LC328" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="329"></td>
          <td id="LC329" class="blob-code blob-code-inner js-file-line">In this code your,</td>
        </tr>
        <tr>
          <td id="L330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="330"></td>
          <td id="LC330" class="blob-code blob-code-inner js-file-line">Configuration part will be</td>
        </tr>
        <tr>
          <td id="L331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="331"></td>
          <td id="LC331" class="blob-code blob-code-inner js-file-line">from flask import Flask</td>
        </tr>
        <tr>
          <td id="L332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="332"></td>
          <td id="LC332" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="333"></td>
          <td id="LC333" class="blob-code blob-code-inner js-file-line">app = Flask(_name_)</td>
        </tr>
        <tr>
          <td id="L334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="334"></td>
          <td id="LC334" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="335"></td>
          <td id="LC335" class="blob-code blob-code-inner js-file-line">View part will be</td>
        </tr>
        <tr>
          <td id="L336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="336"></td>
          <td id="LC336" class="blob-code blob-code-inner js-file-line">@app.route(“/”)</td>
        </tr>
        <tr>
          <td id="L337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="337"></td>
          <td id="LC337" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="338"></td>
          <td id="LC338" class="blob-code blob-code-inner js-file-line">Def hello():</td>
        </tr>
        <tr>
          <td id="L339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="339"></td>
          <td id="LC339" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="340"></td>
          <td id="LC340" class="blob-code blob-code-inner js-file-line">return “Hello World”</td>
        </tr>
        <tr>
          <td id="L341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="341"></td>
          <td id="LC341" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="342"></td>
          <td id="LC342" class="blob-code blob-code-inner js-file-line">While you model or main part will be</td>
        </tr>
        <tr>
          <td id="L343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="343"></td>
          <td id="LC343" class="blob-code blob-code-inner js-file-line">app.run(debug = True)</td>
        </tr>
        <tr>
          <td id="L344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="344"></td>
          <td id="LC344" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="345"></td>
          <td id="LC345" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="346"></td>
          <td id="LC346" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="347"></td>
          <td id="LC347" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="348"></td>
          <td id="LC348" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="349"></td>
          <td id="LC349" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="350"></td>
          <td id="LC350" class="blob-code blob-code-inner js-file-line">41. What type of a language is python? Interpreted or Compiled?</td>
        </tr>
        <tr>
          <td id="L351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="351"></td>
          <td id="LC351" class="blob-code blob-code-inner js-file-line">Ans: Beginner’s Answer:</td>
        </tr>
        <tr>
          <td id="L352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="352"></td>
          <td id="LC352" class="blob-code blob-code-inner js-file-line">Python is an interpreted, interactive, object­oriented programming language.</td>
        </tr>
        <tr>
          <td id="L353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="353"></td>
          <td id="LC353" class="blob-code blob-code-inner js-file-line">Expert Answer:</td>
        </tr>
        <tr>
          <td id="L354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="354"></td>
          <td id="LC354" class="blob-code blob-code-inner js-file-line">Python is an interpreted language, as opposed to a compiled one, though the</td>
        </tr>
        <tr>
          <td id="L355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="355"></td>
          <td id="LC355" class="blob-code blob-code-inner js-file-line">distinction can be blurry because of the presence of the bytecode compiler. This means</td>
        </tr>
        <tr>
          <td id="L356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="356"></td>
          <td id="LC356" class="blob-code blob-code-inner js-file-line">that source files can be run directly without explicitly creating an executable which is</td>
        </tr>
        <tr>
          <td id="L357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="357"></td>
          <td id="LC357" class="blob-code blob-code-inner js-file-line">then run.</td>
        </tr>
        <tr>
          <td id="L358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="358"></td>
          <td id="LC358" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="359"></td>
          <td id="LC359" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="360"></td>
          <td id="LC360" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="361"></td>
          <td id="LC361" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="362"></td>
          <td id="LC362" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="363"></td>
          <td id="LC363" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="364"></td>
          <td id="LC364" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="365"></td>
          <td id="LC365" class="blob-code blob-code-inner js-file-line">42. What do you mean by python being an “interpreted language”? (Continues from previous question)</td>
        </tr>
        <tr>
          <td id="L366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="366"></td>
          <td id="LC366" class="blob-code blob-code-inner js-file-line">Ans: An interpreted language​is a programming language​for which most of its</td>
        </tr>
        <tr>
          <td id="L367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="367"></td>
          <td id="LC367" class="blob-code blob-code-inner js-file-line">implementations execute instructions directly, without previously compiling a program</td>
        </tr>
        <tr>
          <td id="L368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="368"></td>
          <td id="LC368" class="blob-code blob-code-inner js-file-line">into machine­language​instructions. In context of Python, it means that Python program</td>
        </tr>
        <tr>
          <td id="L369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="369"></td>
          <td id="LC369" class="blob-code blob-code-inner js-file-line">runs directly from the source code.</td>
        </tr>
        <tr>
          <td id="L370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="370"></td>
          <td id="LC370" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="371"></td>
          <td id="LC371" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="372"></td>
          <td id="LC372" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="373"></td>
          <td id="LC373" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="374"></td>
          <td id="LC374" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="375"></td>
          <td id="LC375" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="376"></td>
          <td id="LC376" class="blob-code blob-code-inner js-file-line">43. What is python’s standard way of identifying a block of code?</td>
        </tr>
        <tr>
          <td id="L377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="377"></td>
          <td id="LC377" class="blob-code blob-code-inner js-file-line">Ans: Indentation.</td>
        </tr>
        <tr>
          <td id="L378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="378"></td>
          <td id="LC378" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="379"></td>
          <td id="LC379" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="380"></td>
          <td id="LC380" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="381"></td>
          <td id="LC381" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="382"></td>
          <td id="LC382" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="383"></td>
          <td id="LC383" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="384"></td>
          <td id="LC384" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="385"></td>
          <td id="LC385" class="blob-code blob-code-inner js-file-line">44. Please provide an example implementation of a function called “my_func” that returns the square of a given variable “x”. (Continues from previous question)</td>
        </tr>
        <tr>
          <td id="L386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="386"></td>
          <td id="LC386" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="387"></td>
          <td id="LC387" class="blob-code blob-code-inner js-file-line">defmy_func(x):</td>
        </tr>
        <tr>
          <td id="L388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="388"></td>
          <td id="LC388" class="blob-code blob-code-inner js-file-line">returnx**2</td>
        </tr>
        <tr>
          <td id="L389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="389"></td>
          <td id="LC389" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="390"></td>
          <td id="LC390" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="391"></td>
          <td id="LC391" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="392"></td>
          <td id="LC392" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="393"></td>
          <td id="LC393" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="394"></td>
          <td id="LC394" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="395"></td>
          <td id="LC395" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="396"></td>
          <td id="LC396" class="blob-code blob-code-inner js-file-line">45. Is python statically typed or dynamically typed?</td>
        </tr>
        <tr>
          <td id="L397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="397"></td>
          <td id="LC397" class="blob-code blob-code-inner js-file-line">Ans: ​Dynamic.</td>
        </tr>
        <tr>
          <td id="L398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="398"></td>
          <td id="LC398" class="blob-code blob-code-inner js-file-line">In a statically typed language, the type of variables must be known (and usually</td>
        </tr>
        <tr>
          <td id="L399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="399"></td>
          <td id="LC399" class="blob-code blob-code-inner js-file-line">declared) at the point at which it is used. Attempting to use it will be an error. In a</td>
        </tr>
        <tr>
          <td id="L400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="400"></td>
          <td id="LC400" class="blob-code blob-code-inner js-file-line">dynamically typed language, objects still have a type, but it is determined at runtime.</td>
        </tr>
        <tr>
          <td id="L401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="401"></td>
          <td id="LC401" class="blob-code blob-code-inner js-file-line">You are free to bind names (variables) to different objects with a different type. So long</td>
        </tr>
        <tr>
          <td id="L402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="402"></td>
          <td id="LC402" class="blob-code blob-code-inner js-file-line">as you only perform operations valid for the type the interpreter doesn’t care what type</td>
        </tr>
        <tr>
          <td id="L403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="403"></td>
          <td id="LC403" class="blob-code blob-code-inner js-file-line">they actually are.</td>
        </tr>
        <tr>
          <td id="L404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="404"></td>
          <td id="LC404" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="405"></td>
          <td id="LC405" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="406"></td>
          <td id="LC406" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="407"></td>
          <td id="LC407" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="408"></td>
          <td id="LC408" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="409"></td>
          <td id="LC409" class="blob-code blob-code-inner js-file-line">46. Is python strongly typed or weakly typed language?</td>
        </tr>
        <tr>
          <td id="L410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="410"></td>
          <td id="LC410" class="blob-code blob-code-inner js-file-line">Ans: ​Strong.</td>
        </tr>
        <tr>
          <td id="L411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="411"></td>
          <td id="LC411" class="blob-code blob-code-inner js-file-line">In a weakly typed language a compiler / interpreter will sometimes change the</td>
        </tr>
        <tr>
          <td id="L412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="412"></td>
          <td id="LC412" class="blob-code blob-code-inner js-file-line">type of a variable. For example, in some languages (like JavaScript) you can add</td>
        </tr>
        <tr>
          <td id="L413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="413"></td>
          <td id="LC413" class="blob-code blob-code-inner js-file-line">strings to numbers ‘x’ + 3 becomes ‘x3’. This can be a problem because if you have</td>
        </tr>
        <tr>
          <td id="L414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="414"></td>
          <td id="LC414" class="blob-code blob-code-inner js-file-line">made a mistake in your program, instead of raising an exception execution will continue</td>
        </tr>
        <tr>
          <td id="L415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="415"></td>
          <td id="LC415" class="blob-code blob-code-inner js-file-line">but your variables now have wrong and unexpected values. In a strongly typed</td>
        </tr>
        <tr>
          <td id="L416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="416"></td>
          <td id="LC416" class="blob-code blob-code-inner js-file-line">language (like Python) you can’t perform operations inappropriate to the type of the</td>
        </tr>
        <tr>
          <td id="L417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="417"></td>
          <td id="LC417" class="blob-code blob-code-inner js-file-line">object ­ attempting to add numbers to strings will fail. Problems like these are easier to</td>
        </tr>
        <tr>
          <td id="L418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="418"></td>
          <td id="LC418" class="blob-code blob-code-inner js-file-line">diagnose because the exception is raised at the point where the error occurs rather than</td>
        </tr>
        <tr>
          <td id="L419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="419"></td>
          <td id="LC419" class="blob-code blob-code-inner js-file-line">at some other, potentially far removed, place.</td>
        </tr>
        <tr>
          <td id="L420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="420"></td>
          <td id="LC420" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="421"></td>
          <td id="LC421" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="422"></td>
          <td id="LC422" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="423"></td>
          <td id="LC423" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="424"></td>
          <td id="LC424" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="425"></td>
          <td id="LC425" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="426"></td>
          <td id="LC426" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="427"></td>
          <td id="LC427" class="blob-code blob-code-inner js-file-line">47. Create a unicode string in python with the string “This is a test string”?</td>
        </tr>
        <tr>
          <td id="L428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="428"></td>
          <td id="LC428" class="blob-code blob-code-inner js-file-line">Ans: some_variable=u’Thisisateststring’</td>
        </tr>
        <tr>
          <td id="L429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="429"></td>
          <td id="LC429" class="blob-code blob-code-inner js-file-line">Or</td>
        </tr>
        <tr>
          <td id="L430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="430"></td>
          <td id="LC430" class="blob-code blob-code-inner js-file-line">some_variable=u”Thisisateststring”</td>
        </tr>
        <tr>
          <td id="L431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="431"></td>
          <td id="LC431" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="432"></td>
          <td id="LC432" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="433"></td>
          <td id="LC433" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="434"></td>
          <td id="LC434" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="435"></td>
          <td id="LC435" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="436"></td>
          <td id="LC436" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="437"></td>
          <td id="LC437" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="438"></td>
          <td id="LC438" class="blob-code blob-code-inner js-file-line">48. What is the python syntax for switch case statements?</td>
        </tr>
        <tr>
          <td id="L439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="439"></td>
          <td id="LC439" class="blob-code blob-code-inner js-file-line">Ans: Python doesn’t support switch­case statements. You can use if­else statements</td>
        </tr>
        <tr>
          <td id="L440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="440"></td>
          <td id="LC440" class="blob-code blob-code-inner js-file-line">for this purpose.</td>
        </tr>
        <tr>
          <td id="L441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="441"></td>
          <td id="LC441" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="442"></td>
          <td id="LC442" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="443"></td>
          <td id="LC443" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="444"></td>
          <td id="LC444" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="445"></td>
          <td id="LC445" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="446"></td>
          <td id="LC446" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="447"></td>
          <td id="LC447" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="448"></td>
          <td id="LC448" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="449"></td>
          <td id="LC449" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="450"></td>
          <td id="LC450" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="451"></td>
          <td id="LC451" class="blob-code blob-code-inner js-file-line">49. What is a lambda statement? Provide an example.</td>
        </tr>
        <tr>
          <td id="L452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="452"></td>
          <td id="LC452" class="blob-code blob-code-inner js-file-line">Ans: A lambda statement is used to create new function objects and then return them at</td>
        </tr>
        <tr>
          <td id="L453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="453"></td>
          <td id="LC453" class="blob-code blob-code-inner js-file-line">runtime. Example:</td>
        </tr>
        <tr>
          <td id="L454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="454"></td>
          <td id="LC454" class="blob-code blob-code-inner js-file-line">my_func=lambdax:x**2</td>
        </tr>
        <tr>
          <td id="L455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="455"></td>
          <td id="LC455" class="blob-code blob-code-inner js-file-line">creates a function called my_func that returns the square of the argument</td>
        </tr>
        <tr>
          <td id="L456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="456"></td>
          <td id="LC456" class="blob-code blob-code-inner js-file-line">passed.</td>
        </tr>
        <tr>
          <td id="L457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="457"></td>
          <td id="LC457" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="458"></td>
          <td id="LC458" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="459"></td>
          <td id="LC459" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="460"></td>
          <td id="LC460" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="461"></td>
          <td id="LC461" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="462"></td>
          <td id="LC462" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="463"></td>
          <td id="LC463" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="464"></td>
          <td id="LC464" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="465"></td>
          <td id="LC465" class="blob-code blob-code-inner js-file-line">50.What are the rules for local and global variables in Python?</td>
        </tr>
        <tr>
          <td id="L466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="466"></td>
          <td id="LC466" class="blob-code blob-code-inner js-file-line">Ans: If a variable is defined outside function then it is implicitly global​. If variable is</td>
        </tr>
        <tr>
          <td id="L467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="467"></td>
          <td id="LC467" class="blob-code blob-code-inner js-file-line">assigned new value inside the function means it is local​. If we want to make it global we</td>
        </tr>
        <tr>
          <td id="L468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="468"></td>
          <td id="LC468" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="469"></td>
          <td id="LC469" class="blob-code blob-code-inner js-file-line">need to explicitly define it as global. Variable referenced inside the function are implicit</td>
        </tr>
        <tr>
          <td id="L470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="470"></td>
          <td id="LC470" class="blob-code blob-code-inner js-file-line">global​</td>
        </tr>
        <tr>
          <td id="L471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="471"></td>
          <td id="LC471" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="472"></td>
          <td id="LC472" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="473"></td>
          <td id="LC473" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="474"></td>
          <td id="LC474" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="475"></td>
          <td id="LC475" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="476"></td>
          <td id="LC476" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="477"></td>
          <td id="LC477" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="478"></td>
          <td id="LC478" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="479"></td>
          <td id="LC479" class="blob-code blob-code-inner js-file-line">51.What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="480"></td>
          <td id="LC480" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="481"></td>
          <td id="LC481" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="482"></td>
          <td id="LC482" class="blob-code blob-code-inner js-file-line">#!/usr/bin/python</td>
        </tr>
        <tr>
          <td id="L483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="483"></td>
          <td id="LC483" class="blob-code blob-code-inner js-file-line">deffun1(a):</td>
        </tr>
        <tr>
          <td id="L484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="484"></td>
          <td id="LC484" class="blob-code blob-code-inner js-file-line">print’a:’,a</td>
        </tr>
        <tr>
          <td id="L485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="485"></td>
          <td id="LC485" class="blob-code blob-code-inner js-file-line">a=33;</td>
        </tr>
        <tr>
          <td id="L486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="486"></td>
          <td id="LC486" class="blob-code blob-code-inner js-file-line">print’locala:’,a</td>
        </tr>
        <tr>
          <td id="L487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="487"></td>
          <td id="LC487" class="blob-code blob-code-inner js-file-line">a=100</td>
        </tr>
        <tr>
          <td id="L488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="488"></td>
          <td id="LC488" class="blob-code blob-code-inner js-file-line">fun1(a)</td>
        </tr>
        <tr>
          <td id="L489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="489"></td>
          <td id="LC489" class="blob-code blob-code-inner js-file-line">print’aoutsidefun1:’,a</td>
        </tr>
        <tr>
          <td id="L490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="490"></td>
          <td id="LC490" class="blob-code blob-code-inner js-file-line">Ans. Output:</td>
        </tr>
        <tr>
          <td id="L491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="491"></td>
          <td id="LC491" class="blob-code blob-code-inner js-file-line">a:100</td>
        </tr>
        <tr>
          <td id="L492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="492"></td>
          <td id="LC492" class="blob-code blob-code-inner js-file-line">locala:33</td>
        </tr>
        <tr>
          <td id="L493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="493"></td>
          <td id="LC493" class="blob-code blob-code-inner js-file-line">aoutsidefun1:100</td>
        </tr>
        <tr>
          <td id="L494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="494"></td>
          <td id="LC494" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="495"></td>
          <td id="LC495" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="496"></td>
          <td id="LC496" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="497"></td>
          <td id="LC497" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="498"></td>
          <td id="LC498" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="499"></td>
          <td id="LC499" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="500"></td>
          <td id="LC500" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="501"></td>
          <td id="LC501" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="502"></td>
          <td id="LC502" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="503"></td>
          <td id="LC503" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="504"></td>
          <td id="LC504" class="blob-code blob-code-inner js-file-line">52.What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="505"></td>
          <td id="LC505" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="506"></td>
          <td id="LC506" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="507"></td>
          <td id="LC507" class="blob-code blob-code-inner js-file-line">#!/usr/bin/python</td>
        </tr>
        <tr>
          <td id="L508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="508"></td>
          <td id="LC508" class="blob-code blob-code-inner js-file-line">deffun2():</td>
        </tr>
        <tr>
          <td id="L509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="509"></td>
          <td id="LC509" class="blob-code blob-code-inner js-file-line">globalb</td>
        </tr>
        <tr>
          <td id="L510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="510"></td>
          <td id="LC510" class="blob-code blob-code-inner js-file-line">print’b:’,b</td>
        </tr>
        <tr>
          <td id="L511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="511"></td>
          <td id="LC511" class="blob-code blob-code-inner js-file-line">b=33</td>
        </tr>
        <tr>
          <td id="L512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="512"></td>
          <td id="LC512" class="blob-code blob-code-inner js-file-line">print’globalb:’,b</td>
        </tr>
        <tr>
          <td id="L513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="513"></td>
          <td id="LC513" class="blob-code blob-code-inner js-file-line">b=100</td>
        </tr>
        <tr>
          <td id="L514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="514"></td>
          <td id="LC514" class="blob-code blob-code-inner js-file-line">fun2()</td>
        </tr>
        <tr>
          <td id="L515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="515"></td>
          <td id="LC515" class="blob-code blob-code-inner js-file-line">print’boutsidefun2′,b</td>
        </tr>
        <tr>
          <td id="L516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="516"></td>
          <td id="LC516" class="blob-code blob-code-inner js-file-line">Ans​. Output:</td>
        </tr>
        <tr>
          <td id="L517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="517"></td>
          <td id="LC517" class="blob-code blob-code-inner js-file-line">b:100</td>
        </tr>
        <tr>
          <td id="L518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="518"></td>
          <td id="LC518" class="blob-code blob-code-inner js-file-line">globalb:33</td>
        </tr>
        <tr>
          <td id="L519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="519"></td>
          <td id="LC519" class="blob-code blob-code-inner js-file-line">boutsidefun2:33</td>
        </tr>
        <tr>
          <td id="L520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="520"></td>
          <td id="LC520" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="521"></td>
          <td id="LC521" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="522"></td>
          <td id="LC522" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="523"></td>
          <td id="LC523" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="524"></td>
          <td id="LC524" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="525"></td>
          <td id="LC525" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="526"></td>
          <td id="LC526" class="blob-code blob-code-inner js-file-line">53. What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="527"></td>
          <td id="LC527" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="528"></td>
          <td id="LC528" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="529"></td>
          <td id="LC529" class="blob-code blob-code-inner js-file-line">#!/usr/bin/python</td>
        </tr>
        <tr>
          <td id="L530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="530"></td>
          <td id="LC530" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="531"></td>
          <td id="LC531" class="blob-code blob-code-inner js-file-line">deffoo(x,y):</td>
        </tr>
        <tr>
          <td id="L532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="532"></td>
          <td id="LC532" class="blob-code blob-code-inner js-file-line">globala</td>
        </tr>
        <tr>
          <td id="L533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="533"></td>
          <td id="LC533" class="blob-code blob-code-inner js-file-line">a=42</td>
        </tr>
        <tr>
          <td id="L534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="534"></td>
          <td id="LC534" class="blob-code blob-code-inner js-file-line">x,y=y,x</td>
        </tr>
        <tr>
          <td id="L535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="535"></td>
          <td id="LC535" class="blob-code blob-code-inner js-file-line">b=33</td>
        </tr>
        <tr>
          <td id="L536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="536"></td>
          <td id="LC536" class="blob-code blob-code-inner js-file-line">b=17</td>
        </tr>
        <tr>
          <td id="L537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="537"></td>
          <td id="LC537" class="blob-code blob-code-inner js-file-line">c=100</td>
        </tr>
        <tr>
          <td id="L538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="538"></td>
          <td id="LC538" class="blob-code blob-code-inner js-file-line">print(a,b,x,y)</td>
        </tr>
        <tr>
          <td id="L539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="539"></td>
          <td id="LC539" class="blob-code blob-code-inner js-file-line">a,b,x,y=1,15,3,4</td>
        </tr>
        <tr>
          <td id="L540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="540"></td>
          <td id="LC540" class="blob-code blob-code-inner js-file-line">foo(17,4)</td>
        </tr>
        <tr>
          <td id="L541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="541"></td>
          <td id="LC541" class="blob-code blob-code-inner js-file-line">print(a,b,x,y)</td>
        </tr>
        <tr>
          <td id="L542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="542"></td>
          <td id="LC542" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="543"></td>
          <td id="LC543" class="blob-code blob-code-inner js-file-line">Ans​.Output:</td>
        </tr>
        <tr>
          <td id="L544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="544"></td>
          <td id="LC544" class="blob-code blob-code-inner js-file-line">4217417</td>
        </tr>
        <tr>
          <td id="L545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="545"></td>
          <td id="LC545" class="blob-code blob-code-inner js-file-line">421534</td>
        </tr>
        <tr>
          <td id="L546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="546"></td>
          <td id="LC546" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="547"></td>
          <td id="LC547" class="blob-code blob-code-inner js-file-line">54.What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="548"></td>
          <td id="LC548" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="549"></td>
          <td id="LC549" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="550"></td>
          <td id="LC550" class="blob-code blob-code-inner js-file-line">#!/usr/bin/python</td>
        </tr>
        <tr>
          <td id="L551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="551"></td>
          <td id="LC551" class="blob-code blob-code-inner js-file-line">deffoo(x=[]):</td>
        </tr>
        <tr>
          <td id="L552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="552"></td>
          <td id="LC552" class="blob-code blob-code-inner js-file-line">x.append(1)</td>
        </tr>
        <tr>
          <td id="L553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="553"></td>
          <td id="LC553" class="blob-code blob-code-inner js-file-line">returnx</td>
        </tr>
        <tr>
          <td id="L554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="554"></td>
          <td id="LC554" class="blob-code blob-code-inner js-file-line">foo()</td>
        </tr>
        <tr>
          <td id="L555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="555"></td>
          <td id="LC555" class="blob-code blob-code-inner js-file-line">foo()</td>
        </tr>
        <tr>
          <td id="L556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="556"></td>
          <td id="LC556" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="557"></td>
          <td id="LC557" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="558"></td>
          <td id="LC558" class="blob-code blob-code-inner js-file-line">[1]</td>
        </tr>
        <tr>
          <td id="L559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="559"></td>
          <td id="LC559" class="blob-code blob-code-inner js-file-line">[1,1]</td>
        </tr>
        <tr>
          <td id="L560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="560"></td>
          <td id="LC560" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="561"></td>
          <td id="LC561" class="blob-code blob-code-inner js-file-line">55. What is the purpose of ​#!/usr/bin/python​on the first line in the above</td>
        </tr>
        <tr>
          <td id="L562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="562"></td>
          <td id="LC562" class="blob-code blob-code-inner js-file-line">code? Is there any advantage?</td>
        </tr>
        <tr>
          <td id="L563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="563"></td>
          <td id="LC563" class="blob-code blob-code-inner js-file-line">Ans: By specifying #!/usr/bin/pythonyou specify exactly which interpreter will be</td>
        </tr>
        <tr>
          <td id="L564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="564"></td>
          <td id="LC564" class="blob-code blob-code-inner js-file-line">used to run the script on a particular system. This is the hardcoded path to the python</td>
        </tr>
        <tr>
          <td id="L565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="565"></td>
          <td id="LC565" class="blob-code blob-code-inner js-file-line">interpreter for that particular system. The advantage of this line is that you can use a</td>
        </tr>
        <tr>
          <td id="L566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="566"></td>
          <td id="LC566" class="blob-code blob-code-inner js-file-line">specific python version to run your code.</td>
        </tr>
        <tr>
          <td id="L567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="567"></td>
          <td id="LC567" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="568"></td>
          <td id="LC568" class="blob-code blob-code-inner js-file-line">56.What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="569"></td>
          <td id="LC569" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="570"></td>
          <td id="LC570" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="571"></td>
          <td id="LC571" class="blob-code blob-code-inner js-file-line">list=[‘a’,’b’,’c’,’d’,’e’]</td>
        </tr>
        <tr>
          <td id="L572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="572"></td>
          <td id="LC572" class="blob-code blob-code-inner js-file-line">printlist[10]</td>
        </tr>
        <tr>
          <td id="L573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="573"></td>
          <td id="LC573" class="blob-code blob-code-inner js-file-line">Ans. Output:</td>
        </tr>
        <tr>
          <td id="L574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="574"></td>
          <td id="LC574" class="blob-code blob-code-inner js-file-line">IndexError.Or Error.</td>
        </tr>
        <tr>
          <td id="L575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="575"></td>
          <td id="LC575" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="576"></td>
          <td id="LC576" class="blob-code blob-code-inner js-file-line">57.What is the output of the following program?</td>
        </tr>
        <tr>
          <td id="L577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="577"></td>
          <td id="LC577" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="578"></td>
          <td id="LC578" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="579"></td>
          <td id="LC579" class="blob-code blob-code-inner js-file-line">list=[‘a’,’b’,’c’,’d’,’e’]</td>
        </tr>
        <tr>
          <td id="L580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="580"></td>
          <td id="LC580" class="blob-code blob-code-inner js-file-line">printlist[10:]</td>
        </tr>
        <tr>
          <td id="L581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="581"></td>
          <td id="LC581" class="blob-code blob-code-inner js-file-line">Ans​. Output:</td>
        </tr>
        <tr>
          <td id="L582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="582"></td>
          <td id="LC582" class="blob-code blob-code-inner js-file-line">[]</td>
        </tr>
        <tr>
          <td id="L583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="583"></td>
          <td id="LC583" class="blob-code blob-code-inner js-file-line">Theabovecodewilloutput[],andwillnotresultinanIndexError.</td>
        </tr>
        <tr>
          <td id="L584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="584"></td>
          <td id="LC584" class="blob-code blob-code-inner js-file-line">As one would expect, attempting to access a member of a list using an index that</td>
        </tr>
        <tr>
          <td id="L585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="585"></td>
          <td id="LC585" class="blob-code blob-code-inner js-file-line">exceeds the number of members results in an IndexError.</td>
        </tr>
        <tr>
          <td id="L586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="586"></td>
          <td id="LC586" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="587"></td>
          <td id="LC587" class="blob-code blob-code-inner js-file-line">58. What does this list comprehension do:</td>
        </tr>
        <tr>
          <td id="L588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="588"></td>
          <td id="LC588" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="589"></td>
          <td id="LC589" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="590"></td>
          <td id="LC590" class="blob-code blob-code-inner js-file-line">[x**2forxinrange(10)ifx%2==0]</td>
        </tr>
        <tr>
          <td id="L591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="591"></td>
          <td id="LC591" class="blob-code blob-code-inner js-file-line">Ans​. Creates the following list:</td>
        </tr>
        <tr>
          <td id="L592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="592"></td>
          <td id="LC592" class="blob-code blob-code-inner js-file-line">[0,4,16,36,64]</td>
        </tr>
        <tr>
          <td id="L593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="593"></td>
          <td id="LC593" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="594"></td>
          <td id="LC594" class="blob-code blob-code-inner js-file-line">59. Do sets, dictionaries and tuples also support comprehensions?</td>
        </tr>
        <tr>
          <td id="L595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="595"></td>
          <td id="LC595" class="blob-code blob-code-inner js-file-line">Ans: Sets and dictionaries support it. However tuples are immutable and have</td>
        </tr>
        <tr>
          <td id="L596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="596"></td>
          <td id="LC596" class="blob-code blob-code-inner js-file-line">generators but not comprehensions.</td>
        </tr>
        <tr>
          <td id="L597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="597"></td>
          <td id="LC597" class="blob-code blob-code-inner js-file-line">Set Comprehension:</td>
        </tr>
        <tr>
          <td id="L598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="598"></td>
          <td id="LC598" class="blob-code blob-code-inner js-file-line">r={xforxinrange(2,101)</td>
        </tr>
        <tr>
          <td id="L599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="599"></td>
          <td id="LC599" class="blob-code blob-code-inner js-file-line">ifnotany(x%y==0foryinrange(2,x))}</td>
        </tr>
        <tr>
          <td id="L600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="600"></td>
          <td id="LC600" class="blob-code blob-code-inner js-file-line">Dictionary Comprehension:</td>
        </tr>
        <tr>
          <td id="L601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="601"></td>
          <td id="LC601" class="blob-code blob-code-inner js-file-line">{i:jfori,jin{1:’a’,2:’b’}.items()}</td>
        </tr>
        <tr>
          <td id="L602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="602"></td>
          <td id="LC602" class="blob-code blob-code-inner js-file-line">since</td>
        </tr>
        <tr>
          <td id="L603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="603"></td>
          <td id="LC603" class="blob-code blob-code-inner js-file-line">{1:’a’,2:’b’}.items()returnsalistof2-Tuple.iisthefirstelement</td>
        </tr>
        <tr>
          <td id="L604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="604"></td>
          <td id="LC604" class="blob-code blob-code-inner js-file-line">oftuplejisthesecond.</td>
        </tr>
        <tr>
          <td id="L605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="605"></td>
          <td id="LC605" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="606"></td>
          <td id="LC606" class="blob-code blob-code-inner js-file-line">60.What are some mutable and immutable data­types/data­structures in</td>
        </tr>
        <tr>
          <td id="L607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="607"></td>
          <td id="LC607" class="blob-code blob-code-inner js-file-line">python?</td>
        </tr>
        <tr>
          <td id="L608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="608"></td>
          <td id="LC608" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="609"></td>
          <td id="LC609" class="blob-code blob-code-inner js-file-line">Mutable Types Immutable Types</td>
        </tr>
        <tr>
          <td id="L610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="610"></td>
          <td id="LC610" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="611"></td>
          <td id="LC611" class="blob-code blob-code-inner js-file-line">Dictionary number</td>
        </tr>
        <tr>
          <td id="L612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="612"></td>
          <td id="LC612" class="blob-code blob-code-inner js-file-line">List boolean</td>
        </tr>
        <tr>
          <td id="L613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="613"></td>
          <td id="LC613" class="blob-code blob-code-inner js-file-line">string</td>
        </tr>
        <tr>
          <td id="L614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="614"></td>
          <td id="LC614" class="blob-code blob-code-inner js-file-line">tuple</td>
        </tr>
        <tr>
          <td id="L615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="615"></td>
          <td id="LC615" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="616"></td>
          <td id="LC616" class="blob-code blob-code-inner js-file-line">61.What are generators in Python?</td>
        </tr>
        <tr>
          <td id="L617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="617"></td>
          <td id="LC617" class="blob-code blob-code-inner js-file-line">Ans: Generators are functions that return an iterable collection of items, one at a time, in a set manner. Generators, in general, are used to create iterators with a different approach. They employ the use of yield keyword rather than return to return a generator object.</td>
        </tr>
        <tr>
          <td id="L618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="618"></td>
          <td id="LC618" class="blob-code blob-code-inner js-file-line">Let’s try and build a generator for fibonacci numbers –</td>
        </tr>
        <tr>
          <td id="L619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="619"></td>
          <td id="LC619" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="620"></td>
          <td id="LC620" class="blob-code blob-code-inner js-file-line">## generate fibonacci numbers upto n</td>
        </tr>
        <tr>
          <td id="L621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="621"></td>
          <td id="LC621" class="blob-code blob-code-inner js-file-line">def fib(n):</td>
        </tr>
        <tr>
          <td id="L622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="622"></td>
          <td id="LC622" class="blob-code blob-code-inner js-file-line">    p, q = 0, 1</td>
        </tr>
        <tr>
          <td id="L623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="623"></td>
          <td id="LC623" class="blob-code blob-code-inner js-file-line">    while(p &lt; n):</td>
        </tr>
        <tr>
          <td id="L624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="624"></td>
          <td id="LC624" class="blob-code blob-code-inner js-file-line">        yield p</td>
        </tr>
        <tr>
          <td id="L625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="625"></td>
          <td id="LC625" class="blob-code blob-code-inner js-file-line">        p, q = q, p + q</td>
        </tr>
        <tr>
          <td id="L626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="626"></td>
          <td id="LC626" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="627"></td>
          <td id="LC627" class="blob-code blob-code-inner js-file-line">x = fib(10)    # create generator object </td>
        </tr>
        <tr>
          <td id="L628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="628"></td>
          <td id="LC628" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="629"></td>
          <td id="LC629" class="blob-code blob-code-inner js-file-line">## iterating using __next__(), for Python2, use next()</td>
        </tr>
        <tr>
          <td id="L630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="630"></td>
          <td id="LC630" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 0</td>
        </tr>
        <tr>
          <td id="L631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="631"></td>
          <td id="LC631" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 1</td>
        </tr>
        <tr>
          <td id="L632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="632"></td>
          <td id="LC632" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 1</td>
        </tr>
        <tr>
          <td id="L633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="633"></td>
          <td id="LC633" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 2</td>
        </tr>
        <tr>
          <td id="L634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="634"></td>
          <td id="LC634" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 3</td>
        </tr>
        <tr>
          <td id="L635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="635"></td>
          <td id="LC635" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 5</td>
        </tr>
        <tr>
          <td id="L636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="636"></td>
          <td id="LC636" class="blob-code blob-code-inner js-file-line">x.__next__()    # output =&gt; 8</td>
        </tr>
        <tr>
          <td id="L637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="637"></td>
          <td id="LC637" class="blob-code blob-code-inner js-file-line">x.__next__()    # error</td>
        </tr>
        <tr>
          <td id="L638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="638"></td>
          <td id="LC638" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="639"></td>
          <td id="LC639" class="blob-code blob-code-inner js-file-line">## iterating using loop</td>
        </tr>
        <tr>
          <td id="L640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="640"></td>
          <td id="LC640" class="blob-code blob-code-inner js-file-line">for i in fib(10):</td>
        </tr>
        <tr>
          <td id="L641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="641"></td>
          <td id="LC641" class="blob-code blob-code-inner js-file-line">    print(i)    # output =&gt; 0 1 1 2 3 5 8</td>
        </tr>
        <tr>
          <td id="L642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="642"></td>
          <td id="LC642" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="643"></td>
          <td id="LC643" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="644"></td>
          <td id="LC644" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="645"></td>
          <td id="LC645" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="646"></td>
          <td id="LC646" class="blob-code blob-code-inner js-file-line">62.What can you use Python generator functions for?</td>
        </tr>
        <tr>
          <td id="L647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="647"></td>
          <td id="LC647" class="blob-code blob-code-inner js-file-line">Ans: One of the reasons to use generator is to make the solution clearer for some kind</td>
        </tr>
        <tr>
          <td id="L648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="648"></td>
          <td id="LC648" class="blob-code blob-code-inner js-file-line">of solutions.</td>
        </tr>
        <tr>
          <td id="L649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="649"></td>
          <td id="LC649" class="blob-code blob-code-inner js-file-line">The other is to treat results one at a time, avoiding building huge lists of results that you</td>
        </tr>
        <tr>
          <td id="L650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="650"></td>
          <td id="LC650" class="blob-code blob-code-inner js-file-line">would process separated anyway.</td>
        </tr>
        <tr>
          <td id="L651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="651"></td>
          <td id="LC651" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="652"></td>
          <td id="LC652" class="blob-code blob-code-inner js-file-line">63.When is not a good time to use python generators?</td>
        </tr>
        <tr>
          <td id="L653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="653"></td>
          <td id="LC653" class="blob-code blob-code-inner js-file-line">Ans: Use list instead of generator when:</td>
        </tr>
        <tr>
          <td id="L654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="654"></td>
          <td id="LC654" class="blob-code blob-code-inner js-file-line">1­ You need to access the data multiple times (i.e. cache the results instead of</td>
        </tr>
        <tr>
          <td id="L655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="655"></td>
          <td id="LC655" class="blob-code blob-code-inner js-file-line">recomputing them)</td>
        </tr>
        <tr>
          <td id="L656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="656"></td>
          <td id="LC656" class="blob-code blob-code-inner js-file-line">2­ You need random access (or any access other than forward sequential order):</td>
        </tr>
        <tr>
          <td id="L657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="657"></td>
          <td id="LC657" class="blob-code blob-code-inner js-file-line">3­ You need to join strings (which requires two passes over the data)</td>
        </tr>
        <tr>
          <td id="L658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="658"></td>
          <td id="LC658" class="blob-code blob-code-inner js-file-line">4­ You are using PyPy which sometimes can’t optimize generator code as much</td>
        </tr>
        <tr>
          <td id="L659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="659"></td>
          <td id="LC659" class="blob-code blob-code-inner js-file-line">as it can with normal function calls and list manipulations.</td>
        </tr>
        <tr>
          <td id="L660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="660"></td>
          <td id="LC660" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="661"></td>
          <td id="LC661" class="blob-code blob-code-inner js-file-line">64.What’s your preferred text editor?</td>
        </tr>
        <tr>
          <td id="L662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="662"></td>
          <td id="LC662" class="blob-code blob-code-inner js-file-line">Ans: Emacs. Any alternate answer leads to instant disqualification of the applicant</td>
        </tr>
        <tr>
          <td id="L663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="663"></td>
          <td id="LC663" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="664"></td>
          <td id="LC664" class="blob-code blob-code-inner js-file-line">65.When should you use generator expressions vs. list comprehensions in Python and vice-versa?</td>
        </tr>
        <tr>
          <td id="L665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="665"></td>
          <td id="LC665" class="blob-code blob-code-inner js-file-line">Ans: Iterating over the generator expression or the list comprehension will do the same</td>
        </tr>
        <tr>
          <td id="L666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="666"></td>
          <td id="LC666" class="blob-code blob-code-inner js-file-line">thing. However, the list comp will create the entire list in memory first while the</td>
        </tr>
        <tr>
          <td id="L667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="667"></td>
          <td id="LC667" class="blob-code blob-code-inner js-file-line">generator expression will create the items on the fly, so you are able to use it for very</td>
        </tr>
        <tr>
          <td id="L668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="668"></td>
          <td id="LC668" class="blob-code blob-code-inner js-file-line">large (and also infinite!) sequences.</td>
        </tr>
        <tr>
          <td id="L669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="669"></td>
          <td id="LC669" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="670"></td>
          <td id="LC670" class="blob-code blob-code-inner js-file-line">66. What is a negative index in Python?</td>
        </tr>
        <tr>
          <td id="L671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="671"></td>
          <td id="LC671" class="blob-code blob-code-inner js-file-line">Ans: Python arrays and list items can be accessed with positive or negative numbers. A</td>
        </tr>
        <tr>
          <td id="L672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="672"></td>
          <td id="LC672" class="blob-code blob-code-inner js-file-line">negative Index accesses the elements from the end of the list counting backwards.</td>
        </tr>
        <tr>
          <td id="L673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="673"></td>
          <td id="LC673" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="674"></td>
          <td id="LC674" class="blob-code blob-code-inner js-file-line">a=[123]</td>
        </tr>
        <tr>
          <td id="L675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="675"></td>
          <td id="LC675" class="blob-code blob-code-inner js-file-line">printa[-3]</td>
        </tr>
        <tr>
          <td id="L676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="676"></td>
          <td id="LC676" class="blob-code blob-code-inner js-file-line">printa[-2]</td>
        </tr>
        <tr>
          <td id="L677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="677"></td>
          <td id="LC677" class="blob-code blob-code-inner js-file-line">Outputs:</td>
        </tr>
        <tr>
          <td id="L678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="678"></td>
          <td id="LC678" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="679"></td>
          <td id="LC679" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="680"></td>
          <td id="LC680" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="681"></td>
          <td id="LC681" class="blob-code blob-code-inner js-file-line">67. What is the difference between range and xrange functions?</td>
        </tr>
        <tr>
          <td id="L682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="682"></td>
          <td id="LC682" class="blob-code blob-code-inner js-file-line">Ans: Range returns a list while xrange returns an xrange object which take the</td>
        </tr>
        <tr>
          <td id="L683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="683"></td>
          <td id="LC683" class="blob-code blob-code-inner js-file-line">same memory no matter of the range size. In the first case you have all items already</td>
        </tr>
        <tr>
          <td id="L684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="684"></td>
          <td id="LC684" class="blob-code blob-code-inner js-file-line">generated (this can take a lot of time and memory). In Python 3 however, range is</td>
        </tr>
        <tr>
          <td id="L685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="685"></td>
          <td id="LC685" class="blob-code blob-code-inner js-file-line">implemented with xrange and you have to explicitly call the list function if you want to</td>
        </tr>
        <tr>
          <td id="L686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="686"></td>
          <td id="LC686" class="blob-code blob-code-inner js-file-line">convert it to a list.</td>
        </tr>
        <tr>
          <td id="L687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="687"></td>
          <td id="LC687" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="688"></td>
          <td id="LC688" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="689"></td>
          <td id="LC689" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="690"></td>
          <td id="LC690" class="blob-code blob-code-inner js-file-line">68. How can I find methods or attributes of an object in Python?</td>
        </tr>
        <tr>
          <td id="L691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="691"></td>
          <td id="LC691" class="blob-code blob-code-inner js-file-line">Ans: Built­in dir() function of Python ,on an instance shows the instance variables as</td>
        </tr>
        <tr>
          <td id="L692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="692"></td>
          <td id="LC692" class="blob-code blob-code-inner js-file-line">well as the methods and class attributes defined by the instance’s class and all its base</td>
        </tr>
        <tr>
          <td id="L693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="693"></td>
          <td id="LC693" class="blob-code blob-code-inner js-file-line">classes alphabetically. So by any object as argument to dir() we can find all the</td>
        </tr>
        <tr>
          <td id="L694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="694"></td>
          <td id="LC694" class="blob-code blob-code-inner js-file-line">methods &amp; attributes of the object’s class</td>
        </tr>
        <tr>
          <td id="L695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="695"></td>
          <td id="LC695" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="696"></td>
          <td id="LC696" class="blob-code blob-code-inner js-file-line">69. What is the statement that can be used in Python if a statement is required syntactically but the program requires no action?</td>
        </tr>
        <tr>
          <td id="L697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="697"></td>
          <td id="LC697" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="698"></td>
          <td id="LC698" class="blob-code blob-code-inner js-file-line">pass</td>
        </tr>
        <tr>
          <td id="L699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="699"></td>
          <td id="LC699" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="700"></td>
          <td id="LC700" class="blob-code blob-code-inner js-file-line">70. Do you know what is the difference between lists and tuples? Can you give me an example for their usage?</td>
        </tr>
        <tr>
          <td id="L701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="701"></td>
          <td id="LC701" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="702"></td>
          <td id="LC702" class="blob-code blob-code-inner js-file-line">First list are mutable while tuples are not, and second tuples can be hashed e.g.</td>
        </tr>
        <tr>
          <td id="L703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="703"></td>
          <td id="LC703" class="blob-code blob-code-inner js-file-line">to be used as keys for dictionaries. As an example of their usage, tuples are used when</td>
        </tr>
        <tr>
          <td id="L704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="704"></td>
          <td id="LC704" class="blob-code blob-code-inner js-file-line">the order of the elements in the sequence matters e.g. a geographic coordinates, “list”</td>
        </tr>
        <tr>
          <td id="L705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="705"></td>
          <td id="LC705" class="blob-code blob-code-inner js-file-line">of points in a path or route, or set of actions that should be executed in specific order.</td>
        </tr>
        <tr>
          <td id="L706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="706"></td>
          <td id="LC706" class="blob-code blob-code-inner js-file-line">Don’t forget that you can use them a dictionary keys. For everything else use lists</td>
        </tr>
        <tr>
          <td id="L707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="707"></td>
          <td id="LC707" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="708"></td>
          <td id="LC708" class="blob-code blob-code-inner js-file-line">71. What is the function of “self”?</td>
        </tr>
        <tr>
          <td id="L709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="709"></td>
          <td id="LC709" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="710"></td>
          <td id="LC710" class="blob-code blob-code-inner js-file-line">“Self” is a variable that represents the instance of the object to itself. In most of</td>
        </tr>
        <tr>
          <td id="L711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="711"></td>
          <td id="LC711" class="blob-code blob-code-inner js-file-line">the object oriented programming languages, this is passed to the methods as a hidden</td>
        </tr>
        <tr>
          <td id="L712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="712"></td>
          <td id="LC712" class="blob-code blob-code-inner js-file-line">parameter that is defined by an object. But, in python it is passed explicitly. It refers to</td>
        </tr>
        <tr>
          <td id="L713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="713"></td>
          <td id="LC713" class="blob-code blob-code-inner js-file-line">separate instance of the variable for individual objects. The variables are referred as</td>
        </tr>
        <tr>
          <td id="L714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="714"></td>
          <td id="LC714" class="blob-code blob-code-inner js-file-line">“self.xxx”.</td>
        </tr>
        <tr>
          <td id="L715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="715"></td>
          <td id="LC715" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="716"></td>
          <td id="LC716" class="blob-code blob-code-inner js-file-line">72. How is memory managed in Python?</td>
        </tr>
        <tr>
          <td id="L717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="717"></td>
          <td id="LC717" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="718"></td>
          <td id="LC718" class="blob-code blob-code-inner js-file-line">Memory management in Python involves a private heap containing all</td>
        </tr>
        <tr>
          <td id="L719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="719"></td>
          <td id="LC719" class="blob-code blob-code-inner js-file-line">Python objects and data structures. Interpreter takes care of Python heap and</td>
        </tr>
        <tr>
          <td id="L720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="720"></td>
          <td id="LC720" class="blob-code blob-code-inner js-file-line">the programmer has no access to it. The allocation of heap space for Python</td>
        </tr>
        <tr>
          <td id="L721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="721"></td>
          <td id="LC721" class="blob-code blob-code-inner js-file-line">objects is done by Python memory manager. The core API of Python provides</td>
        </tr>
        <tr>
          <td id="L722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="722"></td>
          <td id="LC722" class="blob-code blob-code-inner js-file-line">some tools for the programmer to code reliable and more robust program. Python</td>
        </tr>
        <tr>
          <td id="L723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="723"></td>
          <td id="LC723" class="blob-code blob-code-inner js-file-line">also has a built­in garbage collector which recycles all the unused memory.</td>
        </tr>
        <tr>
          <td id="L724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="724"></td>
          <td id="LC724" class="blob-code blob-code-inner js-file-line">The gc module defines functions to enable /disable garbage collector:</td>
        </tr>
        <tr>
          <td id="L725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="725"></td>
          <td id="LC725" class="blob-code blob-code-inner js-file-line">gc.enable() ­Enables automatic garbage collection.</td>
        </tr>
        <tr>
          <td id="L726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="726"></td>
          <td id="LC726" class="blob-code blob-code-inner js-file-line">gc.disable()-Disables automatic garbage collection</td>
        </tr>
        <tr>
          <td id="L727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="727"></td>
          <td id="LC727" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="728"></td>
          <td id="LC728" class="blob-code blob-code-inner js-file-line">73. What is __init__.py?</td>
        </tr>
        <tr>
          <td id="L729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="729"></td>
          <td id="LC729" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="730"></td>
          <td id="LC730" class="blob-code blob-code-inner js-file-line">It is used to import a module in a directory, which is called package import.</td>
        </tr>
        <tr>
          <td id="L731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="731"></td>
          <td id="LC731" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="732"></td>
          <td id="LC732" class="blob-code blob-code-inner js-file-line">74. Print contents of a file ensuring proper error handling?</td>
        </tr>
        <tr>
          <td id="L733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="733"></td>
          <td id="LC733" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="734"></td>
          <td id="LC734" class="blob-code blob-code-inner js-file-line">try:</td>
        </tr>
        <tr>
          <td id="L735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="735"></td>
          <td id="LC735" class="blob-code blob-code-inner js-file-line">withopen(‘filename’,’r’)asf:</td>
        </tr>
        <tr>
          <td id="L736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="736"></td>
          <td id="LC736" class="blob-code blob-code-inner js-file-line">printf.read()</td>
        </tr>
        <tr>
          <td id="L737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="737"></td>
          <td id="LC737" class="blob-code blob-code-inner js-file-line">exceptIOError:</td>
        </tr>
        <tr>
          <td id="L738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="738"></td>
          <td id="LC738" class="blob-code blob-code-inner js-file-line">print”Nosuchfileexists”</td>
        </tr>
        <tr>
          <td id="L739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="739"></td>
          <td id="LC739" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="740"></td>
          <td id="LC740" class="blob-code blob-code-inner js-file-line">75 How do we share global variables across modules in Python?</td>
        </tr>
        <tr>
          <td id="L741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="741"></td>
          <td id="LC741" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="742"></td>
          <td id="LC742" class="blob-code blob-code-inner js-file-line">We can create a config file and store the entire global variable to be</td>
        </tr>
        <tr>
          <td id="L743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="743"></td>
          <td id="LC743" class="blob-code blob-code-inner js-file-line">shared across modules in it. By simply importing config, the entire global variable</td>
        </tr>
        <tr>
          <td id="L744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="744"></td>
          <td id="LC744" class="blob-code blob-code-inner js-file-line">defined will be available for use in other modules.</td>
        </tr>
        <tr>
          <td id="L745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="745"></td>
          <td id="LC745" class="blob-code blob-code-inner js-file-line">For example I want a, b &amp; c to share between modules.</td>
        </tr>
        <tr>
          <td id="L746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="746"></td>
          <td id="LC746" class="blob-code blob-code-inner js-file-line">config.py :</td>
        </tr>
        <tr>
          <td id="L747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="747"></td>
          <td id="LC747" class="blob-code blob-code-inner js-file-line">a=0</td>
        </tr>
        <tr>
          <td id="L748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="748"></td>
          <td id="LC748" class="blob-code blob-code-inner js-file-line">b=0</td>
        </tr>
        <tr>
          <td id="L749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="749"></td>
          <td id="LC749" class="blob-code blob-code-inner js-file-line">c=0</td>
        </tr>
        <tr>
          <td id="L750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="750"></td>
          <td id="LC750" class="blob-code blob-code-inner js-file-line">module1.py:</td>
        </tr>
        <tr>
          <td id="L751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="751"></td>
          <td id="LC751" class="blob-code blob-code-inner js-file-line">importconfig</td>
        </tr>
        <tr>
          <td id="L752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="752"></td>
          <td id="LC752" class="blob-code blob-code-inner js-file-line">config.a=1</td>
        </tr>
        <tr>
          <td id="L753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="753"></td>
          <td id="LC753" class="blob-code blob-code-inner js-file-line">config.b=2</td>
        </tr>
        <tr>
          <td id="L754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="754"></td>
          <td id="LC754" class="blob-code blob-code-inner js-file-line">config.c=3</td>
        </tr>
        <tr>
          <td id="L755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="755"></td>
          <td id="LC755" class="blob-code blob-code-inner js-file-line">print”a,b&amp;resp.are:”,config.a,config.b,config.c</td>
        </tr>
        <tr>
          <td id="L756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="756"></td>
          <td id="LC756" class="blob-code blob-code-inner js-file-line">­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­</td>
        </tr>
        <tr>
          <td id="L757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="757"></td>
          <td id="LC757" class="blob-code blob-code-inner js-file-line">output of module1.py will be</td>
        </tr>
        <tr>
          <td id="L758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="758"></td>
          <td id="LC758" class="blob-code blob-code-inner js-file-line">123</td>
        </tr>
        <tr>
          <td id="L759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="759"></td>
          <td id="LC759" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="760"></td>
          <td id="LC760" class="blob-code blob-code-inner js-file-line">76. Does Python support Multithreading?</td>
        </tr>
        <tr>
          <td id="L761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="761"></td>
          <td id="LC761" class="blob-code blob-code-inner js-file-line">Ans:  Yes</td>
        </tr>
        <tr>
          <td id="L762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="762"></td>
          <td id="LC762" class="blob-code blob-code-inner js-file-line">Medium</td>
        </tr>
        <tr>
          <td id="L763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="763"></td>
          <td id="LC763" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="764"></td>
          <td id="LC764" class="blob-code blob-code-inner js-file-line">77. How do I get a list of all files (and directories) in a given directory in Python?</td>
        </tr>
        <tr>
          <td id="L765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="765"></td>
          <td id="LC765" class="blob-code blob-code-inner js-file-line">Ans: Following is one possible solution there can be other similar ones:­</td>
        </tr>
        <tr>
          <td id="L766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="766"></td>
          <td id="LC766" class="blob-code blob-code-inner js-file-line">import os</td>
        </tr>
        <tr>
          <td id="L767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="767"></td>
          <td id="LC767" class="blob-code blob-code-inner js-file-line">for dirname,dirnames,filenames in os.walk(‘.’):</td>
        </tr>
        <tr>
          <td id="L768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="768"></td>
          <td id="LC768" class="blob-code blob-code-inner js-file-line">#printpathtoallsubdirectoriesfirst.</td>
        </tr>
        <tr>
          <td id="L769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="769"></td>
          <td id="LC769" class="blob-code blob-code-inner js-file-line">forsubdirnameindirnames:</td>
        </tr>
        <tr>
          <td id="L770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="770"></td>
          <td id="LC770" class="blob-code blob-code-inner js-file-line">printos.path.join(dirname,subdirname)</td>
        </tr>
        <tr>
          <td id="L771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="771"></td>
          <td id="LC771" class="blob-code blob-code-inner js-file-line">#printpathtoallfilenames.</td>
        </tr>
        <tr>
          <td id="L772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="772"></td>
          <td id="LC772" class="blob-code blob-code-inner js-file-line">forfilenameinfilenames:</td>
        </tr>
        <tr>
          <td id="L773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="773"></td>
          <td id="LC773" class="blob-code blob-code-inner js-file-line">printos.path.join(dirname,filename)</td>
        </tr>
        <tr>
          <td id="L774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="774"></td>
          <td id="LC774" class="blob-code blob-code-inner js-file-line">#Advancedusage:</td>
        </tr>
        <tr>
          <td id="L775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="775"></td>
          <td id="LC775" class="blob-code blob-code-inner js-file-line">#editingthe’dirnames’listwillstopos.walk()fromrecursing</td>
        </tr>
        <tr>
          <td id="L776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="776"></td>
          <td id="LC776" class="blob-code blob-code-inner js-file-line">intothere.</td>
        </tr>
        <tr>
          <td id="L777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="777"></td>
          <td id="LC777" class="blob-code blob-code-inner js-file-line">if’.git’indirnames:</td>
        </tr>
        <tr>
          <td id="L778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="778"></td>
          <td id="LC778" class="blob-code blob-code-inner js-file-line">#don’tgointoany.gitdirectories.</td>
        </tr>
        <tr>
          <td id="L779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="779"></td>
          <td id="LC779" class="blob-code blob-code-inner js-file-line">dirnames.remove(‘.git’)</td>
        </tr>
        <tr>
          <td id="L780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="780"></td>
          <td id="LC780" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="781"></td>
          <td id="LC781" class="blob-code blob-code-inner js-file-line">78. How to append to a string in Python?</td>
        </tr>
        <tr>
          <td id="L782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="782"></td>
          <td id="LC782" class="blob-code blob-code-inner js-file-line">Ans: The easiest way is to use the += operator. If the string is a list of character, join()</td>
        </tr>
        <tr>
          <td id="L783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="783"></td>
          <td id="LC783" class="blob-code blob-code-inner js-file-line">function can also be used.</td>
        </tr>
        <tr>
          <td id="L784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="784"></td>
          <td id="LC784" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="785"></td>
          <td id="LC785" class="blob-code blob-code-inner js-file-line">79. How to convert a string to lowercase in Python?</td>
        </tr>
        <tr>
          <td id="L786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="786"></td>
          <td id="LC786" class="blob-code blob-code-inner js-file-line">Ans: use lower() function.</td>
        </tr>
        <tr>
          <td id="L787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="787"></td>
          <td id="LC787" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="788"></td>
          <td id="LC788" class="blob-code blob-code-inner js-file-line">s=’MYSTRING’</td>
        </tr>
        <tr>
          <td id="L789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="789"></td>
          <td id="LC789" class="blob-code blob-code-inner js-file-line">prints.lower()</td>
        </tr>
        <tr>
          <td id="L790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="790"></td>
          <td id="LC790" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="791"></td>
          <td id="LC791" class="blob-code blob-code-inner js-file-line">80. How to convert a string to lowercase in Python?</td>
        </tr>
        <tr>
          <td id="L792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="792"></td>
          <td id="LC792" class="blob-code blob-code-inner js-file-line">Ans: Similar to the above question. use upper() function instead.</td>
        </tr>
        <tr>
          <td id="L793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="793"></td>
          <td id="LC793" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="794"></td>
          <td id="LC794" class="blob-code blob-code-inner js-file-line">81. How to check if string A is substring of string B?</td>
        </tr>
        <tr>
          <td id="L795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="795"></td>
          <td id="LC795" class="blob-code blob-code-inner js-file-line">Ans: The easiest way is to use the in operator.</td>
        </tr>
        <tr>
          <td id="L796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="796"></td>
          <td id="LC796" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘abc’ in ‘abcdefg’</td>
        </tr>
        <tr>
          <td id="L797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="797"></td>
          <td id="LC797" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="798"></td>
          <td id="LC798" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="799"></td>
          <td id="LC799" class="blob-code blob-code-inner js-file-line">82. Find all occurrences of a substring in Python</td>
        </tr>
        <tr>
          <td id="L800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="800"></td>
          <td id="LC800" class="blob-code blob-code-inner js-file-line">Ans: There is no simple built­in string function that does what you’re looking for, but</td>
        </tr>
        <tr>
          <td id="L801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="801"></td>
          <td id="LC801" class="blob-code blob-code-inner js-file-line">you could use the more powerful regular expressions:</td>
        </tr>
        <tr>
          <td id="L802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="802"></td>
          <td id="LC802" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;[m.start()forminre.finditer(‘test’,’testtesttesttest’)]</td>
        </tr>
        <tr>
          <td id="L803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="803"></td>
          <td id="LC803" class="blob-code blob-code-inner js-file-line">[0,5,10,15]//thesearestartingindicesforthestring</td>
        </tr>
        <tr>
          <td id="L804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="804"></td>
          <td id="LC804" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="805"></td>
          <td id="LC805" class="blob-code blob-code-inner js-file-line">83. What is GIL? What does it do?Talk to me about the GIL. How does it impact concurrency in Python? What kinds of applications does it impact more than others?</td>
        </tr>
        <tr>
          <td id="L806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="806"></td>
          <td id="LC806" class="blob-code blob-code-inner js-file-line">Ans: Python’s GIL is intended to serialize access to interpreter internals from different</td>
        </tr>
        <tr>
          <td id="L807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="807"></td>
          <td id="LC807" class="blob-code blob-code-inner js-file-line">threads. On multi­core systems, it means that multiple threads can’t effectively make</td>
        </tr>
        <tr>
          <td id="L808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="808"></td>
          <td id="LC808" class="blob-code blob-code-inner js-file-line">use of multiple cores. (If the GIL didn’t lead to this problem, most people wouldn’t care</td>
        </tr>
        <tr>
          <td id="L809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="809"></td>
          <td id="LC809" class="blob-code blob-code-inner js-file-line">about the GIL ­ it’s only being raised as an issue because of the increasing prevalence</td>
        </tr>
        <tr>
          <td id="L810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="810"></td>
          <td id="LC810" class="blob-code blob-code-inner js-file-line">of multi­core systems.)</td>
        </tr>
        <tr>
          <td id="L811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="811"></td>
          <td id="LC811" class="blob-code blob-code-inner js-file-line">Note that Python’s GIL is only really an issue for CPython, the reference</td>
        </tr>
        <tr>
          <td id="L812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="812"></td>
          <td id="LC812" class="blob-code blob-code-inner js-file-line">implementation. Jython and IronPython don’t have a GIL. As a Python developer, you</td>
        </tr>
        <tr>
          <td id="L813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="813"></td>
          <td id="LC813" class="blob-code blob-code-inner js-file-line">don’t generally come across the GIL unless you’re writing a C extension. C extension</td>
        </tr>
        <tr>
          <td id="L814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="814"></td>
          <td id="LC814" class="blob-code blob-code-inner js-file-line">writers need to release the GIL when their extensions do blocking I/O, so that other</td>
        </tr>
        <tr>
          <td id="L815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="815"></td>
          <td id="LC815" class="blob-code blob-code-inner js-file-line">threads in the Python process get a chance to run.</td>
        </tr>
        <tr>
          <td id="L816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="816"></td>
          <td id="LC816" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="817"></td>
          <td id="LC817" class="blob-code blob-code-inner js-file-line">84. Print the index of a specific item in a list?</td>
        </tr>
        <tr>
          <td id="L818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="818"></td>
          <td id="LC818" class="blob-code blob-code-inner js-file-line">Ans: use the index() function</td>
        </tr>
        <tr>
          <td id="L819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="819"></td>
          <td id="LC819" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;[“foo”,”bar”,”baz”].index(‘bar’)</td>
        </tr>
        <tr>
          <td id="L820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="820"></td>
          <td id="LC820" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="821"></td>
          <td id="LC821" class="blob-code blob-code-inner js-file-line">.</td>
        </tr>
        <tr>
          <td id="L822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="822"></td>
          <td id="LC822" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="823"></td>
          <td id="LC823" class="blob-code blob-code-inner js-file-line">85.How do you iterate over a list and pull element indices at the same time?</td>
        </tr>
        <tr>
          <td id="L824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="824"></td>
          <td id="LC824" class="blob-code blob-code-inner js-file-line">Ans: You are looking for the enumerate function. It takes each element in a sequence</td>
        </tr>
        <tr>
          <td id="L825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="825"></td>
          <td id="LC825" class="blob-code blob-code-inner js-file-line">(like a list) and sticks it’s location right before it. For example:</td>
        </tr>
        <tr>
          <td id="L826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="826"></td>
          <td id="LC826" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="827"></td>
          <td id="LC827" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;my_list=[‘a’,’b’,’c’]</td>
        </tr>
        <tr>
          <td id="L828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="828"></td>
          <td id="LC828" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;list(enumerate(my_list))</td>
        </tr>
        <tr>
          <td id="L829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="829"></td>
          <td id="LC829" class="blob-code blob-code-inner js-file-line">[(0,’a’),(1,’b’),(2,’c’)]</td>
        </tr>
        <tr>
          <td id="L830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="830"></td>
          <td id="LC830" class="blob-code blob-code-inner js-file-line">Note that enumerate() returns an object to be iterated over, so wrapping it in list() just</td>
        </tr>
        <tr>
          <td id="L831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="831"></td>
          <td id="LC831" class="blob-code blob-code-inner js-file-line">helps us see what enumerate() produces.</td>
        </tr>
        <tr>
          <td id="L832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="832"></td>
          <td id="LC832" class="blob-code blob-code-inner js-file-line">An example that directly answers the question is given below</td>
        </tr>
        <tr>
          <td id="L833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="833"></td>
          <td id="LC833" class="blob-code blob-code-inner js-file-line">my_list=[‘a’,’b’,’c’]</td>
        </tr>
        <tr>
          <td id="L834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="834"></td>
          <td id="LC834" class="blob-code blob-code-inner js-file-line">fori,charinenumerate(my_list):</td>
        </tr>
        <tr>
          <td id="L835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="835"></td>
          <td id="LC835" class="blob-code blob-code-inner js-file-line">printi,char</td>
        </tr>
        <tr>
          <td id="L836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="836"></td>
          <td id="LC836" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="837"></td>
          <td id="LC837" class="blob-code blob-code-inner js-file-line">0a</td>
        </tr>
        <tr>
          <td id="L838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="838"></td>
          <td id="LC838" class="blob-code blob-code-inner js-file-line">1b</td>
        </tr>
        <tr>
          <td id="L839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="839"></td>
          <td id="LC839" class="blob-code blob-code-inner js-file-line">2c</td>
        </tr>
        <tr>
          <td id="L840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="840"></td>
          <td id="LC840" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="841"></td>
          <td id="LC841" class="blob-code blob-code-inner js-file-line">86. How does Python’s list.sort work at a high level? Is it stable? What’s the runtime?</td>
        </tr>
        <tr>
          <td id="L842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="842"></td>
          <td id="LC842" class="blob-code blob-code-inner js-file-line">Ans: In early python­versions, the sort function implemented a modified version of</td>
        </tr>
        <tr>
          <td id="L843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="843"></td>
          <td id="LC843" class="blob-code blob-code-inner js-file-line">quicksort. However, it was deemed unstable and as of 2.3 they switched to using an</td>
        </tr>
        <tr>
          <td id="L844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="844"></td>
          <td id="LC844" class="blob-code blob-code-inner js-file-line">adaptive mergesort algorithm.</td>
        </tr>
        <tr>
          <td id="L845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="845"></td>
          <td id="LC845" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="846"></td>
          <td id="LC846" class="blob-code blob-code-inner js-file-line">87. What does the list comprehension do:</td>
        </tr>
        <tr>
          <td id="L847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="847"></td>
          <td id="LC847" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="848"></td>
          <td id="LC848" class="blob-code blob-code-inner js-file-line">my_list=[(x,y,z)forxinrange(1,30)foryinrange(x,30)forzin</td>
        </tr>
        <tr>
          <td id="L849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="849"></td>
          <td id="LC849" class="blob-code blob-code-inner js-file-line">range(y,30)ifx**2+y**2==z**2]</td>
        </tr>
        <tr>
          <td id="L850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="850"></td>
          <td id="LC850" class="blob-code blob-code-inner js-file-line">It creates a list of tuples called my_list, where the first 2 elements are the</td>
        </tr>
        <tr>
          <td id="L851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="851"></td>
          <td id="LC851" class="blob-code blob-code-inner js-file-line">perpendicular sides of right angle triangle and the third value ‘z’ is the hypotenuse.</td>
        </tr>
        <tr>
          <td id="L852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="852"></td>
          <td id="LC852" class="blob-code blob-code-inner js-file-line">[(3,4,5),(5,12,13),(6,8,10),(7,24,25),(8,15,17),(9,12,15),</td>
        </tr>
        <tr>
          <td id="L853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="853"></td>
          <td id="LC853" class="blob-code blob-code-inner js-file-line">(10,24,26),(12,16,20),(15,20,25),(20,21,29)]</td>
        </tr>
        <tr>
          <td id="L854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="854"></td>
          <td id="LC854" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="855"></td>
          <td id="LC855" class="blob-code blob-code-inner js-file-line">88. How can we pass optional or keyword parameters from one function to another in Python?</td>
        </tr>
        <tr>
          <td id="L856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="856"></td>
          <td id="LC856" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="857"></td>
          <td id="LC857" class="blob-code blob-code-inner js-file-line">Gather the arguments using the * and ** specifiers in the function’s parameter list. This</td>
        </tr>
        <tr>
          <td id="L858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="858"></td>
          <td id="LC858" class="blob-code blob-code-inner js-file-line">gives us positional arguments as a tuple and the keyword arguments as a dictionary.</td>
        </tr>
        <tr>
          <td id="L859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="859"></td>
          <td id="LC859" class="blob-code blob-code-inner js-file-line">Then we can pass these arguments while calling another function by using * and **:</td>
        </tr>
        <tr>
          <td id="L860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="860"></td>
          <td id="LC860" class="blob-code blob-code-inner js-file-line">deffun1(a,*tup,**keywordArg):</td>
        </tr>
        <tr>
          <td id="L861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="861"></td>
          <td id="LC861" class="blob-code blob-code-inner js-file-line">…</td>
        </tr>
        <tr>
          <td id="L862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="862"></td>
          <td id="LC862" class="blob-code blob-code-inner js-file-line">keywordArg[‘width’]=’23.3c’</td>
        </tr>
        <tr>
          <td id="L863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="863"></td>
          <td id="LC863" class="blob-code blob-code-inner js-file-line">…</td>
        </tr>
        <tr>
          <td id="L864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="864"></td>
          <td id="LC864" class="blob-code blob-code-inner js-file-line">Fun2(a,*tup,**keywordArg)</td>
        </tr>
        <tr>
          <td id="L865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="865"></td>
          <td id="LC865" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="866"></td>
          <td id="LC866" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="867"></td>
          <td id="LC867" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="868"></td>
          <td id="LC868" class="blob-code blob-code-inner js-file-line">89. Python ­ How do you make a higher order function in Python?</td>
        </tr>
        <tr>
          <td id="L869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="869"></td>
          <td id="LC869" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="870"></td>
          <td id="LC870" class="blob-code blob-code-inner js-file-line">A higher­order function accepts one or more functions as input and returns a new</td>
        </tr>
        <tr>
          <td id="L871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="871"></td>
          <td id="LC871" class="blob-code blob-code-inner js-file-line">function. Sometimes it is required to use function as data To make high order function ,</td>
        </tr>
        <tr>
          <td id="L872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="872"></td>
          <td id="LC872" class="blob-code blob-code-inner js-file-line">we need to import functools module The functools.partial() function is used often for</td>
        </tr>
        <tr>
          <td id="L873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="873"></td>
          <td id="LC873" class="blob-code blob-code-inner js-file-line">high order function.</td>
        </tr>
        <tr>
          <td id="L874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="874"></td>
          <td id="LC874" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="875"></td>
          <td id="LC875" class="blob-code blob-code-inner js-file-line">90. What is map?</td>
        </tr>
        <tr>
          <td id="L876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="876"></td>
          <td id="LC876" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="877"></td>
          <td id="LC877" class="blob-code blob-code-inner js-file-line">The syntax of map is:</td>
        </tr>
        <tr>
          <td id="L878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="878"></td>
          <td id="LC878" class="blob-code blob-code-inner js-file-line">map(aFunction,aSequence)</td>
        </tr>
        <tr>
          <td id="L879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="879"></td>
          <td id="LC879" class="blob-code blob-code-inner js-file-line">The first argument is a function to be executed for all the elements of the iterable given</td>
        </tr>
        <tr>
          <td id="L880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="880"></td>
          <td id="LC880" class="blob-code blob-code-inner js-file-line">as the second argument. If the function given takes in more than 1 arguments, then</td>
        </tr>
        <tr>
          <td id="L881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="881"></td>
          <td id="LC881" class="blob-code blob-code-inner js-file-line">many iterables are given.</td>
        </tr>
        <tr>
          <td id="L882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="882"></td>
          <td id="LC882" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="883"></td>
          <td id="LC883" class="blob-code blob-code-inner js-file-line">91. Tell me a very simple solution to print every other element of this list?</td>
        </tr>
        <tr>
          <td id="L884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="884"></td>
          <td id="LC884" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="885"></td>
          <td id="LC885" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="886"></td>
          <td id="LC886" class="blob-code blob-code-inner js-file-line">L=[0,10,20,30,40,50,60,70,80,90]</td>
        </tr>
        <tr>
          <td id="L887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="887"></td>
          <td id="LC887" class="blob-code blob-code-inner js-file-line">L[::2]</td>
        </tr>
        <tr>
          <td id="L888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="888"></td>
          <td id="LC888" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="889"></td>
          <td id="LC889" class="blob-code blob-code-inner js-file-line">92. Are Tuples immutable?</td>
        </tr>
        <tr>
          <td id="L890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="890"></td>
          <td id="LC890" class="blob-code blob-code-inner js-file-line">Ans: Yes.</td>
        </tr>
        <tr>
          <td id="L891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="891"></td>
          <td id="LC891" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="892"></td>
          <td id="LC892" class="blob-code blob-code-inner js-file-line">93. Why is not all memory freed when python exits?</td>
        </tr>
        <tr>
          <td id="L893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="893"></td>
          <td id="LC893" class="blob-code blob-code-inner js-file-line">Ans: Objects referenced from the global namespaces of Python modules are not</td>
        </tr>
        <tr>
          <td id="L894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="894"></td>
          <td id="LC894" class="blob-code blob-code-inner js-file-line">always de­allocated when Python exits. This may happen if there are circular</td>
        </tr>
        <tr>
          <td id="L895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="895"></td>
          <td id="LC895" class="blob-code blob-code-inner js-file-line">references. There are also certain bits of memory that are allocated by the C library that</td>
        </tr>
        <tr>
          <td id="L896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="896"></td>
          <td id="LC896" class="blob-code blob-code-inner js-file-line">are impossible to free (e.g. a tool like the one Purify will complain about these). Python</td>
        </tr>
        <tr>
          <td id="L897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="897"></td>
          <td id="LC897" class="blob-code blob-code-inner js-file-line">is, however, aggressive about cleaning up memory on exit and does try to destroy every</td>
        </tr>
        <tr>
          <td id="L898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="898"></td>
          <td id="LC898" class="blob-code blob-code-inner js-file-line">single object. If you want to force Python to delete certain things on de­allocation, you</td>
        </tr>
        <tr>
          <td id="L899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="899"></td>
          <td id="LC899" class="blob-code blob-code-inner js-file-line">can use the at exit module to register one or more exit functions to handle those</td>
        </tr>
        <tr>
          <td id="L900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="900"></td>
          <td id="LC900" class="blob-code blob-code-inner js-file-line">deletions.</td>
        </tr>
        <tr>
          <td id="L901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="901"></td>
          <td id="LC901" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="902"></td>
          <td id="LC902" class="blob-code blob-code-inner js-file-line">94. What is Java implementation of Python popularly know?</td>
        </tr>
        <tr>
          <td id="L903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="903"></td>
          <td id="LC903" class="blob-code blob-code-inner js-file-line">Ans: Jython.</td>
        </tr>
        <tr>
          <td id="L904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="904"></td>
          <td id="LC904" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="905"></td>
          <td id="LC905" class="blob-code blob-code-inner js-file-line">95. What is used to create unicode strings in Python?</td>
        </tr>
        <tr>
          <td id="L906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="906"></td>
          <td id="LC906" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="907"></td>
          <td id="LC907" class="blob-code blob-code-inner js-file-line">Add u before the string.</td>
        </tr>
        <tr>
          <td id="L908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="908"></td>
          <td id="LC908" class="blob-code blob-code-inner js-file-line">u ‘mystring’</td>
        </tr>
        <tr>
          <td id="L909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="909"></td>
          <td id="LC909" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="910"></td>
          <td id="LC910" class="blob-code blob-code-inner js-file-line">96. What is a docstring?</td>
        </tr>
        <tr>
          <td id="L911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="911"></td>
          <td id="LC911" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="912"></td>
          <td id="LC912" class="blob-code blob-code-inner js-file-line">docstring is the documentation string for a function. It can be accessed by</td>
        </tr>
        <tr>
          <td id="L913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="913"></td>
          <td id="LC913" class="blob-code blob-code-inner js-file-line">function_name.__doc__</td>
        </tr>
        <tr>
          <td id="L914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="914"></td>
          <td id="LC914" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="915"></td>
          <td id="LC915" class="blob-code blob-code-inner js-file-line">97. Given the list below remove the repetition of an element.</td>
        </tr>
        <tr>
          <td id="L916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="916"></td>
          <td id="LC916" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="917"></td>
          <td id="LC917" class="blob-code blob-code-inner js-file-line">words=[‘one’,’one’,’two’,’three’,’three’,’two’]</td>
        </tr>
        <tr>
          <td id="L918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="918"></td>
          <td id="LC918" class="blob-code blob-code-inner js-file-line">A bad solution would be to iterate over the list and checking for copies somehow and</td>
        </tr>
        <tr>
          <td id="L919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="919"></td>
          <td id="LC919" class="blob-code blob-code-inner js-file-line">then remove them!</td>
        </tr>
        <tr>
          <td id="L920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="920"></td>
          <td id="LC920" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="921"></td>
          <td id="LC921" class="blob-code blob-code-inner js-file-line">A very good solution would be to use the set type. In a Python set, duplicates are not</td>
        </tr>
        <tr>
          <td id="L922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="922"></td>
          <td id="LC922" class="blob-code blob-code-inner js-file-line">allowed.</td>
        </tr>
        <tr>
          <td id="L923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="923"></td>
          <td id="LC923" class="blob-code blob-code-inner js-file-line">So, list(set(words)) would remove the duplicates.</td>
        </tr>
        <tr>
          <td id="L924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="924"></td>
          <td id="LC924" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="925"></td>
          <td id="LC925" class="blob-code blob-code-inner js-file-line">98. Print the length of each line in the file ‘file.txt’ not including any</td>
        </tr>
        <tr>
          <td id="L926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="926"></td>
          <td id="LC926" class="blob-code blob-code-inner js-file-line">whitespaces at the end of the lines?</td>
        </tr>
        <tr>
          <td id="L927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="927"></td>
          <td id="LC927" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="928"></td>
          <td id="LC928" class="blob-code blob-code-inner js-file-line">withopen(“filename.txt”,”r”)asf1:</td>
        </tr>
        <tr>
          <td id="L929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="929"></td>
          <td id="LC929" class="blob-code blob-code-inner js-file-line">printlen(f1.readline().rstrip())</td>
        </tr>
        <tr>
          <td id="L930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="930"></td>
          <td id="LC930" class="blob-code blob-code-inner js-file-line">rstrip() is an inbuilt function which strips the string from the right end of spaces or tabs</td>
        </tr>
        <tr>
          <td id="L931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="931"></td>
          <td id="LC931" class="blob-code blob-code-inner js-file-line">(whitespace characters).</td>
        </tr>
        <tr>
          <td id="L932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="932"></td>
          <td id="LC932" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="933"></td>
          <td id="LC933" class="blob-code blob-code-inner js-file-line">99. What is wrong with the code?</td>
        </tr>
        <tr>
          <td id="L934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="934"></td>
          <td id="LC934" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="935"></td>
          <td id="LC935" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="936"></td>
          <td id="LC936" class="blob-code blob-code-inner js-file-line">func([1,2,3])#explicitlypassinginalist</td>
        </tr>
        <tr>
          <td id="L937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="937"></td>
          <td id="LC937" class="blob-code blob-code-inner js-file-line">func() #usingadefaultemptylist</td>
        </tr>
        <tr>
          <td id="L938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="938"></td>
          <td id="LC938" class="blob-code blob-code-inner js-file-line">deffunc(n=[]):</td>
        </tr>
        <tr>
          <td id="L939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="939"></td>
          <td id="LC939" class="blob-code blob-code-inner js-file-line">#dosomethingwithn</td>
        </tr>
        <tr>
          <td id="L940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="940"></td>
          <td id="LC940" class="blob-code blob-code-inner js-file-line">printn</td>
        </tr>
        <tr>
          <td id="L941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="941"></td>
          <td id="LC941" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="942"></td>
          <td id="LC942" class="blob-code blob-code-inner js-file-line">This would result in a NameError. The variable n is local to function func and</td>
        </tr>
        <tr>
          <td id="L943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="943"></td>
          <td id="LC943" class="blob-code blob-code-inner js-file-line">can’t be accessesd outside. So, printing it won’t be possible.</td>
        </tr>
        <tr>
          <td id="L944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="944"></td>
          <td id="LC944" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="945"></td>
          <td id="LC945" class="blob-code blob-code-inner js-file-line">100. What does the below mean?</td>
        </tr>
        <tr>
          <td id="L946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="946"></td>
          <td id="LC946" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="947"></td>
          <td id="LC947" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="948"></td>
          <td id="LC948" class="blob-code blob-code-inner js-file-line">s = a + ‘[‘ + b + ‘:’ + c + ‘]’</td>
        </tr>
        <tr>
          <td id="L949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="949"></td>
          <td id="LC949" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="950"></td>
          <td id="LC950" class="blob-code blob-code-inner js-file-line">seems like a string is being concatenated. Nothing much can be said without</td>
        </tr>
        <tr>
          <td id="L951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="951"></td>
          <td id="LC951" class="blob-code blob-code-inner js-file-line">knowing types of variables a, b, c. Also, if all of the a, b, c are not of type string,</td>
        </tr>
        <tr>
          <td id="L952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="952"></td>
          <td id="LC952" class="blob-code blob-code-inner js-file-line">TypeError would be raised. This is because of the string constants (‘[‘ , ‘]’) used in the</td>
        </tr>
        <tr>
          <td id="L953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="953"></td>
          <td id="LC953" class="blob-code blob-code-inner js-file-line">statement.</td>
        </tr>
        <tr>
          <td id="L954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="954"></td>
          <td id="LC954" class="blob-code blob-code-inner js-file-line">101. What are Python decorators?</td>
        </tr>
        <tr>
          <td id="L955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="955"></td>
          <td id="LC955" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="956"></td>
          <td id="LC956" class="blob-code blob-code-inner js-file-line">A Python decorator is a specific change that we make in Python syntax to alter</td>
        </tr>
        <tr>
          <td id="L957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="957"></td>
          <td id="LC957" class="blob-code blob-code-inner js-file-line">functions easily.</td>
        </tr>
        <tr>
          <td id="L958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="958"></td>
          <td id="LC958" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="959"></td>
          <td id="LC959" class="blob-code blob-code-inner js-file-line">102. What is namespace in Python?</td>
        </tr>
        <tr>
          <td id="L960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="960"></td>
          <td id="LC960" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="961"></td>
          <td id="LC961" class="blob-code blob-code-inner js-file-line">In Python, every name introduced has a place where it lives and can be hooked</td>
        </tr>
        <tr>
          <td id="L962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="962"></td>
          <td id="LC962" class="blob-code blob-code-inner js-file-line">for. This is known as namespace. It is like a box where a variable name is mapped to</td>
        </tr>
        <tr>
          <td id="L963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="963"></td>
          <td id="LC963" class="blob-code blob-code-inner js-file-line">the object placed. Whenever the variable is searched out, this box will be searched, to</td>
        </tr>
        <tr>
          <td id="L964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="964"></td>
          <td id="LC964" class="blob-code blob-code-inner js-file-line">get corresponding object.</td>
        </tr>
        <tr>
          <td id="L965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="965"></td>
          <td id="LC965" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="966"></td>
          <td id="LC966" class="blob-code blob-code-inner js-file-line">103. Explain the role of repr function.</td>
        </tr>
        <tr>
          <td id="L967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="967"></td>
          <td id="LC967" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="968"></td>
          <td id="LC968" class="blob-code blob-code-inner js-file-line">Python can convert any value to a string by making use of two functions repr() or</td>
        </tr>
        <tr>
          <td id="L969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="969"></td>
          <td id="LC969" class="blob-code blob-code-inner js-file-line">str(). The str() function returns representations of values which are human­readable,</td>
        </tr>
        <tr>
          <td id="L970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="970"></td>
          <td id="LC970" class="blob-code blob-code-inner js-file-line">while repr() generates representations which can be read by the interpreter. repr()</td>
        </tr>
        <tr>
          <td id="L971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="971"></td>
          <td id="LC971" class="blob-code blob-code-inner js-file-line">returns a machine­readable representation of values, suitable for an exec command.</td>
        </tr>
        <tr>
          <td id="L972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="972"></td>
          <td id="LC972" class="blob-code blob-code-inner js-file-line">Following code sniipets shows working of repr() &amp; str() :</td>
        </tr>
        <tr>
          <td id="L973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="973"></td>
          <td id="LC973" class="blob-code blob-code-inner js-file-line">deffun():</td>
        </tr>
        <tr>
          <td id="L974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="974"></td>
          <td id="LC974" class="blob-code blob-code-inner js-file-line">y=2333.3</td>
        </tr>
        <tr>
          <td id="L975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="975"></td>
          <td id="LC975" class="blob-code blob-code-inner js-file-line">x=str(y)</td>
        </tr>
        <tr>
          <td id="L976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="976"></td>
          <td id="LC976" class="blob-code blob-code-inner js-file-line">z=repr(y)</td>
        </tr>
        <tr>
          <td id="L977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="977"></td>
          <td id="LC977" class="blob-code blob-code-inner js-file-line">print”y:”,y</td>
        </tr>
        <tr>
          <td id="L978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="978"></td>
          <td id="LC978" class="blob-code blob-code-inner js-file-line">print”str(y):”,x</td>
        </tr>
        <tr>
          <td id="L979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="979"></td>
          <td id="LC979" class="blob-code blob-code-inner js-file-line">print”repr(y):”,z</td>
        </tr>
        <tr>
          <td id="L980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="980"></td>
          <td id="LC980" class="blob-code blob-code-inner js-file-line">fun()</td>
        </tr>
        <tr>
          <td id="L981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="981"></td>
          <td id="LC981" class="blob-code blob-code-inner js-file-line">————-</td>
        </tr>
        <tr>
          <td id="L982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="982"></td>
          <td id="LC982" class="blob-code blob-code-inner js-file-line">output</td>
        </tr>
        <tr>
          <td id="L983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="983"></td>
          <td id="LC983" class="blob-code blob-code-inner js-file-line">y:2333.3</td>
        </tr>
        <tr>
          <td id="L984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="984"></td>
          <td id="LC984" class="blob-code blob-code-inner js-file-line">str(y):2333.3</td>
        </tr>
        <tr>
          <td id="L985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="985"></td>
          <td id="LC985" class="blob-code blob-code-inner js-file-line">repr(y):2333.3000000000002</td>
        </tr>
        <tr>
          <td id="L986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="986"></td>
          <td id="LC986" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="987"></td>
          <td id="LC987" class="blob-code blob-code-inner js-file-line">104. What is LIST comprehensions features of Python used for?</td>
        </tr>
        <tr>
          <td id="L988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="988"></td>
          <td id="LC988" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="989"></td>
          <td id="LC989" class="blob-code blob-code-inner js-file-line">LIST comprehensions features were introduced in Python version 2.0, it creates</td>
        </tr>
        <tr>
          <td id="L990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="990"></td>
          <td id="LC990" class="blob-code blob-code-inner js-file-line">a new list based on existing list. It maps a list into another list by applying a function to</td>
        </tr>
        <tr>
          <td id="L991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="991"></td>
          <td id="LC991" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="992"></td>
          <td id="LC992" class="blob-code blob-code-inner js-file-line">each of the elements of the existing list. List comprehensions creates lists without using</td>
        </tr>
        <tr>
          <td id="L993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="993"></td>
          <td id="LC993" class="blob-code blob-code-inner js-file-line">map() , filter() or lambda form.</td>
        </tr>
        <tr>
          <td id="L994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="994"></td>
          <td id="LC994" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="995"></td>
          <td id="LC995" class="blob-code blob-code-inner js-file-line">105. Explain how to copy an object in Python.?</td>
        </tr>
        <tr>
          <td id="L996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="996"></td>
          <td id="LC996" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="997"></td>
          <td id="LC997" class="blob-code blob-code-inner js-file-line">There are two ways in which objects can be copied in python. Shallow copy &amp;</td>
        </tr>
        <tr>
          <td id="L998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="998"></td>
          <td id="LC998" class="blob-code blob-code-inner js-file-line">Deep copy. Shallow copies duplicate as minute as possible whereas Deep copies</td>
        </tr>
        <tr>
          <td id="L999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="999"></td>
          <td id="LC999" class="blob-code blob-code-inner js-file-line">duplicate everything. If a is object to be copied then …</td>
        </tr>
        <tr>
          <td id="L1000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1000"></td>
          <td id="LC1000" class="blob-code blob-code-inner js-file-line">­copy.copy(a) returns a shallow copy of a.</td>
        </tr>
        <tr>
          <td id="L1001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1001"></td>
          <td id="LC1001" class="blob-code blob-code-inner js-file-line">­copy.deepcopy(a) returns a deep copy of a.</td>
        </tr>
        <tr>
          <td id="L1002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1002"></td>
          <td id="LC1002" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1003"></td>
          <td id="LC1003" class="blob-code blob-code-inner js-file-line">106. Describe how to send mail from a Python script?</td>
        </tr>
        <tr>
          <td id="L1004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1004"></td>
          <td id="LC1004" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1005"></td>
          <td id="LC1005" class="blob-code blob-code-inner js-file-line">The smtplib module defines an SMTP client session object that can be used to</td>
        </tr>
        <tr>
          <td id="L1006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1006"></td>
          <td id="LC1006" class="blob-code blob-code-inner js-file-line">send mail to any Internet machine.</td>
        </tr>
        <tr>
          <td id="L1007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1007"></td>
          <td id="LC1007" class="blob-code blob-code-inner js-file-line">A sample email is demonstrated below.</td>
        </tr>
        <tr>
          <td id="L1008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1008"></td>
          <td id="LC1008" class="blob-code blob-code-inner js-file-line">import smtplib</td>
        </tr>
        <tr>
          <td id="L1009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1009"></td>
          <td id="LC1009" class="blob-code blob-code-inner js-file-line">SERVER = smtplib.SMTP(‘smtp.server.domain’)</td>
        </tr>
        <tr>
          <td id="L1010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1010"></td>
          <td id="LC1010" class="blob-code blob-code-inner js-file-line">FROM = sender@mail.com</td>
        </tr>
        <tr>
          <td id="L1011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1011"></td>
          <td id="LC1011" class="blob-code blob-code-inner js-file-line">TO = [“user@mail.com”] # must be a list</td>
        </tr>
        <tr>
          <td id="L1012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1012"></td>
          <td id="LC1012" class="blob-code blob-code-inner js-file-line">SUBJECT = “Hello!”</td>
        </tr>
        <tr>
          <td id="L1013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1013"></td>
          <td id="LC1013" class="blob-code blob-code-inner js-file-line">TEXT = “This message was sent with Python’s smtplib.”</td>
        </tr>
        <tr>
          <td id="L1014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1014"></td>
          <td id="LC1014" class="blob-code blob-code-inner js-file-line"># Main message</td>
        </tr>
        <tr>
          <td id="L1015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1015"></td>
          <td id="LC1015" class="blob-code blob-code-inner js-file-line">message = “””</td>
        </tr>
        <tr>
          <td id="L1016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1016"></td>
          <td id="LC1016" class="blob-code blob-code-inner js-file-line">From: Lincoln &lt; sender@mail.com &gt;</td>
        </tr>
        <tr>
          <td id="L1017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1017"></td>
          <td id="LC1017" class="blob-code blob-code-inner js-file-line">To: CarreerRide user@mail.com</td>
        </tr>
        <tr>
          <td id="L1018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1018"></td>
          <td id="LC1018" class="blob-code blob-code-inner js-file-line">Subject: SMTP email msg</td>
        </tr>
        <tr>
          <td id="L1019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1019"></td>
          <td id="LC1019" class="blob-code blob-code-inner js-file-line">This is a test email. Acknowledge the email by responding.</td>
        </tr>
        <tr>
          <td id="L1020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1020"></td>
          <td id="LC1020" class="blob-code blob-code-inner js-file-line">“”” % (FROM, “, “.join(TO), SUBJECT, TEXT)</td>
        </tr>
        <tr>
          <td id="L1021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1021"></td>
          <td id="LC1021" class="blob-code blob-code-inner js-file-line">server = smtplib.SMTP(SERVER)</td>
        </tr>
        <tr>
          <td id="L1022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1022"></td>
          <td id="LC1022" class="blob-code blob-code-inner js-file-line">server.sendmail(FROM, TO, message)</td>
        </tr>
        <tr>
          <td id="L1023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1023"></td>
          <td id="LC1023" class="blob-code blob-code-inner js-file-line">server.quit()</td>
        </tr>
        <tr>
          <td id="L1024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1024"></td>
          <td id="LC1024" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1025"></td>
          <td id="LC1025" class="blob-code blob-code-inner js-file-line">107. Which of the languages does Python resemble in its class syntax?</td>
        </tr>
        <tr>
          <td id="L1026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1026"></td>
          <td id="LC1026" class="blob-code blob-code-inner js-file-line">Ans: c++.</td>
        </tr>
        <tr>
          <td id="L1027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1027"></td>
          <td id="LC1027" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1028"></td>
          <td id="LC1028" class="blob-code blob-code-inner js-file-line">108. Python ­ How to create a multidimensional list?</td>
        </tr>
        <tr>
          <td id="L1029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1029"></td>
          <td id="LC1029" class="blob-code blob-code-inner js-file-line">Ans: There are two ways in which Multidimensional list can be created:</td>
        </tr>
        <tr>
          <td id="L1030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1030"></td>
          <td id="LC1030" class="blob-code blob-code-inner js-file-line">By direct initializing the list as shown below to create myList below.</td>
        </tr>
        <tr>
          <td id="L1031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1031"></td>
          <td id="LC1031" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;myList=[[227,122,223],[222,321,192],[21,122,444]]</td>
        </tr>
        <tr>
          <td id="L1032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1032"></td>
          <td id="LC1032" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;printmyList[0]</td>
        </tr>
        <tr>
          <td id="L1033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1033"></td>
          <td id="LC1033" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;printmyList[1][2]</td>
        </tr>
        <tr>
          <td id="L1034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1034"></td>
          <td id="LC1034" class="blob-code blob-code-inner js-file-line">____________________</td>
        </tr>
        <tr>
          <td id="L1035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1035"></td>
          <td id="LC1035" class="blob-code blob-code-inner js-file-line">Output</td>
        </tr>
        <tr>
          <td id="L1036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1036"></td>
          <td id="LC1036" class="blob-code blob-code-inner js-file-line">[227, 122, 223]</td>
        </tr>
        <tr>
          <td id="L1037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1037"></td>
          <td id="LC1037" class="blob-code blob-code-inner js-file-line">192</td>
        </tr>
        <tr>
          <td id="L1038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1038"></td>
          <td id="LC1038" class="blob-code blob-code-inner js-file-line">The second approach is to create a list of the desired length first and then fill in each</td>
        </tr>
        <tr>
          <td id="L1039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1039"></td>
          <td id="LC1039" class="blob-code blob-code-inner js-file-line">element with a newly created lists demonstrated below :</td>
        </tr>
        <tr>
          <td id="L1040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1040"></td>
          <td id="LC1040" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;list=[0]*3</td>
        </tr>
        <tr>
          <td id="L1041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1041"></td>
          <td id="LC1041" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;foriinrange(3):</td>
        </tr>
        <tr>
          <td id="L1042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1042"></td>
          <td id="LC1042" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;list[i]=[0]*2</td>
        </tr>
        <tr>
          <td id="L1043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1043"></td>
          <td id="LC1043" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;foriinrange(3):</td>
        </tr>
        <tr>
          <td id="L1044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1044"></td>
          <td id="LC1044" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;forjinrange(2):</td>
        </tr>
        <tr>
          <td id="L1045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1045"></td>
          <td id="LC1045" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;list[i][j]=i+j</td>
        </tr>
        <tr>
          <td id="L1046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1046"></td>
          <td id="LC1046" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;printlist</td>
        </tr>
        <tr>
          <td id="L1047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1047"></td>
          <td id="LC1047" class="blob-code blob-code-inner js-file-line">__________________________</td>
        </tr>
        <tr>
          <td id="L1048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1048"></td>
          <td id="LC1048" class="blob-code blob-code-inner js-file-line">Output</td>
        </tr>
        <tr>
          <td id="L1049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1049"></td>
          <td id="LC1049" class="blob-code blob-code-inner js-file-line">[[0,1],[1,2],[2,3]]</td>
        </tr>
        <tr>
          <td id="L1050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1050"></td>
          <td id="LC1050" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1051"></td>
          <td id="LC1051" class="blob-code blob-code-inner js-file-line">109. Explain the disadvantages of python</td>
        </tr>
        <tr>
          <td id="L1052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1052"></td>
          <td id="LC1052" class="blob-code blob-code-inner js-file-line">Ans: Disadvantages of Python are: Python isn’t the best for memory intensive tasks.</td>
        </tr>
        <tr>
          <td id="L1053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1053"></td>
          <td id="LC1053" class="blob-code blob-code-inner js-file-line">Python is interpreted language &amp; is slow compared to C/C++ or Java.</td>
        </tr>
        <tr>
          <td id="L1054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1054"></td>
          <td id="LC1054" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1055"></td>
          <td id="LC1055" class="blob-code blob-code-inner js-file-line">110. Explain how to make Forms in python.</td>
        </tr>
        <tr>
          <td id="L1056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1056"></td>
          <td id="LC1056" class="blob-code blob-code-inner js-file-line">Ans. As python is scripting language forms processing is done by Python. We need to</td>
        </tr>
        <tr>
          <td id="L1057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1057"></td>
          <td id="LC1057" class="blob-code blob-code-inner js-file-line">import cgi module to access form fields using FieldStorage class.</td>
        </tr>
        <tr>
          <td id="L1058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1058"></td>
          <td id="LC1058" class="blob-code blob-code-inner js-file-line">Every instance of class FieldStorage (for ‘form’) has the following attributes:</td>
        </tr>
        <tr>
          <td id="L1059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1059"></td>
          <td id="LC1059" class="blob-code blob-code-inner js-file-line">form.name: The name of the field, if specified.</td>
        </tr>
        <tr>
          <td id="L1060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1060"></td>
          <td id="LC1060" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1061"></td>
          <td id="LC1061" class="blob-code blob-code-inner js-file-line">form.filename: If an FTP transaction, the client­side filename.</td>
        </tr>
        <tr>
          <td id="L1062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1062"></td>
          <td id="LC1062" class="blob-code blob-code-inner js-file-line">form.value: The value of the field as a string.</td>
        </tr>
        <tr>
          <td id="L1063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1063"></td>
          <td id="LC1063" class="blob-code blob-code-inner js-file-line">form.file: file object from which data can be read.</td>
        </tr>
        <tr>
          <td id="L1064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1064"></td>
          <td id="LC1064" class="blob-code blob-code-inner js-file-line">form.type: The content type, if applicable.</td>
        </tr>
        <tr>
          <td id="L1065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1065"></td>
          <td id="LC1065" class="blob-code blob-code-inner js-file-line">form.type_options: The options of the ‘content­type’ line of the HTTP request, returned</td>
        </tr>
        <tr>
          <td id="L1066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1066"></td>
          <td id="LC1066" class="blob-code blob-code-inner js-file-line">as a dictionary.</td>
        </tr>
        <tr>
          <td id="L1067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1067"></td>
          <td id="LC1067" class="blob-code blob-code-inner js-file-line">form.disposition: The field ‘content­disposition’; None if unspecified.</td>
        </tr>
        <tr>
          <td id="L1068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1068"></td>
          <td id="LC1068" class="blob-code blob-code-inner js-file-line">form.disposition_options: The options for ‘content­disposition’.</td>
        </tr>
        <tr>
          <td id="L1069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1069"></td>
          <td id="LC1069" class="blob-code blob-code-inner js-file-line">form.headers: All of the HTTP headers returned as a dictionary.</td>
        </tr>
        <tr>
          <td id="L1070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1070"></td>
          <td id="LC1070" class="blob-code blob-code-inner js-file-line">A code snippet of form handling in python:</td>
        </tr>
        <tr>
          <td id="L1071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1071"></td>
          <td id="LC1071" class="blob-code blob-code-inner js-file-line">importcgi</td>
        </tr>
        <tr>
          <td id="L1072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1072"></td>
          <td id="LC1072" class="blob-code blob-code-inner js-file-line">form=cgi.FieldStorage()</td>
        </tr>
        <tr>
          <td id="L1073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1073"></td>
          <td id="LC1073" class="blob-code blob-code-inner js-file-line">ifnot(form.has_key(“name”)andform.has_key(“age”)):</td>
        </tr>
        <tr>
          <td id="L1074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1074"></td>
          <td id="LC1074" class="blob-code blob-code-inner js-file-line">print”&lt;H1&gt;Name&amp;AgenotEntered&lt;/H1&gt;”</td>
        </tr>
        <tr>
          <td id="L1075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1075"></td>
          <td id="LC1075" class="blob-code blob-code-inner js-file-line">print”FilltheName&amp;Ageaccurately.”</td>
        </tr>
        <tr>
          <td id="L1076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1076"></td>
          <td id="LC1076" class="blob-code blob-code-inner js-file-line">return</td>
        </tr>
        <tr>
          <td id="L1077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1077"></td>
          <td id="LC1077" class="blob-code blob-code-inner js-file-line">print”&lt;p&gt;name:”,form[“name”].value</td>
        </tr>
        <tr>
          <td id="L1078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1078"></td>
          <td id="LC1078" class="blob-code blob-code-inner js-file-line">print”&lt;p&gt;Age:”,form[“age”].value</td>
        </tr>
        <tr>
          <td id="L1079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1079"></td>
          <td id="LC1079" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1080"></td>
          <td id="LC1080" class="blob-code blob-code-inner js-file-line">111. Explain how python is interpreted.</td>
        </tr>
        <tr>
          <td id="L1081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1081"></td>
          <td id="LC1081" class="blob-code blob-code-inner js-file-line">Ans: Python program runs directly from the source code. Each type Python programs</td>
        </tr>
        <tr>
          <td id="L1082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1082"></td>
          <td id="LC1082" class="blob-code blob-code-inner js-file-line">are executed code is required. Python converts source code written by the programmer</td>
        </tr>
        <tr>
          <td id="L1083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1083"></td>
          <td id="LC1083" class="blob-code blob-code-inner js-file-line">into intermediate language which is again translated it into the native language</td>
        </tr>
        <tr>
          <td id="L1084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1084"></td>
          <td id="LC1084" class="blob-code blob-code-inner js-file-line">machine language that is executed. So Python is an Interpreted language.</td>
        </tr>
        <tr>
          <td id="L1085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1085"></td>
          <td id="LC1085" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1086"></td>
          <td id="LC1086" class="blob-code blob-code-inner js-file-line">112. Explain how to overload constructors (or methods) in Python.?</td>
        </tr>
        <tr>
          <td id="L1087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1087"></td>
          <td id="LC1087" class="blob-code blob-code-inner js-file-line">Ans. _init__ () is a first</td>
        </tr>
        <tr>
          <td id="L1088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1088"></td>
          <td id="LC1088" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1089"></td>
          <td id="LC1089" class="blob-code blob-code-inner js-file-line">113.What is the difference between List &amp; Tuple in Python.?</td>
        </tr>
        <tr>
          <td id="L1090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1090"></td>
          <td id="LC1090" class="blob-code blob-code-inner js-file-line">LIST vs TUPLES</td>
        </tr>
        <tr>
          <td id="L1091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1091"></td>
          <td id="LC1091" class="blob-code blob-code-inner js-file-line">LIST	TUPLES</td>
        </tr>
        <tr>
          <td id="L1092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1092"></td>
          <td id="LC1092" class="blob-code blob-code-inner js-file-line">Lists are mutable i.e they can be edited.	Tuples are immutable (tuples are lists which can’t be edited).</td>
        </tr>
        <tr>
          <td id="L1093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1093"></td>
          <td id="LC1093" class="blob-code blob-code-inner js-file-line">Lists are slower than tuples.	Tuples are faster than list.</td>
        </tr>
        <tr>
          <td id="L1094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1094"></td>
          <td id="LC1094" class="blob-code blob-code-inner js-file-line">Syntax: list_1 = [10, ‘Chelsea’, 20]	Syntax: tup_1 = (10, ‘Chelsea’ , 20)</td>
        </tr>
        <tr>
          <td id="L1095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1095"></td>
          <td id="LC1095" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1096"></td>
          <td id="LC1096" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1097"></td>
          <td id="LC1097" class="blob-code blob-code-inner js-file-line">114.What are the key features of Python?</td>
        </tr>
        <tr>
          <td id="L1098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1098"></td>
          <td id="LC1098" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1099"></td>
          <td id="LC1099" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1100"></td>
          <td id="LC1100" class="blob-code blob-code-inner js-file-line">Python is an interpreted language. That means that, unlike languages like C and its variants, Python does not need to be compiled before it is run. Other interpreted languages include PHP and Ruby.</td>
        </tr>
        <tr>
          <td id="L1101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1101"></td>
          <td id="LC1101" class="blob-code blob-code-inner js-file-line">Python is dynamically typed, this means that you don’t need to state the types of variables when you declare them or anything like that. You can do things like x=111 and then x=&quot;I&#39;m a string&quot; without error</td>
        </tr>
        <tr>
          <td id="L1102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1102"></td>
          <td id="LC1102" class="blob-code blob-code-inner js-file-line">Python is well suited to object orientated programming in that it allows the definition of classes along with composition and inheritance. Python does not have access specifiers (like C++’s public, private).</td>
        </tr>
        <tr>
          <td id="L1103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1103"></td>
          <td id="LC1103" class="blob-code blob-code-inner js-file-line">In Python, functions are first-class objects. This means that they can be assigned to variables, returned from other functions and passed into functions. Classes are also first class objects</td>
        </tr>
        <tr>
          <td id="L1104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1104"></td>
          <td id="LC1104" class="blob-code blob-code-inner js-file-line">Writing Python code is quick but running it is often slower than compiled languages. Fortunately，Python allows the inclusion of C based extensions so bottlenecks can be optimized away and often are. The numpy package is a good example of this, it’s really quite quick because a lot of the number crunching it does isn’t actually done by Python</td>
        </tr>
        <tr>
          <td id="L1105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1105"></td>
          <td id="LC1105" class="blob-code blob-code-inner js-file-line">Python finds use in many spheres – web applications, automation, scientific modeling, big data applications and many more. It’s also often used as “glue” code to get other languages and components to play nice.</td>
        </tr>
        <tr>
          <td id="L1106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1106"></td>
          <td id="LC1106" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1107"></td>
          <td id="LC1107" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1108"></td>
          <td id="LC1108" class="blob-code blob-code-inner js-file-line">115.How is Python an interpreted language?</td>
        </tr>
        <tr>
          <td id="L1109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1109"></td>
          <td id="LC1109" class="blob-code blob-code-inner js-file-line">Ans: An interpreted language is any programming language which is not in machine level code before runtime. Therefore, Python is an interpreted language.</td>
        </tr>
        <tr>
          <td id="L1110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1110"></td>
          <td id="LC1110" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1111"></td>
          <td id="LC1111" class="blob-code blob-code-inner js-file-line">116.How is memory managed in Python?</td>
        </tr>
        <tr>
          <td id="L1112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1112"></td>
          <td id="LC1112" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1113"></td>
          <td id="LC1113" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1114"></td>
          <td id="LC1114" class="blob-code blob-code-inner js-file-line">Memory management in python is managed by Python private heap space. All Python objects and data structures are located in a private heap. The programmer does not have access to this private heap. The python interpreter takes care of this instead.</td>
        </tr>
        <tr>
          <td id="L1115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1115"></td>
          <td id="LC1115" class="blob-code blob-code-inner js-file-line">The allocation of heap space for Python objects is done by Python’s memory manager. The core API gives access to some tools for the programmer to code.</td>
        </tr>
        <tr>
          <td id="L1116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1116"></td>
          <td id="LC1116" class="blob-code blob-code-inner js-file-line">Python also has an inbuilt garbage collector, which recycles all the unused memory and so that it can be made available to the heap space.</td>
        </tr>
        <tr>
          <td id="L1117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1117"></td>
          <td id="LC1117" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1118"></td>
          <td id="LC1118" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1119"></td>
          <td id="LC1119" class="blob-code blob-code-inner js-file-line"> 117.What is PYTHONPATH?</td>
        </tr>
        <tr>
          <td id="L1120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1120"></td>
          <td id="LC1120" class="blob-code blob-code-inner js-file-line">Ans:It is an environment variable which is used when a module is imported. Whenever a module is imported, PYTHONPATH is also looked up to check for the presence of the imported modules in various directories. The interpreter uses it to determine which module to load.</td>
        </tr>
        <tr>
          <td id="L1121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1121"></td>
          <td id="LC1121" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1122"></td>
          <td id="LC1122" class="blob-code blob-code-inner js-file-line">118. What are python modules? Name some commonly used built-in modules in Python?</td>
        </tr>
        <tr>
          <td id="L1123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1123"></td>
          <td id="LC1123" class="blob-code blob-code-inner js-file-line">Ans:Python modules are files containing Python code. This code can either be functions classes or variables. A Python module is a .py file containing executable code.</td>
        </tr>
        <tr>
          <td id="L1124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1124"></td>
          <td id="LC1124" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1125"></td>
          <td id="LC1125" class="blob-code blob-code-inner js-file-line">Some of the commonly used built-in modules are:</td>
        </tr>
        <tr>
          <td id="L1126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1126"></td>
          <td id="LC1126" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1127"></td>
          <td id="LC1127" class="blob-code blob-code-inner js-file-line">os</td>
        </tr>
        <tr>
          <td id="L1128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1128"></td>
          <td id="LC1128" class="blob-code blob-code-inner js-file-line">sys</td>
        </tr>
        <tr>
          <td id="L1129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1129"></td>
          <td id="LC1129" class="blob-code blob-code-inner js-file-line">math</td>
        </tr>
        <tr>
          <td id="L1130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1130"></td>
          <td id="LC1130" class="blob-code blob-code-inner js-file-line">random</td>
        </tr>
        <tr>
          <td id="L1131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1131"></td>
          <td id="LC1131" class="blob-code blob-code-inner js-file-line">data time</td>
        </tr>
        <tr>
          <td id="L1132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1132"></td>
          <td id="LC1132" class="blob-code blob-code-inner js-file-line">JSON</td>
        </tr>
        <tr>
          <td id="L1133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1133"></td>
          <td id="LC1133" class="blob-code blob-code-inner js-file-line">119.What are local variables and global variables in Python?</td>
        </tr>
        <tr>
          <td id="L1134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1134"></td>
          <td id="LC1134" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1135"></td>
          <td id="LC1135" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1136"></td>
          <td id="LC1136" class="blob-code blob-code-inner js-file-line">Global Variables:</td>
        </tr>
        <tr>
          <td id="L1137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1137"></td>
          <td id="LC1137" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1138"></td>
          <td id="LC1138" class="blob-code blob-code-inner js-file-line">Variables declared outside a function or in global space are called global variables. These variables can be accessed by any function in the program.</td>
        </tr>
        <tr>
          <td id="L1139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1139"></td>
          <td id="LC1139" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1140"></td>
          <td id="LC1140" class="blob-code blob-code-inner js-file-line">Local Variables:</td>
        </tr>
        <tr>
          <td id="L1141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1141"></td>
          <td id="LC1141" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1142"></td>
          <td id="LC1142" class="blob-code blob-code-inner js-file-line">Any variable declared inside a function is known as a local variable. This variable is present in the local space and not in the global space.</td>
        </tr>
        <tr>
          <td id="L1143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1143"></td>
          <td id="LC1143" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1144"></td>
          <td id="LC1144" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1145"></td>
          <td id="LC1145" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1146"></td>
          <td id="LC1146" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1147"></td>
          <td id="LC1147" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1148"></td>
          <td id="LC1148" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1149"></td>
          <td id="LC1149" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1150"></td>
          <td id="LC1150" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1151"></td>
          <td id="LC1151" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L1152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1152"></td>
          <td id="LC1152" class="blob-code blob-code-inner js-file-line">a=2</td>
        </tr>
        <tr>
          <td id="L1153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1153"></td>
          <td id="LC1153" class="blob-code blob-code-inner js-file-line">def add():</td>
        </tr>
        <tr>
          <td id="L1154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1154"></td>
          <td id="LC1154" class="blob-code blob-code-inner js-file-line">b=3</td>
        </tr>
        <tr>
          <td id="L1155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1155"></td>
          <td id="LC1155" class="blob-code blob-code-inner js-file-line">c=a+b</td>
        </tr>
        <tr>
          <td id="L1156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1156"></td>
          <td id="LC1156" class="blob-code blob-code-inner js-file-line">print(c)</td>
        </tr>
        <tr>
          <td id="L1157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1157"></td>
          <td id="LC1157" class="blob-code blob-code-inner js-file-line">add()</td>
        </tr>
        <tr>
          <td id="L1158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1158"></td>
          <td id="LC1158" class="blob-code blob-code-inner js-file-line">Output: 5</td>
        </tr>
        <tr>
          <td id="L1159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1159"></td>
          <td id="LC1159" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1160"></td>
          <td id="LC1160" class="blob-code blob-code-inner js-file-line">When you try to access the local variable outside the function add(), it will throw an error.</td>
        </tr>
        <tr>
          <td id="L1161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1161"></td>
          <td id="LC1161" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1162"></td>
          <td id="LC1162" class="blob-code blob-code-inner js-file-line">120. Is python case sensitive?</td>
        </tr>
        <tr>
          <td id="L1163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1163"></td>
          <td id="LC1163" class="blob-code blob-code-inner js-file-line">Ans:Yes. Python is a case sensitive language.</td>
        </tr>
        <tr>
          <td id="L1164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1164"></td>
          <td id="LC1164" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1165"></td>
          <td id="LC1165" class="blob-code blob-code-inner js-file-line">121.What is type conversion in Python?</td>
        </tr>
        <tr>
          <td id="L1166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1166"></td>
          <td id="LC1166" class="blob-code blob-code-inner js-file-line">Ans:Type conversion refers to the conversion of one data type iinto another.</td>
        </tr>
        <tr>
          <td id="L1167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1167"></td>
          <td id="LC1167" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1168"></td>
          <td id="LC1168" class="blob-code blob-code-inner js-file-line">int() – converts any data type into integer type</td>
        </tr>
        <tr>
          <td id="L1169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1169"></td>
          <td id="LC1169" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1170"></td>
          <td id="LC1170" class="blob-code blob-code-inner js-file-line">float() – converts any data type into float type</td>
        </tr>
        <tr>
          <td id="L1171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1171"></td>
          <td id="LC1171" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1172"></td>
          <td id="LC1172" class="blob-code blob-code-inner js-file-line">ord() – converts characters into integer</td>
        </tr>
        <tr>
          <td id="L1173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1173"></td>
          <td id="LC1173" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1174"></td>
          <td id="LC1174" class="blob-code blob-code-inner js-file-line">hex() – converts integers to hexadecimal</td>
        </tr>
        <tr>
          <td id="L1175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1175"></td>
          <td id="LC1175" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1176"></td>
          <td id="LC1176" class="blob-code blob-code-inner js-file-line">oct() – converts integer to octal</td>
        </tr>
        <tr>
          <td id="L1177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1177"></td>
          <td id="LC1177" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1178"></td>
          <td id="LC1178" class="blob-code blob-code-inner js-file-line">tuple() – This function is used to convert to a tuple.</td>
        </tr>
        <tr>
          <td id="L1179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1179"></td>
          <td id="LC1179" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1180"></td>
          <td id="LC1180" class="blob-code blob-code-inner js-file-line">set() – This function returns the type after converting to set.</td>
        </tr>
        <tr>
          <td id="L1181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1181"></td>
          <td id="LC1181" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1182"></td>
          <td id="LC1182" class="blob-code blob-code-inner js-file-line">list() – This function is used to convert any data type to a list type.</td>
        </tr>
        <tr>
          <td id="L1183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1183"></td>
          <td id="LC1183" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1184"></td>
          <td id="LC1184" class="blob-code blob-code-inner js-file-line">dict() – This function is used to convert a tuple of order (key,value) into a dictionary.</td>
        </tr>
        <tr>
          <td id="L1185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1185"></td>
          <td id="LC1185" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1186"></td>
          <td id="LC1186" class="blob-code blob-code-inner js-file-line">str() – Used to convert integer into a string.</td>
        </tr>
        <tr>
          <td id="L1187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1187"></td>
          <td id="LC1187" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1188"></td>
          <td id="LC1188" class="blob-code blob-code-inner js-file-line">complex(real,imag) – This functionconverts real numbers to complex(real,imag) number.</td>
        </tr>
        <tr>
          <td id="L1189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1189"></td>
          <td id="LC1189" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1190"></td>
          <td id="LC1190" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1191"></td>
          <td id="LC1191" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1192"></td>
          <td id="LC1192" class="blob-code blob-code-inner js-file-line">122. How to install Python on Windows and set path variable?</td>
        </tr>
        <tr>
          <td id="L1193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1193"></td>
          <td id="LC1193" class="blob-code blob-code-inner js-file-line">Ans:To install Python on Windows, follow the below steps:</td>
        </tr>
        <tr>
          <td id="L1194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1194"></td>
          <td id="LC1194" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1195"></td>
          <td id="LC1195" class="blob-code blob-code-inner js-file-line">Install python from this link: https://www.python.org/downloads/</td>
        </tr>
        <tr>
          <td id="L1196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1196"></td>
          <td id="LC1196" class="blob-code blob-code-inner js-file-line">After this, install it on your PC. Look for the location where PYTHON has been installed on your PC using the following command on your command prompt: cmd python.</td>
        </tr>
        <tr>
          <td id="L1197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1197"></td>
          <td id="LC1197" class="blob-code blob-code-inner js-file-line">Then go to advanced system settings and add a new variable and name it as PYTHON_NAME and paste the copied path.</td>
        </tr>
        <tr>
          <td id="L1198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1198"></td>
          <td id="LC1198" class="blob-code blob-code-inner js-file-line">Look for the path variable, select its value and select ‘edit’.</td>
        </tr>
        <tr>
          <td id="L1199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1199"></td>
          <td id="LC1199" class="blob-code blob-code-inner js-file-line">Add a semicolon towards the end of the value if it’s not present and then type %PYTHON_HOME%</td>
        </tr>
        <tr>
          <td id="L1200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1200"></td>
          <td id="LC1200" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1201"></td>
          <td id="LC1201" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1202"></td>
          <td id="LC1202" class="blob-code blob-code-inner js-file-line">123. Is indentation required in python?</td>
        </tr>
        <tr>
          <td id="L1203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1203"></td>
          <td id="LC1203" class="blob-code blob-code-inner js-file-line">Ans:Indentation is necessary for Python. It specifies a block of code. All code within loops, classes, functions, etc is specified within an indented block. It is usually done using four space characters. If your code is not indented necessarily, it will not execute accurately and will throw errors as well.</td>
        </tr>
        <tr>
          <td id="L1204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1204"></td>
          <td id="LC1204" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1205"></td>
          <td id="LC1205" class="blob-code blob-code-inner js-file-line">124. What is the difference between Python Arrays and lists?</td>
        </tr>
        <tr>
          <td id="L1206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1206"></td>
          <td id="LC1206" class="blob-code blob-code-inner js-file-line">Ans:Arrays and lists, in Python, have the same way of storing data. But, arrays can hold only a single data type elements whereas lists can hold any data type elements.</td>
        </tr>
        <tr>
          <td id="L1207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1207"></td>
          <td id="LC1207" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1208"></td>
          <td id="LC1208" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1209"></td>
          <td id="LC1209" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1210"></td>
          <td id="LC1210" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1211"></td>
          <td id="LC1211" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1212"></td>
          <td id="LC1212" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1213"></td>
          <td id="LC1213" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1214"></td>
          <td id="LC1214" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1215"></td>
          <td id="LC1215" class="blob-code blob-code-inner js-file-line">import array as arr</td>
        </tr>
        <tr>
          <td id="L1216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1216"></td>
          <td id="LC1216" class="blob-code blob-code-inner js-file-line">My_Array=arr.array(&#39;i&#39;,[1,2,3,4])</td>
        </tr>
        <tr>
          <td id="L1217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1217"></td>
          <td id="LC1217" class="blob-code blob-code-inner js-file-line">My_list=[1,&#39;abc&#39;,1.20]</td>
        </tr>
        <tr>
          <td id="L1218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1218"></td>
          <td id="LC1218" class="blob-code blob-code-inner js-file-line">print(My_Array)</td>
        </tr>
        <tr>
          <td id="L1219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1219"></td>
          <td id="LC1219" class="blob-code blob-code-inner js-file-line">print(My_list)</td>
        </tr>
        <tr>
          <td id="L1220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1220"></td>
          <td id="LC1220" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L1221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1221"></td>
          <td id="LC1221" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1222"></td>
          <td id="LC1222" class="blob-code blob-code-inner js-file-line">array(‘i’, [1, 2, 3, 4]) [1, ‘abc’, 1.2]</td>
        </tr>
        <tr>
          <td id="L1223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1223"></td>
          <td id="LC1223" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1224"></td>
          <td id="LC1224" class="blob-code blob-code-inner js-file-line">125. What are functions in Python?</td>
        </tr>
        <tr>
          <td id="L1225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1225"></td>
          <td id="LC1225" class="blob-code blob-code-inner js-file-line">Ans:A function is a block of code which is executed only when it is called. To define a Python function, the def keyword is used.</td>
        </tr>
        <tr>
          <td id="L1226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1226"></td>
          <td id="LC1226" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1227"></td>
          <td id="LC1227" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1228"></td>
          <td id="LC1228" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1229"></td>
          <td id="LC1229" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1230"></td>
          <td id="LC1230" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1231"></td>
          <td id="LC1231" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1232"></td>
          <td id="LC1232" class="blob-code blob-code-inner js-file-line">def Newfunc():</td>
        </tr>
        <tr>
          <td id="L1233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1233"></td>
          <td id="LC1233" class="blob-code blob-code-inner js-file-line">print(&quot;Hi, Welcome to Edureka&quot;)</td>
        </tr>
        <tr>
          <td id="L1234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1234"></td>
          <td id="LC1234" class="blob-code blob-code-inner js-file-line">Newfunc(); #calling the function</td>
        </tr>
        <tr>
          <td id="L1235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1235"></td>
          <td id="LC1235" class="blob-code blob-code-inner js-file-line">Output: Hi, Welcome to Edureka</td>
        </tr>
        <tr>
          <td id="L1236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1236"></td>
          <td id="LC1236" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1237"></td>
          <td id="LC1237" class="blob-code blob-code-inner js-file-line">126.What is __init__?</td>
        </tr>
        <tr>
          <td id="L1238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1238"></td>
          <td id="LC1238" class="blob-code blob-code-inner js-file-line">Ans:__init__ is a method or constructor in Python. This method is automatically called to allocate memory when a new object/ instance of a class is created. All classes have the __init__ method.</td>
        </tr>
        <tr>
          <td id="L1239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1239"></td>
          <td id="LC1239" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1240"></td>
          <td id="LC1240" class="blob-code blob-code-inner js-file-line">Here is an example of how to use it.</td>
        </tr>
        <tr>
          <td id="L1241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1241"></td>
          <td id="LC1241" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1242"></td>
          <td id="LC1242" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1243"></td>
          <td id="LC1243" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1244"></td>
          <td id="LC1244" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1245"></td>
          <td id="LC1245" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1246"></td>
          <td id="LC1246" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1247"></td>
          <td id="LC1247" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L1248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1248"></td>
          <td id="LC1248" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L1249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1249"></td>
          <td id="LC1249" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L1250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1250"></td>
          <td id="LC1250" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L1251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1251"></td>
          <td id="LC1251" class="blob-code blob-code-inner js-file-line">10</td>
        </tr>
        <tr>
          <td id="L1252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1252"></td>
          <td id="LC1252" class="blob-code blob-code-inner js-file-line">11</td>
        </tr>
        <tr>
          <td id="L1253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1253"></td>
          <td id="LC1253" class="blob-code blob-code-inner js-file-line">class Employee:</td>
        </tr>
        <tr>
          <td id="L1254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1254"></td>
          <td id="LC1254" class="blob-code blob-code-inner js-file-line">def __init__(self, name, age,salary):</td>
        </tr>
        <tr>
          <td id="L1255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1255"></td>
          <td id="LC1255" class="blob-code blob-code-inner js-file-line">self.name = name</td>
        </tr>
        <tr>
          <td id="L1256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1256"></td>
          <td id="LC1256" class="blob-code blob-code-inner js-file-line">self.age = age</td>
        </tr>
        <tr>
          <td id="L1257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1257"></td>
          <td id="LC1257" class="blob-code blob-code-inner js-file-line">self.salary = 20000</td>
        </tr>
        <tr>
          <td id="L1258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1258"></td>
          <td id="LC1258" class="blob-code blob-code-inner js-file-line">E1 = Employee(&quot;XYZ&quot;, 23, 20000)</td>
        </tr>
        <tr>
          <td id="L1259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1259"></td>
          <td id="LC1259" class="blob-code blob-code-inner js-file-line"># E1 is the instance of class Employee.</td>
        </tr>
        <tr>
          <td id="L1260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1260"></td>
          <td id="LC1260" class="blob-code blob-code-inner js-file-line">#__init__ allocates memory for E1.</td>
        </tr>
        <tr>
          <td id="L1261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1261"></td>
          <td id="LC1261" class="blob-code blob-code-inner js-file-line">print(E1.name)</td>
        </tr>
        <tr>
          <td id="L1262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1262"></td>
          <td id="LC1262" class="blob-code blob-code-inner js-file-line">print(E1.age)</td>
        </tr>
        <tr>
          <td id="L1263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1263"></td>
          <td id="LC1263" class="blob-code blob-code-inner js-file-line">print(E1.salary)</td>
        </tr>
        <tr>
          <td id="L1264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1264"></td>
          <td id="LC1264" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L1265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1265"></td>
          <td id="LC1265" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1266"></td>
          <td id="LC1266" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1267"></td>
          <td id="LC1267" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1268"></td>
          <td id="LC1268" class="blob-code blob-code-inner js-file-line">XYZ</td>
        </tr>
        <tr>
          <td id="L1269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1269"></td>
          <td id="LC1269" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1270"></td>
          <td id="LC1270" class="blob-code blob-code-inner js-file-line">23</td>
        </tr>
        <tr>
          <td id="L1271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1271"></td>
          <td id="LC1271" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1272"></td>
          <td id="LC1272" class="blob-code blob-code-inner js-file-line">20000</td>
        </tr>
        <tr>
          <td id="L1273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1273"></td>
          <td id="LC1273" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1274"></td>
          <td id="LC1274" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1275"></td>
          <td id="LC1275" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1276"></td>
          <td id="LC1276" class="blob-code blob-code-inner js-file-line">127.What is a lambda function?</td>
        </tr>
        <tr>
          <td id="L1277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1277"></td>
          <td id="LC1277" class="blob-code blob-code-inner js-file-line">Ans:An anonymous function is known as a lambda function. This function can have any number of parameters but, can have just one statement.</td>
        </tr>
        <tr>
          <td id="L1278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1278"></td>
          <td id="LC1278" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1279"></td>
          <td id="LC1279" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1280"></td>
          <td id="LC1280" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1281"></td>
          <td id="LC1281" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1282"></td>
          <td id="LC1282" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1283"></td>
          <td id="LC1283" class="blob-code blob-code-inner js-file-line">a = lambda x,y : x+y</td>
        </tr>
        <tr>
          <td id="L1284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1284"></td>
          <td id="LC1284" class="blob-code blob-code-inner js-file-line">print(a(5, 6))</td>
        </tr>
        <tr>
          <td id="L1285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1285"></td>
          <td id="LC1285" class="blob-code blob-code-inner js-file-line">Output: 11</td>
        </tr>
        <tr>
          <td id="L1286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1286"></td>
          <td id="LC1286" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1287"></td>
          <td id="LC1287" class="blob-code blob-code-inner js-file-line">128. What is self in Python?</td>
        </tr>
        <tr>
          <td id="L1288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1288"></td>
          <td id="LC1288" class="blob-code blob-code-inner js-file-line">Ans:Self is an instance or an object of a class. In Python, this is explicitly included as the first parameter. However, this is not the case in Java where it’s optional.  It helps to differentiate between the methods and attributes of a class with local variables.</td>
        </tr>
        <tr>
          <td id="L1289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1289"></td>
          <td id="LC1289" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1290"></td>
          <td id="LC1290" class="blob-code blob-code-inner js-file-line">The self variable in the init method refers to the newly created object while in other methods, it refers to the object whose method was called.</td>
        </tr>
        <tr>
          <td id="L1291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1291"></td>
          <td id="LC1291" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1292"></td>
          <td id="LC1292" class="blob-code blob-code-inner js-file-line">129. How does break, continue and pass work?</td>
        </tr>
        <tr>
          <td id="L1293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1293"></td>
          <td id="LC1293" class="blob-code blob-code-inner js-file-line">Break	Allows loop termination when some condition is met and the control is transferred to the next statement.</td>
        </tr>
        <tr>
          <td id="L1294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1294"></td>
          <td id="LC1294" class="blob-code blob-code-inner js-file-line">Continue	Allows skipping some part of a loop when some specific condition is met and the control is transferred to the beginning of the loop</td>
        </tr>
        <tr>
          <td id="L1295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1295"></td>
          <td id="LC1295" class="blob-code blob-code-inner js-file-line">Pass	Used when you need some block of code syntactically, but you want to skip its execution. This is basically a null operation. Nothing happens when this is executed.</td>
        </tr>
        <tr>
          <td id="L1296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1296"></td>
          <td id="LC1296" class="blob-code blob-code-inner js-file-line">130. What does [::-1} do?</td>
        </tr>
        <tr>
          <td id="L1297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1297"></td>
          <td id="LC1297" class="blob-code blob-code-inner js-file-line">Ans: [::-1] is used to reverse the order of an array or a sequence.</td>
        </tr>
        <tr>
          <td id="L1298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1298"></td>
          <td id="LC1298" class="blob-code blob-code-inner js-file-line">For example:</td>
        </tr>
        <tr>
          <td id="L1299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1299"></td>
          <td id="LC1299" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1300"></td>
          <td id="LC1300" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1301"></td>
          <td id="LC1301" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1302"></td>
          <td id="LC1302" class="blob-code blob-code-inner js-file-line">import array as arr</td>
        </tr>
        <tr>
          <td id="L1303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1303"></td>
          <td id="LC1303" class="blob-code blob-code-inner js-file-line">My_Array=arr.array(&#39;i&#39;,[1,2,3,4,5])</td>
        </tr>
        <tr>
          <td id="L1304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1304"></td>
          <td id="LC1304" class="blob-code blob-code-inner js-file-line">My_Array[::-1]</td>
        </tr>
        <tr>
          <td id="L1305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1305"></td>
          <td id="LC1305" class="blob-code blob-code-inner js-file-line">Output: array(‘i’, [5, 4, 3, 2, 1])</td>
        </tr>
        <tr>
          <td id="L1306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1306"></td>
          <td id="LC1306" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1307"></td>
          <td id="LC1307" class="blob-code blob-code-inner js-file-line">[::-1] reprints a reversed copy of ordered data structures such as an array or a list. the original array or list remains unchanged.</td>
        </tr>
        <tr>
          <td id="L1308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1308"></td>
          <td id="LC1308" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1309"></td>
          <td id="LC1309" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1310"></td>
          <td id="LC1310" class="blob-code blob-code-inner js-file-line">131. How can you randomize the items of a list in place in Python?</td>
        </tr>
        <tr>
          <td id="L1311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1311"></td>
          <td id="LC1311" class="blob-code blob-code-inner js-file-line">Ans: Consider the example shown below:</td>
        </tr>
        <tr>
          <td id="L1312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1312"></td>
          <td id="LC1312" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1313"></td>
          <td id="LC1313" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1314"></td>
          <td id="LC1314" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1315"></td>
          <td id="LC1315" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1316"></td>
          <td id="LC1316" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1317"></td>
          <td id="LC1317" class="blob-code blob-code-inner js-file-line">from random import shuffle</td>
        </tr>
        <tr>
          <td id="L1318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1318"></td>
          <td id="LC1318" class="blob-code blob-code-inner js-file-line">x = [&#39;Keep&#39;, &#39;The&#39;, &#39;Blue&#39;, &#39;Flag&#39;, &#39;Flying&#39;, &#39;High&#39;]</td>
        </tr>
        <tr>
          <td id="L1319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1319"></td>
          <td id="LC1319" class="blob-code blob-code-inner js-file-line">shuffle(x)</td>
        </tr>
        <tr>
          <td id="L1320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1320"></td>
          <td id="LC1320" class="blob-code blob-code-inner js-file-line">print(x)</td>
        </tr>
        <tr>
          <td id="L1321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1321"></td>
          <td id="LC1321" class="blob-code blob-code-inner js-file-line">The output of the following code is as below.</td>
        </tr>
        <tr>
          <td id="L1322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1322"></td>
          <td id="LC1322" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1323"></td>
          <td id="LC1323" class="blob-code blob-code-inner js-file-line">[&#39;Flying&#39;, &#39;Keep&#39;, &#39;Blue&#39;, &#39;High&#39;, &#39;The&#39;, &#39;Flag&#39;]</td>
        </tr>
        <tr>
          <td id="L1324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1324"></td>
          <td id="LC1324" class="blob-code blob-code-inner js-file-line">132. What are python iterators?</td>
        </tr>
        <tr>
          <td id="L1325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1325"></td>
          <td id="LC1325" class="blob-code blob-code-inner js-file-line">Ans:Iterators are objects which can be traversed though or iterated upon.</td>
        </tr>
        <tr>
          <td id="L1326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1326"></td>
          <td id="LC1326" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1327"></td>
          <td id="LC1327" class="blob-code blob-code-inner js-file-line">133. How can you generate random numbers in Python?</td>
        </tr>
        <tr>
          <td id="L1328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1328"></td>
          <td id="LC1328" class="blob-code blob-code-inner js-file-line">Ans: Random module is the standard module that is used to generate a random number. The method is defined as:</td>
        </tr>
        <tr>
          <td id="L1329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1329"></td>
          <td id="LC1329" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1330"></td>
          <td id="LC1330" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1331"></td>
          <td id="LC1331" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1332"></td>
          <td id="LC1332" class="blob-code blob-code-inner js-file-line">import random</td>
        </tr>
        <tr>
          <td id="L1333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1333"></td>
          <td id="LC1333" class="blob-code blob-code-inner js-file-line">random.random</td>
        </tr>
        <tr>
          <td id="L1334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1334"></td>
          <td id="LC1334" class="blob-code blob-code-inner js-file-line">The statement random.random() method return the floating point number that is in the range of [0, 1). The function generates random float numbers. The methods that are used with the random class are the bound methods of the hidden instances. The instances of the Random can be done to show the multi-threading programs that creates a different instance of individual threads. The other random generators that are used in this are:</td>
        </tr>
        <tr>
          <td id="L1335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1335"></td>
          <td id="LC1335" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1336"></td>
          <td id="LC1336" class="blob-code blob-code-inner js-file-line">randrange(a, b): it chooses an integer and define the range in-between [a, b). It returns the elements by selecting it randomly from the range that is specified. It doesn’t build a range object.</td>
        </tr>
        <tr>
          <td id="L1337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1337"></td>
          <td id="LC1337" class="blob-code blob-code-inner js-file-line">uniform(a, b): it chooses a floating point number that is defined in the range of [a,b).Iyt returns the floating point number</td>
        </tr>
        <tr>
          <td id="L1338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1338"></td>
          <td id="LC1338" class="blob-code blob-code-inner js-file-line">normalvariate(mean, sdev): it is used for the normal distribution where the mu is a mean and the sdev is a sigma that is used for standard deviation.</td>
        </tr>
        <tr>
          <td id="L1339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1339"></td>
          <td id="LC1339" class="blob-code blob-code-inner js-file-line">The Random class that is used and instantiated creates an independent multiple random number generators.</td>
        </tr>
        <tr>
          <td id="L1340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1340"></td>
          <td id="LC1340" class="blob-code blob-code-inner js-file-line">134. What is the difference between range &amp; xrange?</td>
        </tr>
        <tr>
          <td id="L1341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1341"></td>
          <td id="LC1341" class="blob-code blob-code-inner js-file-line">Ans: For the most part, xrange and range are the exact same in terms of functionality. They both provide a way to generate a list of integers for you to use, however you please. The only difference is that range returns a Python list object and x range returns an xrange object.</td>
        </tr>
        <tr>
          <td id="L1342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1342"></td>
          <td id="LC1342" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1343"></td>
          <td id="LC1343" class="blob-code blob-code-inner js-file-line">This means that xrange doesn’t actually generate a static list at run-time like range does. It creates the values as you need them with a special technique called yielding. This technique is used with a type of object known as generators. That means that if you have a really gigantic range you’d like to generate a list for, say one billion, xrange is the function to use.</td>
        </tr>
        <tr>
          <td id="L1344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1344"></td>
          <td id="LC1344" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1345"></td>
          <td id="LC1345" class="blob-code blob-code-inner js-file-line">This is especially true if you have a really memory sensitive system such as a cell phone that you are working with, as range will use as much memory as it can to create your array of integers, which can result in a Memory Error and crash your program. It’s a memory hungry beast.</td>
        </tr>
        <tr>
          <td id="L1346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1346"></td>
          <td id="LC1346" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1347"></td>
          <td id="LC1347" class="blob-code blob-code-inner js-file-line">135. How do you write comments in python?</td>
        </tr>
        <tr>
          <td id="L1348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1348"></td>
          <td id="LC1348" class="blob-code blob-code-inner js-file-line">Ans:Comments in Python start with a # character. However, alternatively at times, commenting is done using docstrings(strings enclosed within triple quotes).</td>
        </tr>
        <tr>
          <td id="L1349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1349"></td>
          <td id="LC1349" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1350"></td>
          <td id="LC1350" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1351"></td>
          <td id="LC1351" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1352"></td>
          <td id="LC1352" class="blob-code blob-code-inner js-file-line">#Comments in Python start like this</td>
        </tr>
        <tr>
          <td id="L1353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1353"></td>
          <td id="LC1353" class="blob-code blob-code-inner js-file-line">print(&quot;Comments in Python start with a #&quot;)</td>
        </tr>
        <tr>
          <td id="L1354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1354"></td>
          <td id="LC1354" class="blob-code blob-code-inner js-file-line">Output:  Comments in Python start with a #</td>
        </tr>
        <tr>
          <td id="L1355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1355"></td>
          <td id="LC1355" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1356"></td>
          <td id="LC1356" class="blob-code blob-code-inner js-file-line">136. What is pickling and unpickling?</td>
        </tr>
        <tr>
          <td id="L1357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1357"></td>
          <td id="LC1357" class="blob-code blob-code-inner js-file-line">Ans: Pickle module accepts any Python object and converts it into a string representation and dumps it into a file by using dump function, this process is called pickling. While the process of retrieving original Python objects from the stored string representation is called unpickling.</td>
        </tr>
        <tr>
          <td id="L1358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1358"></td>
          <td id="LC1358" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1359"></td>
          <td id="LC1359" class="blob-code blob-code-inner js-file-line">137. What are the generators in python?</td>
        </tr>
        <tr>
          <td id="L1360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1360"></td>
          <td id="LC1360" class="blob-code blob-code-inner js-file-line">Ans: Functions that return an iterable set of items are called generators.</td>
        </tr>
        <tr>
          <td id="L1361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1361"></td>
          <td id="LC1361" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1362"></td>
          <td id="LC1362" class="blob-code blob-code-inner js-file-line">138. How will you capitalize the first letter of string?</td>
        </tr>
        <tr>
          <td id="L1363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1363"></td>
          <td id="LC1363" class="blob-code blob-code-inner js-file-line">Ans:In Python, the capitalize() method capitalizes the first letter of a string. If the string already consists of a capital letter at the beginning, then, it returns the original string.</td>
        </tr>
        <tr>
          <td id="L1364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1364"></td>
          <td id="LC1364" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1365"></td>
          <td id="LC1365" class="blob-code blob-code-inner js-file-line">139. How will you convert a string to all lowercase?</td>
        </tr>
        <tr>
          <td id="L1366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1366"></td>
          <td id="LC1366" class="blob-code blob-code-inner js-file-line">Ans:To convert a string to lowercase, lower() function can be used.</td>
        </tr>
        <tr>
          <td id="L1367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1367"></td>
          <td id="LC1367" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1368"></td>
          <td id="LC1368" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1369"></td>
          <td id="LC1369" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1370"></td>
          <td id="LC1370" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1371"></td>
          <td id="LC1371" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1372"></td>
          <td id="LC1372" class="blob-code blob-code-inner js-file-line">stg=&#39;ABCD&#39;</td>
        </tr>
        <tr>
          <td id="L1373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1373"></td>
          <td id="LC1373" class="blob-code blob-code-inner js-file-line">print(stg.lower())</td>
        </tr>
        <tr>
          <td id="L1374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1374"></td>
          <td id="LC1374" class="blob-code blob-code-inner js-file-line">Output: abcd</td>
        </tr>
        <tr>
          <td id="L1375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1375"></td>
          <td id="LC1375" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1376"></td>
          <td id="LC1376" class="blob-code blob-code-inner js-file-line">140. How to comment multiple lines in python?</td>
        </tr>
        <tr>
          <td id="L1377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1377"></td>
          <td id="LC1377" class="blob-code blob-code-inner js-file-line">Ans: Multi-line comments appear in more than one line. All the lines to be commented are to be prefixed by a #. You can also a very good shortcut method to comment multiple lines. All you need to do is hold the ctrl key and left click in every place wherever you want to include a # character and type a # just once. This will comment all the lines where you introduced your cursor.</td>
        </tr>
        <tr>
          <td id="L1378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1378"></td>
          <td id="LC1378" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1379"></td>
          <td id="LC1379" class="blob-code blob-code-inner js-file-line">141.What are docstrings in Python?</td>
        </tr>
        <tr>
          <td id="L1380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1380"></td>
          <td id="LC1380" class="blob-code blob-code-inner js-file-line">Ans:Docstrings are not actually comments, but, they are documentation strings. These docstrings are within triple quotes. They are not assigned to any variable and therefore, at times, serve the purpose of comments as well.</td>
        </tr>
        <tr>
          <td id="L1381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1381"></td>
          <td id="LC1381" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1382"></td>
          <td id="LC1382" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1383"></td>
          <td id="LC1383" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1384"></td>
          <td id="LC1384" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1385"></td>
          <td id="LC1385" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1386"></td>
          <td id="LC1386" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1387"></td>
          <td id="LC1387" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1388"></td>
          <td id="LC1388" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1389"></td>
          <td id="LC1389" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L1390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1390"></td>
          <td id="LC1390" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L1391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1391"></td>
          <td id="LC1391" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L1392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1392"></td>
          <td id="LC1392" class="blob-code blob-code-inner js-file-line">&quot;&quot;&quot;</td>
        </tr>
        <tr>
          <td id="L1393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1393"></td>
          <td id="LC1393" class="blob-code blob-code-inner js-file-line">Using docstring as a comment.</td>
        </tr>
        <tr>
          <td id="L1394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1394"></td>
          <td id="LC1394" class="blob-code blob-code-inner js-file-line">This code divides 2 numbers</td>
        </tr>
        <tr>
          <td id="L1395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1395"></td>
          <td id="LC1395" class="blob-code blob-code-inner js-file-line">&quot;&quot;&quot;</td>
        </tr>
        <tr>
          <td id="L1396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1396"></td>
          <td id="LC1396" class="blob-code blob-code-inner js-file-line">x=8</td>
        </tr>
        <tr>
          <td id="L1397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1397"></td>
          <td id="LC1397" class="blob-code blob-code-inner js-file-line">y=4</td>
        </tr>
        <tr>
          <td id="L1398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1398"></td>
          <td id="LC1398" class="blob-code blob-code-inner js-file-line">z=x/y</td>
        </tr>
        <tr>
          <td id="L1399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1399"></td>
          <td id="LC1399" class="blob-code blob-code-inner js-file-line">print(z)</td>
        </tr>
        <tr>
          <td id="L1400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1400"></td>
          <td id="LC1400" class="blob-code blob-code-inner js-file-line">Output: 2.0</td>
        </tr>
        <tr>
          <td id="L1401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1401"></td>
          <td id="LC1401" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1402"></td>
          <td id="LC1402" class="blob-code blob-code-inner js-file-line">141. What is the purpose of is, not and in operators?</td>
        </tr>
        <tr>
          <td id="L1403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1403"></td>
          <td id="LC1403" class="blob-code blob-code-inner js-file-line">Ans:Operators are special functions. They take one or more values and produce a corresponding result.</td>
        </tr>
        <tr>
          <td id="L1404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1404"></td>
          <td id="LC1404" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1405"></td>
          <td id="LC1405" class="blob-code blob-code-inner js-file-line">is: returns true when 2 operands are true  (Example: “a” is ‘a’)</td>
        </tr>
        <tr>
          <td id="L1406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1406"></td>
          <td id="LC1406" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1407"></td>
          <td id="LC1407" class="blob-code blob-code-inner js-file-line">not: returns the inverse of the boolean value</td>
        </tr>
        <tr>
          <td id="L1408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1408"></td>
          <td id="LC1408" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1409"></td>
          <td id="LC1409" class="blob-code blob-code-inner js-file-line">in: checks if some element is present in some sequence</td>
        </tr>
        <tr>
          <td id="L1410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1410"></td>
          <td id="LC1410" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1411"></td>
          <td id="LC1411" class="blob-code blob-code-inner js-file-line">142. What is the usage of help() and dir() function in Python?</td>
        </tr>
        <tr>
          <td id="L1412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1412"></td>
          <td id="LC1412" class="blob-code blob-code-inner js-file-line">Ans: Help() and dir() both functions are accessible from the Python interpreter and used for viewing a consolidated dump of built-in functions.</td>
        </tr>
        <tr>
          <td id="L1413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1413"></td>
          <td id="LC1413" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1414"></td>
          <td id="LC1414" class="blob-code blob-code-inner js-file-line">Help() function: The help() function is used to display the documentation string and also facilitates you to see the help related to modules, keywords, attributes, etc.</td>
        </tr>
        <tr>
          <td id="L1415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1415"></td>
          <td id="LC1415" class="blob-code blob-code-inner js-file-line">Dir() function: The dir() function is used to display the defined symbols.</td>
        </tr>
        <tr>
          <td id="L1416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1416"></td>
          <td id="LC1416" class="blob-code blob-code-inner js-file-line">143. Whenever Python exits, why isn’t all the memory de-allocated?</td>
        </tr>
        <tr>
          <td id="L1417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1417"></td>
          <td id="LC1417" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1418"></td>
          <td id="LC1418" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1419"></td>
          <td id="LC1419" class="blob-code blob-code-inner js-file-line">Whenever Python exits, especially those Python modules which are having circular references to other objects or the objects that are referenced from the global namespaces are not always de-allocated or freed.</td>
        </tr>
        <tr>
          <td id="L1420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1420"></td>
          <td id="LC1420" class="blob-code blob-code-inner js-file-line">It is impossible to de-allocate those portions of memory that are reserved by the C library.</td>
        </tr>
        <tr>
          <td id="L1421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1421"></td>
          <td id="LC1421" class="blob-code blob-code-inner js-file-line">On exit, because of having its own efficient clean up mechanism, Python would try to de-allocate/destroy every other object.</td>
        </tr>
        <tr>
          <td id="L1422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1422"></td>
          <td id="LC1422" class="blob-code blob-code-inner js-file-line">143. What is a dictionary in Python?</td>
        </tr>
        <tr>
          <td id="L1423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1423"></td>
          <td id="LC1423" class="blob-code blob-code-inner js-file-line">Ans: The built-in datatypes in Python is called dictionary. It defines one-to-one relationship between keys and values. Dictionaries contain pair of keys and their corresponding values. Dictionaries are indexed by keys.</td>
        </tr>
        <tr>
          <td id="L1424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1424"></td>
          <td id="LC1424" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1425"></td>
          <td id="LC1425" class="blob-code blob-code-inner js-file-line">Let’s take an example:</td>
        </tr>
        <tr>
          <td id="L1426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1426"></td>
          <td id="LC1426" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1427"></td>
          <td id="LC1427" class="blob-code blob-code-inner js-file-line">The following example contains some keys. Country, Capital &amp; PM. Their corresponding values are India, Delhi and Modi respectively.</td>
        </tr>
        <tr>
          <td id="L1428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1428"></td>
          <td id="LC1428" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1429"></td>
          <td id="LC1429" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1430"></td>
          <td id="LC1430" class="blob-code blob-code-inner js-file-line">dict={&#39;Country&#39;:&#39;India&#39;,&#39;Capital&#39;:&#39;Delhi&#39;,&#39;PM&#39;:&#39;Modi&#39;}</td>
        </tr>
        <tr>
          <td id="L1431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1431"></td>
          <td id="LC1431" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1432"></td>
          <td id="LC1432" class="blob-code blob-code-inner js-file-line">print dict[Country]</td>
        </tr>
        <tr>
          <td id="L1433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1433"></td>
          <td id="LC1433" class="blob-code blob-code-inner js-file-line">India</td>
        </tr>
        <tr>
          <td id="L1434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1434"></td>
          <td id="LC1434" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1435"></td>
          <td id="LC1435" class="blob-code blob-code-inner js-file-line">print dict[Capital]</td>
        </tr>
        <tr>
          <td id="L1436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1436"></td>
          <td id="LC1436" class="blob-code blob-code-inner js-file-line">Delhi</td>
        </tr>
        <tr>
          <td id="L1437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1437"></td>
          <td id="LC1437" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1438"></td>
          <td id="LC1438" class="blob-code blob-code-inner js-file-line">print dict[PM]</td>
        </tr>
        <tr>
          <td id="L1439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1439"></td>
          <td id="LC1439" class="blob-code blob-code-inner js-file-line">Modi</td>
        </tr>
        <tr>
          <td id="L1440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1440"></td>
          <td id="LC1440" class="blob-code blob-code-inner js-file-line">144. How can the ternary operators be used in python?</td>
        </tr>
        <tr>
          <td id="L1441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1441"></td>
          <td id="LC1441" class="blob-code blob-code-inner js-file-line">Ans: The Ternary operator is the operator that is used to show the conditional statements. This consists of the true or false values with a statement that has to be evaluated for it.</td>
        </tr>
        <tr>
          <td id="L1442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1442"></td>
          <td id="LC1442" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1443"></td>
          <td id="LC1443" class="blob-code blob-code-inner js-file-line">Syntax:</td>
        </tr>
        <tr>
          <td id="L1444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1444"></td>
          <td id="LC1444" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1445"></td>
          <td id="LC1445" class="blob-code blob-code-inner js-file-line">The Ternary operator will be given as:</td>
        </tr>
        <tr>
          <td id="L1446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1446"></td>
          <td id="LC1446" class="blob-code blob-code-inner js-file-line">[on_true] if [expression] else [on_false]x, y = 25, 50big = x if x &lt; y else y</td>
        </tr>
        <tr>
          <td id="L1447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1447"></td>
          <td id="LC1447" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1448"></td>
          <td id="LC1448" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1449"></td>
          <td id="LC1449" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1450"></td>
          <td id="LC1450" class="blob-code blob-code-inner js-file-line">The expression gets evaluated like if x&lt;y else y, in this case if x&lt;y is true then the value is returned as big=x and if it is incorrect then big=y will be sent as a result.</td>
        </tr>
        <tr>
          <td id="L1451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1451"></td>
          <td id="LC1451" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1452"></td>
          <td id="LC1452" class="blob-code blob-code-inner js-file-line">146. What does this mean: *args, **kwargs? And why would we use it?</td>
        </tr>
        <tr>
          <td id="L1453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1453"></td>
          <td id="LC1453" class="blob-code blob-code-inner js-file-line">Ans: We use *args when we aren’t sure how many arguments are going to be passed to a function, or if we want to pass a stored list or tuple of arguments to a function. **kwargs is used when we don’t know how many keyword arguments will be passed to a function, or it can be used to pass the values of a dictionary as keyword arguments. The identifiers args and kwargs are a convention, you could also use *bob and **billy but that would not be wise.</td>
        </tr>
        <tr>
          <td id="L1454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1454"></td>
          <td id="LC1454" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1455"></td>
          <td id="LC1455" class="blob-code blob-code-inner js-file-line">147. What does len() do?</td>
        </tr>
        <tr>
          <td id="L1456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1456"></td>
          <td id="LC1456" class="blob-code blob-code-inner js-file-line">Ans:It is used to determine the length of a string, a list, an array, etc.</td>
        </tr>
        <tr>
          <td id="L1457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1457"></td>
          <td id="LC1457" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1458"></td>
          <td id="LC1458" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1459"></td>
          <td id="LC1459" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1460"></td>
          <td id="LC1460" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1461"></td>
          <td id="LC1461" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1462"></td>
          <td id="LC1462" class="blob-code blob-code-inner js-file-line">stg=&#39;ABCD&#39;</td>
        </tr>
        <tr>
          <td id="L1463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1463"></td>
          <td id="LC1463" class="blob-code blob-code-inner js-file-line">len(stg)</td>
        </tr>
        <tr>
          <td id="L1464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1464"></td>
          <td id="LC1464" class="blob-code blob-code-inner js-file-line">148. Explain split(), sub(), subn() methods of “re” module in Python.</td>
        </tr>
        <tr>
          <td id="L1465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1465"></td>
          <td id="LC1465" class="blob-code blob-code-inner js-file-line">Ans: To modify the strings, Python’s “re” module is providing 3 methods. They are:</td>
        </tr>
        <tr>
          <td id="L1466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1466"></td>
          <td id="LC1466" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1467"></td>
          <td id="LC1467" class="blob-code blob-code-inner js-file-line">split() – uses a regex pattern to “split” a given string into a list.</td>
        </tr>
        <tr>
          <td id="L1468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1468"></td>
          <td id="LC1468" class="blob-code blob-code-inner js-file-line">sub() – finds all substrings where the regex pattern matches and then replace them with a different string</td>
        </tr>
        <tr>
          <td id="L1469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1469"></td>
          <td id="LC1469" class="blob-code blob-code-inner js-file-line">subn() – it is similar to sub() and also returns the new string along with the no. of replacements.</td>
        </tr>
        <tr>
          <td id="L1470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1470"></td>
          <td id="LC1470" class="blob-code blob-code-inner js-file-line">149. What are negative indexes and why are they used?</td>
        </tr>
        <tr>
          <td id="L1471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1471"></td>
          <td id="LC1471" class="blob-code blob-code-inner js-file-line">Ans: The sequences in Python are indexed and it consists of the positive as well as negative numbers. The numbers that are positive uses ‘0’ that is uses as first index and ‘1’ as the second index and the process goes on like that.</td>
        </tr>
        <tr>
          <td id="L1472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1472"></td>
          <td id="LC1472" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1473"></td>
          <td id="LC1473" class="blob-code blob-code-inner js-file-line">The index for the negative number starts from ‘-1’ that represents the last index in the sequence and ‘-2’ as the penultimate index and the sequence carries forward like the positive number.</td>
        </tr>
        <tr>
          <td id="L1474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1474"></td>
          <td id="LC1474" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1475"></td>
          <td id="LC1475" class="blob-code blob-code-inner js-file-line">The negative index is used to remove any new-line spaces from the string and allow the string to except the last character that is given as S[:-1]. The negative index is also used to show the index to represent the string in correct order.</td>
        </tr>
        <tr>
          <td id="L1476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1476"></td>
          <td id="LC1476" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1477"></td>
          <td id="LC1477" class="blob-code blob-code-inner js-file-line">150. What are Python packages?</td>
        </tr>
        <tr>
          <td id="L1478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1478"></td>
          <td id="LC1478" class="blob-code blob-code-inner js-file-line">Ans: Python packages are namespaces containing multiple modules.</td>
        </tr>
        <tr>
          <td id="L1479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1479"></td>
          <td id="LC1479" class="blob-code blob-code-inner js-file-line">151.How can files be deleted in Python?</td>
        </tr>
        <tr>
          <td id="L1480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1480"></td>
          <td id="LC1480" class="blob-code blob-code-inner js-file-line">Ans: To delete a file in Python, you need to import the OS Module. After that, you need to use the os.remove() function.</td>
        </tr>
        <tr>
          <td id="L1481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1481"></td>
          <td id="LC1481" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1482"></td>
          <td id="LC1482" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1483"></td>
          <td id="LC1483" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1484"></td>
          <td id="LC1484" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1485"></td>
          <td id="LC1485" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1486"></td>
          <td id="LC1486" class="blob-code blob-code-inner js-file-line">import os</td>
        </tr>
        <tr>
          <td id="L1487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1487"></td>
          <td id="LC1487" class="blob-code blob-code-inner js-file-line">os.remove(&quot;xyz.txt&quot;)</td>
        </tr>
        <tr>
          <td id="L1488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1488"></td>
          <td id="LC1488" class="blob-code blob-code-inner js-file-line">152. What are the built-in types of python?</td>
        </tr>
        <tr>
          <td id="L1489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1489"></td>
          <td id="LC1489" class="blob-code blob-code-inner js-file-line">Ans: Built-in types in Python are as follows –</td>
        </tr>
        <tr>
          <td id="L1490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1490"></td>
          <td id="LC1490" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1491"></td>
          <td id="LC1491" class="blob-code blob-code-inner js-file-line">Integers</td>
        </tr>
        <tr>
          <td id="L1492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1492"></td>
          <td id="LC1492" class="blob-code blob-code-inner js-file-line">Floating-point</td>
        </tr>
        <tr>
          <td id="L1493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1493"></td>
          <td id="LC1493" class="blob-code blob-code-inner js-file-line">Complex numbers</td>
        </tr>
        <tr>
          <td id="L1494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1494"></td>
          <td id="LC1494" class="blob-code blob-code-inner js-file-line">Strings</td>
        </tr>
        <tr>
          <td id="L1495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1495"></td>
          <td id="LC1495" class="blob-code blob-code-inner js-file-line">Boolean</td>
        </tr>
        <tr>
          <td id="L1496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1496"></td>
          <td id="LC1496" class="blob-code blob-code-inner js-file-line">Built-in functions</td>
        </tr>
        <tr>
          <td id="L1497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1497"></td>
          <td id="LC1497" class="blob-code blob-code-inner js-file-line">153. What advantages do NumPy arrays offer over (nested) Python lists?</td>
        </tr>
        <tr>
          <td id="L1498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1498"></td>
          <td id="LC1498" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1499"></td>
          <td id="LC1499" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1500"></td>
          <td id="LC1500" class="blob-code blob-code-inner js-file-line">Python’s lists are efficient general-purpose containers. They support (fairly) efficient insertion, deletion, appending, and concatenation, and Python’s list comprehensions make them easy to construct and manipulate.</td>
        </tr>
        <tr>
          <td id="L1501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1501"></td>
          <td id="LC1501" class="blob-code blob-code-inner js-file-line">They have certain limitations: they don’t support “vectorized” operations like elementwise addition and multiplication, and the fact that they can contain objects of differing types mean that Python must store type information for every element, and must execute type dispatching code when operating on each element.</td>
        </tr>
        <tr>
          <td id="L1502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1502"></td>
          <td id="LC1502" class="blob-code blob-code-inner js-file-line">NumPy is not just more efficient; it is also more convenient. You get a lot of vector and matrix operations for free, which sometimes allow one to avoid unnecessary work. And they are also efficiently implemented.</td>
        </tr>
        <tr>
          <td id="L1503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1503"></td>
          <td id="LC1503" class="blob-code blob-code-inner js-file-line">NumPy array is faster and You get a lot built in with NumPy, FFTs, convolutions, fast searching, basic statistics, linear algebra, histograms, etc.</td>
        </tr>
        <tr>
          <td id="L1504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1504"></td>
          <td id="LC1504" class="blob-code blob-code-inner js-file-line">154. How to add values to a python array?</td>
        </tr>
        <tr>
          <td id="L1505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1505"></td>
          <td id="LC1505" class="blob-code blob-code-inner js-file-line">Ans: Elements can be added to an array using the append(), extend() and the insert (i,x) functions.</td>
        </tr>
        <tr>
          <td id="L1506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1506"></td>
          <td id="LC1506" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1507"></td>
          <td id="LC1507" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1508"></td>
          <td id="LC1508" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1509"></td>
          <td id="LC1509" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1510"></td>
          <td id="LC1510" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1511"></td>
          <td id="LC1511" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1512"></td>
          <td id="LC1512" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1513"></td>
          <td id="LC1513" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1514"></td>
          <td id="LC1514" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L1515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1515"></td>
          <td id="LC1515" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L1516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1516"></td>
          <td id="LC1516" class="blob-code blob-code-inner js-file-line">a=arr.array(&#39;d&#39;, [1.1 , 2.1 ,3.1] )</td>
        </tr>
        <tr>
          <td id="L1517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1517"></td>
          <td id="LC1517" class="blob-code blob-code-inner js-file-line">a.append(3.4)</td>
        </tr>
        <tr>
          <td id="L1518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1518"></td>
          <td id="LC1518" class="blob-code blob-code-inner js-file-line">print(a)</td>
        </tr>
        <tr>
          <td id="L1519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1519"></td>
          <td id="LC1519" class="blob-code blob-code-inner js-file-line">a.extend([4.5,6.3,6.8])</td>
        </tr>
        <tr>
          <td id="L1520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1520"></td>
          <td id="LC1520" class="blob-code blob-code-inner js-file-line">print(a)</td>
        </tr>
        <tr>
          <td id="L1521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1521"></td>
          <td id="LC1521" class="blob-code blob-code-inner js-file-line">a.insert(2,3.8)</td>
        </tr>
        <tr>
          <td id="L1522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1522"></td>
          <td id="LC1522" class="blob-code blob-code-inner js-file-line">print(a)</td>
        </tr>
        <tr>
          <td id="L1523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1523"></td>
          <td id="LC1523" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L1524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1524"></td>
          <td id="LC1524" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1525"></td>
          <td id="LC1525" class="blob-code blob-code-inner js-file-line">array(‘d’, [1.1, 2.1, 3.1, 3.4])</td>
        </tr>
        <tr>
          <td id="L1526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1526"></td>
          <td id="LC1526" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1527"></td>
          <td id="LC1527" class="blob-code blob-code-inner js-file-line">array(‘d’, [1.1, 2.1, 3.1, 3.4, 4.5, 6.3, 6.8])</td>
        </tr>
        <tr>
          <td id="L1528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1528"></td>
          <td id="LC1528" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1529"></td>
          <td id="LC1529" class="blob-code blob-code-inner js-file-line">array(‘d’, [1.1, 2.1, 3.8, 3.1, 3.4, 4.5, 6.3, 6.8])</td>
        </tr>
        <tr>
          <td id="L1530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1530"></td>
          <td id="LC1530" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1531"></td>
          <td id="LC1531" class="blob-code blob-code-inner js-file-line">155. How to remove values to a python array?</td>
        </tr>
        <tr>
          <td id="L1532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1532"></td>
          <td id="LC1532" class="blob-code blob-code-inner js-file-line">Ans: Array elements can be removed using pop() or remove() method. The difference between these two functions is that the former returns the deleted value whereas the latter does not.</td>
        </tr>
        <tr>
          <td id="L1533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1533"></td>
          <td id="LC1533" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1534"></td>
          <td id="LC1534" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1535"></td>
          <td id="LC1535" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1536"></td>
          <td id="LC1536" class="blob-code blob-code-inner js-file-line">a=arr.array(&#39;d&#39;, [1.1, 2.2, 3.8, 3.1, 3.7, 1.2, 4.6])</td>
        </tr>
        <tr>
          <td id="L1537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1537"></td>
          <td id="LC1537" class="blob-code blob-code-inner js-file-line">print(a.pop())</td>
        </tr>
        <tr>
          <td id="L1538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1538"></td>
          <td id="LC1538" class="blob-code blob-code-inner js-file-line">print(a.pop(3))</td>
        </tr>
        <tr>
          <td id="L1539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1539"></td>
          <td id="LC1539" class="blob-code blob-code-inner js-file-line">a.remove(1.1)</td>
        </tr>
        <tr>
          <td id="L1540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1540"></td>
          <td id="LC1540" class="blob-code blob-code-inner js-file-line">print(a)</td>
        </tr>
        <tr>
          <td id="L1541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1541"></td>
          <td id="LC1541" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L1542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1542"></td>
          <td id="LC1542" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1543"></td>
          <td id="LC1543" class="blob-code blob-code-inner js-file-line">4.6</td>
        </tr>
        <tr>
          <td id="L1544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1544"></td>
          <td id="LC1544" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1545"></td>
          <td id="LC1545" class="blob-code blob-code-inner js-file-line">3.1</td>
        </tr>
        <tr>
          <td id="L1546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1546"></td>
          <td id="LC1546" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1547"></td>
          <td id="LC1547" class="blob-code blob-code-inner js-file-line">array(‘d’, [2.2, 3.8, 3.7, 1.2])</td>
        </tr>
        <tr>
          <td id="L1548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1548"></td>
          <td id="LC1548" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1549"></td>
          <td id="LC1549" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1550"></td>
          <td id="LC1550" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1551"></td>
          <td id="LC1551" class="blob-code blob-code-inner js-file-line">156. Does Python have OOps concepts?</td>
        </tr>
        <tr>
          <td id="L1552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1552"></td>
          <td id="LC1552" class="blob-code blob-code-inner js-file-line">Ans: Python is an object-oriented programming language. This means that any program can be solved in python by creating an object model. However, Python can be treated as procedural as well as structural language.</td>
        </tr>
        <tr>
          <td id="L1553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1553"></td>
          <td id="LC1553" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1554"></td>
          <td id="LC1554" class="blob-code blob-code-inner js-file-line">157. What is the difference between deep and shallow copy?</td>
        </tr>
        <tr>
          <td id="L1555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1555"></td>
          <td id="LC1555" class="blob-code blob-code-inner js-file-line">Ans: Shallow copy is used when a new instance type gets created and it keeps the values that are copied in the new instance. Shallow copy is used to copy the reference pointers just like it copies the values. These references point to the original objects and the changes made in any member of the class will also affect the original copy of it. Shallow copy allows faster execution of the program and it depends on the size of the data that is used.</td>
        </tr>
        <tr>
          <td id="L1556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1556"></td>
          <td id="LC1556" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1557"></td>
          <td id="LC1557" class="blob-code blob-code-inner js-file-line">Deep copy is used to store the values that are already copied. Deep copy doesn’t copy the reference pointers to the objects. It makes the reference to an object and the new object that is pointed by some other object gets stored. The changes made in the original copy won’t affect any other copy that uses the object. Deep copy makes execution of the program slower due to making certain copies for each object that is been called.</td>
        </tr>
        <tr>
          <td id="L1558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1558"></td>
          <td id="LC1558" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1559"></td>
          <td id="LC1559" class="blob-code blob-code-inner js-file-line">158. How is Multithreading achieved in Python?</td>
        </tr>
        <tr>
          <td id="L1560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1560"></td>
          <td id="LC1560" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1561"></td>
          <td id="LC1561" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1562"></td>
          <td id="LC1562" class="blob-code blob-code-inner js-file-line">Python has a multi-threading package but if you want to multi-thread to speed your code up, then it’s usually not a good idea to use it.</td>
        </tr>
        <tr>
          <td id="L1563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1563"></td>
          <td id="LC1563" class="blob-code blob-code-inner js-file-line">Python has a construct called the Global Interpreter Lock (GIL). The GIL makes sure that only one of your ‘threads’ can execute at any one time. A thread acquires the GIL, does a little work, then passes the GIL onto the next thread.</td>
        </tr>
        <tr>
          <td id="L1564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1564"></td>
          <td id="LC1564" class="blob-code blob-code-inner js-file-line">This happens very quickly so to the human eye it may seem like your threads are executing in parallel, but they are really just taking turns using the same CPU core.</td>
        </tr>
        <tr>
          <td id="L1565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1565"></td>
          <td id="LC1565" class="blob-code blob-code-inner js-file-line">All this GIL passing adds overhead to execution. This means that if you want to make your code run faster then using the threading package often isn’t a good idea.</td>
        </tr>
        <tr>
          <td id="L1566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1566"></td>
          <td id="LC1566" class="blob-code blob-code-inner js-file-line">159. What is the process of compilation and linking in python?</td>
        </tr>
        <tr>
          <td id="L1567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1567"></td>
          <td id="LC1567" class="blob-code blob-code-inner js-file-line">Ans: The compiling and linking allows the new extensions to be compiled properly without any error and the linking can be done only when it passes the compiled procedure. If the dynamic loading is used then it depends on the style that is being provided with the system. The python interpreter can be used to provide the dynamic loading of the configuration setup files and will rebuild the interpreter.</td>
        </tr>
        <tr>
          <td id="L1568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1568"></td>
          <td id="LC1568" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1569"></td>
          <td id="LC1569" class="blob-code blob-code-inner js-file-line">The steps that are required in this as:</td>
        </tr>
        <tr>
          <td id="L1570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1570"></td>
          <td id="LC1570" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1571"></td>
          <td id="LC1571" class="blob-code blob-code-inner js-file-line">Create a file with any name and in any language that is supported by the compiler of your system. For example file.c or file.cpp</td>
        </tr>
        <tr>
          <td id="L1572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1572"></td>
          <td id="LC1572" class="blob-code blob-code-inner js-file-line">Place this file in the Modules/ directory of the distribution which is getting used.</td>
        </tr>
        <tr>
          <td id="L1573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1573"></td>
          <td id="LC1573" class="blob-code blob-code-inner js-file-line">Add a line in the file Setup.local that is present in the Modules/ directory.</td>
        </tr>
        <tr>
          <td id="L1574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1574"></td>
          <td id="LC1574" class="blob-code blob-code-inner js-file-line">Run the file using spam file.o</td>
        </tr>
        <tr>
          <td id="L1575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1575"></td>
          <td id="LC1575" class="blob-code blob-code-inner js-file-line">After a successful run of this rebuild the interpreter by using the make command on the top-level directory.</td>
        </tr>
        <tr>
          <td id="L1576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1576"></td>
          <td id="LC1576" class="blob-code blob-code-inner js-file-line">If the file is changed then run rebuildMakefile by using the command as ‘make Makefile’.</td>
        </tr>
        <tr>
          <td id="L1577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1577"></td>
          <td id="LC1577" class="blob-code blob-code-inner js-file-line">160. What are Python libraries? Name a few of them.</td>
        </tr>
        <tr>
          <td id="L1578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1578"></td>
          <td id="LC1578" class="blob-code blob-code-inner js-file-line">Ans: Python libraries are a collection of Python packages. Some of the majorly used python libraries are – Numpy, Pandas, Matplotlib, Scikit-learn and many more.</td>
        </tr>
        <tr>
          <td id="L1579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1579"></td>
          <td id="LC1579" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1580"></td>
          <td id="LC1580" class="blob-code blob-code-inner js-file-line">161. What is split used for?</td>
        </tr>
        <tr>
          <td id="L1581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1581"></td>
          <td id="LC1581" class="blob-code blob-code-inner js-file-line">Ans: The split() method is used to separate a given string in Python.</td>
        </tr>
        <tr>
          <td id="L1582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1582"></td>
          <td id="LC1582" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1583"></td>
          <td id="LC1583" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1584"></td>
          <td id="LC1584" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1585"></td>
          <td id="LC1585" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1586"></td>
          <td id="LC1586" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1587"></td>
          <td id="LC1587" class="blob-code blob-code-inner js-file-line">a=&quot;KausalVikash python&quot;</td>
        </tr>
        <tr>
          <td id="L1588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1588"></td>
          <td id="LC1588" class="blob-code blob-code-inner js-file-line">print(a.split())</td>
        </tr>
        <tr>
          <td id="L1589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1589"></td>
          <td id="LC1589" class="blob-code blob-code-inner js-file-line">Output:  [‘KausalVikash’, ‘python’]</td>
        </tr>
        <tr>
          <td id="L1590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1590"></td>
          <td id="LC1590" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1591"></td>
          <td id="LC1591" class="blob-code blob-code-inner js-file-line">162. How to import modules in python?</td>
        </tr>
        <tr>
          <td id="L1592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1592"></td>
          <td id="LC1592" class="blob-code blob-code-inner js-file-line">Ans: Modules can be imported using the import keyword.  You can import modules in three ways-</td>
        </tr>
        <tr>
          <td id="L1593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1593"></td>
          <td id="LC1593" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1594"></td>
          <td id="LC1594" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1595"></td>
          <td id="LC1595" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1596"></td>
          <td id="LC1596" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1597"></td>
          <td id="LC1597" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1598"></td>
          <td id="LC1598" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1599"></td>
          <td id="LC1599" class="blob-code blob-code-inner js-file-line">import array           #importing using the original module name</td>
        </tr>
        <tr>
          <td id="L1600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1600"></td>
          <td id="LC1600" class="blob-code blob-code-inner js-file-line">import array as arr    # importing using an alias name</td>
        </tr>
        <tr>
          <td id="L1601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1601"></td>
          <td id="LC1601" class="blob-code blob-code-inner js-file-line">from array import *    #imports everything present in the array module</td>
        </tr>
        <tr>
          <td id="L1602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1602"></td>
          <td id="LC1602" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1603"></td>
          <td id="LC1603" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1604"></td>
          <td id="LC1604" class="blob-code blob-code-inner js-file-line">163. Explain Inheritance in Python with an example.</td>
        </tr>
        <tr>
          <td id="L1605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1605"></td>
          <td id="LC1605" class="blob-code blob-code-inner js-file-line">Ans: Inheritance allows One class to gain all the members(say attributes and methods) of another class. Inheritance provides code reusability, makes it easier to create and maintain an application. The class from which we are inheriting is called super-class and the class that is inherited is called a derived / child class.</td>
        </tr>
        <tr>
          <td id="L1606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1606"></td>
          <td id="LC1606" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1607"></td>
          <td id="LC1607" class="blob-code blob-code-inner js-file-line">They are different types of inheritance supported by Python:</td>
        </tr>
        <tr>
          <td id="L1608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1608"></td>
          <td id="LC1608" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1609"></td>
          <td id="LC1609" class="blob-code blob-code-inner js-file-line">Single Inheritance – where a derived class acquires the members of a single super class.</td>
        </tr>
        <tr>
          <td id="L1610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1610"></td>
          <td id="LC1610" class="blob-code blob-code-inner js-file-line">Multi-level inheritance – a derived class d1 in inherited from base class base1, and d2 are inherited from base2.</td>
        </tr>
        <tr>
          <td id="L1611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1611"></td>
          <td id="LC1611" class="blob-code blob-code-inner js-file-line">Hierarchical inheritance – from one base class you can inherit any number of child classes</td>
        </tr>
        <tr>
          <td id="L1612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1612"></td>
          <td id="LC1612" class="blob-code blob-code-inner js-file-line">Multiple inheritance – a derived class is inherited from more than one base class.</td>
        </tr>
        <tr>
          <td id="L1613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1613"></td>
          <td id="LC1613" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1614"></td>
          <td id="LC1614" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1615"></td>
          <td id="LC1615" class="blob-code blob-code-inner js-file-line">164. How are classes created in Python?</td>
        </tr>
        <tr>
          <td id="L1616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1616"></td>
          <td id="LC1616" class="blob-code blob-code-inner js-file-line">Ans: Class in Python is created using the class keyword.</td>
        </tr>
        <tr>
          <td id="L1617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1617"></td>
          <td id="LC1617" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1618"></td>
          <td id="LC1618" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L1619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1619"></td>
          <td id="LC1619" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1620"></td>
          <td id="LC1620" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1621"></td>
          <td id="LC1621" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1622"></td>
          <td id="LC1622" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1623"></td>
          <td id="LC1623" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1624"></td>
          <td id="LC1624" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1625"></td>
          <td id="LC1625" class="blob-code blob-code-inner js-file-line">class Employee:</td>
        </tr>
        <tr>
          <td id="L1626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1626"></td>
          <td id="LC1626" class="blob-code blob-code-inner js-file-line">def __init__(self, name):</td>
        </tr>
        <tr>
          <td id="L1627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1627"></td>
          <td id="LC1627" class="blob-code blob-code-inner js-file-line">self.name = name</td>
        </tr>
        <tr>
          <td id="L1628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1628"></td>
          <td id="LC1628" class="blob-code blob-code-inner js-file-line">E1=Employee(&quot;abc&quot;)</td>
        </tr>
        <tr>
          <td id="L1629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1629"></td>
          <td id="LC1629" class="blob-code blob-code-inner js-file-line">print(E1.name)</td>
        </tr>
        <tr>
          <td id="L1630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1630"></td>
          <td id="LC1630" class="blob-code blob-code-inner js-file-line">Output: abc</td>
        </tr>
        <tr>
          <td id="L1631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1631"></td>
          <td id="LC1631" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1632"></td>
          <td id="LC1632" class="blob-code blob-code-inner js-file-line">165. What is monkey patching in Python?</td>
        </tr>
        <tr>
          <td id="L1633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1633"></td>
          <td id="LC1633" class="blob-code blob-code-inner js-file-line">Ans: In Python, the term monkey patch only refers to dynamic modifications of a class or module at run-time.</td>
        </tr>
        <tr>
          <td id="L1634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1634"></td>
          <td id="LC1634" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1635"></td>
          <td id="LC1635" class="blob-code blob-code-inner js-file-line">Consider the below example:</td>
        </tr>
        <tr>
          <td id="L1636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1636"></td>
          <td id="LC1636" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1637"></td>
          <td id="LC1637" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1638"></td>
          <td id="LC1638" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1639"></td>
          <td id="LC1639" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1640"></td>
          <td id="LC1640" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1641"></td>
          <td id="LC1641" class="blob-code blob-code-inner js-file-line"># m.py</td>
        </tr>
        <tr>
          <td id="L1642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1642"></td>
          <td id="LC1642" class="blob-code blob-code-inner js-file-line">class MyClass:</td>
        </tr>
        <tr>
          <td id="L1643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1643"></td>
          <td id="LC1643" class="blob-code blob-code-inner js-file-line">def f(self):</td>
        </tr>
        <tr>
          <td id="L1644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1644"></td>
          <td id="LC1644" class="blob-code blob-code-inner js-file-line">print &quot;f()&quot;</td>
        </tr>
        <tr>
          <td id="L1645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1645"></td>
          <td id="LC1645" class="blob-code blob-code-inner js-file-line">We can then run the monkey-patch testing like this:</td>
        </tr>
        <tr>
          <td id="L1646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1646"></td>
          <td id="LC1646" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1647"></td>
          <td id="LC1647" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1648"></td>
          <td id="LC1648" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1649"></td>
          <td id="LC1649" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1650"></td>
          <td id="LC1650" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1651"></td>
          <td id="LC1651" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1652"></td>
          <td id="LC1652" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L1653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1653"></td>
          <td id="LC1653" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L1654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1654"></td>
          <td id="LC1654" class="blob-code blob-code-inner js-file-line">import m</td>
        </tr>
        <tr>
          <td id="L1655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1655"></td>
          <td id="LC1655" class="blob-code blob-code-inner js-file-line">def monkey_f(self):</td>
        </tr>
        <tr>
          <td id="L1656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1656"></td>
          <td id="LC1656" class="blob-code blob-code-inner js-file-line">print &quot;monkey_f()&quot;</td>
        </tr>
        <tr>
          <td id="L1657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1657"></td>
          <td id="LC1657" class="blob-code blob-code-inner js-file-line">m.MyClass.f = monkey_f</td>
        </tr>
        <tr>
          <td id="L1658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1658"></td>
          <td id="LC1658" class="blob-code blob-code-inner js-file-line">obj = m.MyClass()</td>
        </tr>
        <tr>
          <td id="L1659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1659"></td>
          <td id="LC1659" class="blob-code blob-code-inner js-file-line">obj.f()</td>
        </tr>
        <tr>
          <td id="L1660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1660"></td>
          <td id="LC1660" class="blob-code blob-code-inner js-file-line">The output will be as below:</td>
        </tr>
        <tr>
          <td id="L1661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1661"></td>
          <td id="LC1661" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1662"></td>
          <td id="LC1662" class="blob-code blob-code-inner js-file-line">monkey_f()</td>
        </tr>
        <tr>
          <td id="L1663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1663"></td>
          <td id="LC1663" class="blob-code blob-code-inner js-file-line">As we can see, we did make some changes in the behavior of f() in MyClass using the function we defined, monkey_f(), outside of the module m.</td>
        </tr>
        <tr>
          <td id="L1664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1664"></td>
          <td id="LC1664" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1665"></td>
          <td id="LC1665" class="blob-code blob-code-inner js-file-line">166. Does python support multiple inheritance?</td>
        </tr>
        <tr>
          <td id="L1666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1666"></td>
          <td id="LC1666" class="blob-code blob-code-inner js-file-line">Ans: Multiple inheritance means that a class can be derived from more than one parent classes. Python does support multiple inheritance, unlike Java.</td>
        </tr>
        <tr>
          <td id="L1667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1667"></td>
          <td id="LC1667" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1668"></td>
          <td id="LC1668" class="blob-code blob-code-inner js-file-line">167. What is Polymorphism in Python?</td>
        </tr>
        <tr>
          <td id="L1669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1669"></td>
          <td id="LC1669" class="blob-code blob-code-inner js-file-line">Ans: Polymorphism means the ability to take multiple forms. So, for instance, if the parent class has a method named ABC then the child class also can have a method with the same name ABC having its own parameters and variables. Python allows polymorphism.</td>
        </tr>
        <tr>
          <td id="L1670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1670"></td>
          <td id="LC1670" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1671"></td>
          <td id="LC1671" class="blob-code blob-code-inner js-file-line">168. Define encapsulation in Python?</td>
        </tr>
        <tr>
          <td id="L1672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1672"></td>
          <td id="LC1672" class="blob-code blob-code-inner js-file-line">Ans: Encapsulation means binding the code and the data together. A Python class in an example of encapsulation.</td>
        </tr>
        <tr>
          <td id="L1673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1673"></td>
          <td id="LC1673" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1674"></td>
          <td id="LC1674" class="blob-code blob-code-inner js-file-line">169. How do you do data abstraction in Python?</td>
        </tr>
        <tr>
          <td id="L1675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1675"></td>
          <td id="LC1675" class="blob-code blob-code-inner js-file-line">Ans: Data Abstraction is providing only the required details and hiding the implementation from the world. It can be achieved in Python by using interfaces and abstract classes.</td>
        </tr>
        <tr>
          <td id="L1676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1676"></td>
          <td id="LC1676" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1677"></td>
          <td id="LC1677" class="blob-code blob-code-inner js-file-line">170.Does python make use of access specifiers?</td>
        </tr>
        <tr>
          <td id="L1678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1678"></td>
          <td id="LC1678" class="blob-code blob-code-inner js-file-line">Ans: Python does not deprive access to an instance variable or function. Python lays down the concept of prefixing the name of the variable, function or method with a single or double underscore to imitate the behavior of protected and private access specifiers.</td>
        </tr>
        <tr>
          <td id="L1679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1679"></td>
          <td id="LC1679" class="blob-code blob-code-inner js-file-line">171. How to create an empty class in Python?</td>
        </tr>
        <tr>
          <td id="L1680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1680"></td>
          <td id="LC1680" class="blob-code blob-code-inner js-file-line">Ans: An empty class is a class that does not have any code defined within its block. It can be created using the pass keyword. However, you can create objects of this class outside the class itself. IN PYTHON THE PASS command does nothing when its executed. it’s a null statement.</td>
        </tr>
        <tr>
          <td id="L1681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1681"></td>
          <td id="LC1681" class="blob-code blob-code-inner js-file-line">For example-</td>
        </tr>
        <tr>
          <td id="L1682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1682"></td>
          <td id="LC1682" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L1683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1683"></td>
          <td id="LC1683" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L1684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1684"></td>
          <td id="LC1684" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L1685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1685"></td>
          <td id="LC1685" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L1686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1686"></td>
          <td id="LC1686" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L1687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1687"></td>
          <td id="LC1687" class="blob-code blob-code-inner js-file-line">class a:</td>
        </tr>
        <tr>
          <td id="L1688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1688"></td>
          <td id="LC1688" class="blob-code blob-code-inner js-file-line">  &amp;nbsp; pass</td>
        </tr>
        <tr>
          <td id="L1689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1689"></td>
          <td id="LC1689" class="blob-code blob-code-inner js-file-line">obj=a()</td>
        </tr>
        <tr>
          <td id="L1690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1690"></td>
          <td id="LC1690" class="blob-code blob-code-inner js-file-line">obj.name=&quot;xyz&quot;</td>
        </tr>
        <tr>
          <td id="L1691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1691"></td>
          <td id="LC1691" class="blob-code blob-code-inner js-file-line">print(&quot;Name = &quot;,obj.name)</td>
        </tr>
        <tr>
          <td id="L1692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1692"></td>
          <td id="LC1692" class="blob-code blob-code-inner js-file-line">Output: </td>
        </tr>
        <tr>
          <td id="L1693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1693"></td>
          <td id="LC1693" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1694"></td>
          <td id="LC1694" class="blob-code blob-code-inner js-file-line">Name =  xyz</td>
        </tr>
        <tr>
          <td id="L1695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1695"></td>
          <td id="LC1695" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1696"></td>
          <td id="LC1696" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1697"></td>
          <td id="LC1697" class="blob-code blob-code-inner js-file-line">172.What’s The Process To Get The Home Directory Using ‘~’ In Python?</td>
        </tr>
        <tr>
          <td id="L1698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1698"></td>
          <td id="LC1698" class="blob-code blob-code-inner js-file-line">Ans: You need to import the os module, and then just a single line would do the rest.</td>
        </tr>
        <tr>
          <td id="L1699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1699"></td>
          <td id="LC1699" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1700"></td>
          <td id="LC1700" class="blob-code blob-code-inner js-file-line">import os</td>
        </tr>
        <tr>
          <td id="L1701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1701"></td>
          <td id="LC1701" class="blob-code blob-code-inner js-file-line">print (os.path.expanduser(&#39;~&#39;))</td>
        </tr>
        <tr>
          <td id="L1702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1702"></td>
          <td id="LC1702" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L1703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1703"></td>
          <td id="LC1703" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1704"></td>
          <td id="LC1704" class="blob-code blob-code-inner js-file-line">/home/runner</td>
        </tr>
        <tr>
          <td id="L1705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1705"></td>
          <td id="LC1705" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1706"></td>
          <td id="LC1706" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1707"></td>
          <td id="LC1707" class="blob-code blob-code-inner js-file-line">173.How To Find Bugs Or Perform Static Analysis In A Python Application?</td>
        </tr>
        <tr>
          <td id="L1708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1708"></td>
          <td id="LC1708" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1709"></td>
          <td id="LC1709" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1710"></td>
          <td id="LC1710" class="blob-code blob-code-inner js-file-line">You can use PyChecker, which is a static analyzer. It identifies the bugs in Python project and also reveals the style and complexity related bugs.</td>
        </tr>
        <tr>
          <td id="L1711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1711"></td>
          <td id="LC1711" class="blob-code blob-code-inner js-file-line">Another tool is Pylint, which checks whether the Python module satisfies the coding standard.</td>
        </tr>
        <tr>
          <td id="L1712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1712"></td>
          <td id="LC1712" class="blob-code blob-code-inner js-file-line">174.When Is The Python Decorator Used?</td>
        </tr>
        <tr>
          <td id="L1713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1713"></td>
          <td id="LC1713" class="blob-code blob-code-inner js-file-line">Ans: Python decorator is a relative change that you do in Python syntax to adjust the functions quickly.</td>
        </tr>
        <tr>
          <td id="L1714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1714"></td>
          <td id="LC1714" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1715"></td>
          <td id="LC1715" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1716"></td>
          <td id="LC1716" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1717"></td>
          <td id="LC1717" class="blob-code blob-code-inner js-file-line">175.Can Python be used for web client and web server side programming? And which one is best suited to Python?</td>
        </tr>
        <tr>
          <td id="L1718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1718"></td>
          <td id="LC1718" class="blob-code blob-code-inner js-file-line">Ans:  Python is best suited for web server-side application development due to its vast set of features for creating business logic, database interactions, web server hosting etc.</td>
        </tr>
        <tr>
          <td id="L1719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1719"></td>
          <td id="LC1719" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1720"></td>
          <td id="LC1720" class="blob-code blob-code-inner js-file-line">However, Python can be used as a web client-side application which needs some conversions for a browser to interpret the client side logic. Also, note that Python can be used to create desktop applications which can run as a standalone application such as utilities for test automation.</td>
        </tr>
        <tr>
          <td id="L1721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1721"></td>
          <td id="LC1721" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1722"></td>
          <td id="LC1722" class="blob-code blob-code-inner js-file-line">176. Mention at least 3-4 benefits of using Python over the other scripting languages such as Javascript.</td>
        </tr>
        <tr>
          <td id="L1723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1723"></td>
          <td id="LC1723" class="blob-code blob-code-inner js-file-line">Ans: Enlisted below are some of the benefits of using Python.</td>
        </tr>
        <tr>
          <td id="L1724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1724"></td>
          <td id="LC1724" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1725"></td>
          <td id="LC1725" class="blob-code blob-code-inner js-file-line">Application development is faster and easy.</td>
        </tr>
        <tr>
          <td id="L1726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1726"></td>
          <td id="LC1726" class="blob-code blob-code-inner js-file-line">Extensive support of modules for any kind of application development including data analytics/machine learning/math-intensive applications.</td>
        </tr>
        <tr>
          <td id="L1727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1727"></td>
          <td id="LC1727" class="blob-code blob-code-inner js-file-line">An excellent support community to get your answers.</td>
        </tr>
        <tr>
          <td id="L1728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1728"></td>
          <td id="LC1728" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1729"></td>
          <td id="LC1729" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1730"></td>
          <td id="LC1730" class="blob-code blob-code-inner js-file-line">177.What is the type () in Python?</td>
        </tr>
        <tr>
          <td id="L1731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1731"></td>
          <td id="LC1731" class="blob-code blob-code-inner js-file-line">Ans: The built-in method which decides the types of the variable at the program runtime is known as type() in Python. When a single argument is passed through it, then it returns given object type. When 3 arguments pass through this, then it returns a new object type.</td>
        </tr>
        <tr>
          <td id="L1732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1732"></td>
          <td id="LC1732" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1733"></td>
          <td id="LC1733" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1734"></td>
          <td id="LC1734" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1735"></td>
          <td id="LC1735" class="blob-code blob-code-inner js-file-line">178.What are the key points of Python?</td>
        </tr>
        <tr>
          <td id="L1736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1736"></td>
          <td id="LC1736" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1737"></td>
          <td id="LC1737" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1738"></td>
          <td id="LC1738" class="blob-code blob-code-inner js-file-line">Similar to PERL and PHP, Python is processed by the interpreter at runtime. Python supports Object-Oriented style of programming, which encapsulates code within objects.</td>
        </tr>
        <tr>
          <td id="L1739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1739"></td>
          <td id="LC1739" class="blob-code blob-code-inner js-file-line">Derived from other languages, such as ABC, C, C++, Modula-3, SmallTalk, Algol-68, Unix shell, and other scripting languages.</td>
        </tr>
        <tr>
          <td id="L1740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1740"></td>
          <td id="LC1740" class="blob-code blob-code-inner js-file-line">Python is copyrighted, and its source code is available under the GNU General Public License (GPL).</td>
        </tr>
        <tr>
          <td id="L1741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1741"></td>
          <td id="LC1741" class="blob-code blob-code-inner js-file-line">Supports the development of many applications, from text processing to games.</td>
        </tr>
        <tr>
          <td id="L1742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1742"></td>
          <td id="LC1742" class="blob-code blob-code-inner js-file-line">Works for scripting, embedded code and compiled the code.</td>
        </tr>
        <tr>
          <td id="L1743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1743"></td>
          <td id="LC1743" class="blob-code blob-code-inner js-file-line">Detailed</td>
        </tr>
        <tr>
          <td id="L1744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1744"></td>
          <td id="LC1744" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1745"></td>
          <td id="LC1745" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1746"></td>
          <td id="LC1746" class="blob-code blob-code-inner js-file-line">179.How is memory managed in Python?</td>
        </tr>
        <tr>
          <td id="L1747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1747"></td>
          <td id="LC1747" class="blob-code blob-code-inner js-file-line">Ans: Memory is managed by the private heap space. All objects and data structures are located in a private heap, and the programmer has no access to it. Only the interpreter has access. Python memory manager allocates heap space for objects. The programmer is given access to some tools for coding by the core API. The inbuilt garbage collector recycles the unused memory and frees up the memory to make it available for the heap space.</td>
        </tr>
        <tr>
          <td id="L1748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1748"></td>
          <td id="LC1748" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1749"></td>
          <td id="LC1749" class="blob-code blob-code-inner js-file-line">180.What tools can help find bugs or perform the static analysis?</td>
        </tr>
        <tr>
          <td id="L1750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1750"></td>
          <td id="LC1750" class="blob-code blob-code-inner js-file-line">Ans: For performing Static Analysis, PyChecker is a tool that detects the bugs in source code and warns the programmer about the style and complexity. Pylint is another tool that authenticates whether the module meets the coding standard.</td>
        </tr>
        <tr>
          <td id="L1751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1751"></td>
          <td id="LC1751" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1752"></td>
          <td id="LC1752" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1753"></td>
          <td id="LC1753" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1754"></td>
          <td id="LC1754" class="blob-code blob-code-inner js-file-line"> 181.How Does Python Handle Memory Management?</td>
        </tr>
        <tr>
          <td id="L1755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1755"></td>
          <td id="LC1755" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1756"></td>
          <td id="LC1756" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1757"></td>
          <td id="LC1757" class="blob-code blob-code-inner js-file-line">Python uses private heaps to maintain its memory. So the heap holds all the Python objects and the data structures. This area is only accessible to the Python interpreter; programmers can’t use it.</td>
        </tr>
        <tr>
          <td id="L1758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1758"></td>
          <td id="LC1758" class="blob-code blob-code-inner js-file-line">And it’s the Python memory manager that handles the Private heap. It does the required allocation of the memory for Python objects.</td>
        </tr>
        <tr>
          <td id="L1759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1759"></td>
          <td id="LC1759" class="blob-code blob-code-inner js-file-line">Python employs a built-in garbage collector, which salvages all the unused memory and offloads it to the heap space.</td>
        </tr>
        <tr>
          <td id="L1760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1760"></td>
          <td id="LC1760" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1761"></td>
          <td id="LC1761" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1762"></td>
          <td id="LC1762" class="blob-code blob-code-inner js-file-line"> 182.What Are The Principal Differences Between The Lambda And Def?</td>
        </tr>
        <tr>
          <td id="L1763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1763"></td>
          <td id="LC1763" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1764"></td>
          <td id="LC1764" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1765"></td>
          <td id="LC1765" class="blob-code blob-code-inner js-file-line">Lambda Vs. Def.</td>
        </tr>
        <tr>
          <td id="L1766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1766"></td>
          <td id="LC1766" class="blob-code blob-code-inner js-file-line">Def can hold multiple expressions while lambda is a uni-expression function.</td>
        </tr>
        <tr>
          <td id="L1767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1767"></td>
          <td id="LC1767" class="blob-code blob-code-inner js-file-line">Def generates a function and designates a name to call it later. Lambda forms a function object and returns it.</td>
        </tr>
        <tr>
          <td id="L1768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1768"></td>
          <td id="LC1768" class="blob-code blob-code-inner js-file-line">Def can have a return statement. Lambda can’t have return statements.</td>
        </tr>
        <tr>
          <td id="L1769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1769"></td>
          <td id="LC1769" class="blob-code blob-code-inner js-file-line">Lambda supports to get used inside a list and dictionary.</td>
        </tr>
        <tr>
          <td id="L1770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1770"></td>
          <td id="LC1770" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1771"></td>
          <td id="LC1771" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1772"></td>
          <td id="LC1772" class="blob-code blob-code-inner js-file-line">183.Write A Reg Expression That Confirms An Email Id Using The Python Reg Expression Module “Re”?</td>
        </tr>
        <tr>
          <td id="L1773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1773"></td>
          <td id="LC1773" class="blob-code blob-code-inner js-file-line">Ans: Python has a regular expression module “re.”</td>
        </tr>
        <tr>
          <td id="L1774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1774"></td>
          <td id="LC1774" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1775"></td>
          <td id="LC1775" class="blob-code blob-code-inner js-file-line">Check out the “re” expression that can check the email id for .com and .co.in subdomain.</td>
        </tr>
        <tr>
          <td id="L1776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1776"></td>
          <td id="LC1776" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1777"></td>
          <td id="LC1777" class="blob-code blob-code-inner js-file-line">import re</td>
        </tr>
        <tr>
          <td id="L1778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1778"></td>
          <td id="LC1778" class="blob-code blob-code-inner js-file-line">print(re.search(r&quot;[0-9a-zA-Z.]+@[a-zA-Z]+\.(com|co\.in)$&quot;,&quot;micheal.pages@mp.com&quot;))</td>
        </tr>
        <tr>
          <td id="L1779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1779"></td>
          <td id="LC1779" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1780"></td>
          <td id="LC1780" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1781"></td>
          <td id="LC1781" class="blob-code blob-code-inner js-file-line">184.What Do You Think Is The Output Of The Following Code Fragment? Is There Any Error In The Code?</td>
        </tr>
        <tr>
          <td id="L1782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1782"></td>
          <td id="LC1782" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L1783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1783"></td>
          <td id="LC1783" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1784"></td>
          <td id="LC1784" class="blob-code blob-code-inner js-file-line">list = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</td>
        </tr>
        <tr>
          <td id="L1785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1785"></td>
          <td id="LC1785" class="blob-code blob-code-inner js-file-line">print (list[10:])</td>
        </tr>
        <tr>
          <td id="L1786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1786"></td>
          <td id="LC1786" class="blob-code blob-code-inner js-file-line">The result of the above lines of code is []. There won’t be any error like an IndexError.</td>
        </tr>
        <tr>
          <td id="L1787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1787"></td>
          <td id="LC1787" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1788"></td>
          <td id="LC1788" class="blob-code blob-code-inner js-file-line">You should know that trying to fetch a member from the list using an index that exceeds the member count (for example, attempting to access list[10] as given in the question) would yield an IndexError. By the way, retrieving only a slice at the starting index that surpasses the no. of items in the list won’t result in an IndexError. It will just return an empty list.</td>
        </tr>
        <tr>
          <td id="L1789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1789"></td>
          <td id="LC1789" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1790"></td>
          <td id="LC1790" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1791"></td>
          <td id="LC1791" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1792"></td>
          <td id="LC1792" class="blob-code blob-code-inner js-file-line">185. Is There A Switch Or Case Statement In Python? If Not Then What Is The Reason For The Same?</td>
        </tr>
        <tr>
          <td id="L1793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1793"></td>
          <td id="LC1793" class="blob-code blob-code-inner js-file-line">Ans: No, Python does not have a Switch statement, but you can write a Switch function and then use it.</td>
        </tr>
        <tr>
          <td id="L1794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1794"></td>
          <td id="LC1794" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1795"></td>
          <td id="LC1795" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1796"></td>
          <td id="LC1796" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1797"></td>
          <td id="LC1797" class="blob-code blob-code-inner js-file-line">186.What Is A Built-In Function That Python Uses To Iterate Over A Number Sequence?</td>
        </tr>
        <tr>
          <td id="L1798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1798"></td>
          <td id="LC1798" class="blob-code blob-code-inner js-file-line">Ans: Range() generates a list of numbers, which is used to iterate over for loops.</td>
        </tr>
        <tr>
          <td id="L1799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1799"></td>
          <td id="LC1799" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1800"></td>
          <td id="LC1800" class="blob-code blob-code-inner js-file-line">for i in range(5):</td>
        </tr>
        <tr>
          <td id="L1801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1801"></td>
          <td id="LC1801" class="blob-code blob-code-inner js-file-line">    print(i)</td>
        </tr>
        <tr>
          <td id="L1802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1802"></td>
          <td id="LC1802" class="blob-code blob-code-inner js-file-line">The range() function accompanies two sets of parameters.</td>
        </tr>
        <tr>
          <td id="L1803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1803"></td>
          <td id="LC1803" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1804"></td>
          <td id="LC1804" class="blob-code blob-code-inner js-file-line">range(stop)</td>
        </tr>
        <tr>
          <td id="L1805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1805"></td>
          <td id="LC1805" class="blob-code blob-code-inner js-file-line">stop: It is the no. of integers to generate and starts from zero. eg. range(3) == [0, 1, 2].</td>
        </tr>
        <tr>
          <td id="L1806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1806"></td>
          <td id="LC1806" class="blob-code blob-code-inner js-file-line">range([start], stop[, step])</td>
        </tr>
        <tr>
          <td id="L1807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1807"></td>
          <td id="LC1807" class="blob-code blob-code-inner js-file-line">Start: It is the starting no. of the sequence.</td>
        </tr>
        <tr>
          <td id="L1808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1808"></td>
          <td id="LC1808" class="blob-code blob-code-inner js-file-line">Stop: It specifies the upper limit of the sequence.</td>
        </tr>
        <tr>
          <td id="L1809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1809"></td>
          <td id="LC1809" class="blob-code blob-code-inner js-file-line">Step: It is the incrementing factor for generating the sequence.</td>
        </tr>
        <tr>
          <td id="L1810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1810"></td>
          <td id="LC1810" class="blob-code blob-code-inner js-file-line">Points to note:</td>
        </tr>
        <tr>
          <td id="L1811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1811"></td>
          <td id="LC1811" class="blob-code blob-code-inner js-file-line">Only integer arguments are allowed.</td>
        </tr>
        <tr>
          <td id="L1812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1812"></td>
          <td id="LC1812" class="blob-code blob-code-inner js-file-line">Parameters can be positive or negative.</td>
        </tr>
        <tr>
          <td id="L1813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1813"></td>
          <td id="LC1813" class="blob-code blob-code-inner js-file-line">The range() function in Python starts from the zeroth index.</td>
        </tr>
        <tr>
          <td id="L1814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1814"></td>
          <td id="LC1814" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1815"></td>
          <td id="LC1815" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1816"></td>
          <td id="LC1816" class="blob-code blob-code-inner js-file-line">187.What Are The Optional Statements Possible Inside A Try-Except Block In Python?</td>
        </tr>
        <tr>
          <td id="L1817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1817"></td>
          <td id="LC1817" class="blob-code blob-code-inner js-file-line">Ans: There are two optional clauses you can use in the try-except block.</td>
        </tr>
        <tr>
          <td id="L1818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1818"></td>
          <td id="LC1818" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1819"></td>
          <td id="LC1819" class="blob-code blob-code-inner js-file-line">The “else” clause</td>
        </tr>
        <tr>
          <td id="L1820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1820"></td>
          <td id="LC1820" class="blob-code blob-code-inner js-file-line">It is useful if you want to run a piece of code when the try block doesn’t create an exception.</td>
        </tr>
        <tr>
          <td id="L1821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1821"></td>
          <td id="LC1821" class="blob-code blob-code-inner js-file-line">The “finally” clause</td>
        </tr>
        <tr>
          <td id="L1822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1822"></td>
          <td id="LC1822" class="blob-code blob-code-inner js-file-line">It is useful when you want to execute some steps which run, irrespective of whether there occurs an exception or not.</td>
        </tr>
        <tr>
          <td id="L1823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1823"></td>
          <td id="LC1823" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1824"></td>
          <td id="LC1824" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1825"></td>
          <td id="LC1825" class="blob-code blob-code-inner js-file-line">188.What Is A String In Python?</td>
        </tr>
        <tr>
          <td id="L1826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1826"></td>
          <td id="LC1826" class="blob-code blob-code-inner js-file-line">Ans: A string in Python is a sequence of alpha-numeric characters. They are immutable objects. It means that they don’t allow modification once they get assigned a value. Python provides several methods, such as join(), replace(), or split() to alter strings. But none of these change the original object.</td>
        </tr>
        <tr>
          <td id="L1827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1827"></td>
          <td id="LC1827" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1828"></td>
          <td id="LC1828" class="blob-code blob-code-inner js-file-line">189. What Is Slicing In Python?</td>
        </tr>
        <tr>
          <td id="L1829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1829"></td>
          <td id="LC1829" class="blob-code blob-code-inner js-file-line">Ans: Slicing is a string operation for extracting a part of the string, or some part of a list. In Python, a string (say text) begins at index 0, and the nth character stores at position text[n-1]. Python can also perform reverse indexing, i.e., in the backward direction, with the help of negative numbers. In Python, the slice() is also a constructor function which generates a slice object. The result is a set of indices mentioned by range(start, stop, step). The slice() method allows three parameters. 1. start – starting number for the slicing to begin. 2. stop – the number which indicates the end of slicing. 3. step – the value to increment after each index (default = 1).</td>
        </tr>
        <tr>
          <td id="L1830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1830"></td>
          <td id="LC1830" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1831"></td>
          <td id="LC1831" class="blob-code blob-code-inner js-file-line">190. What Is %S In Python?</td>
        </tr>
        <tr>
          <td id="L1832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1832"></td>
          <td id="LC1832" class="blob-code blob-code-inner js-file-line">Ans: Python has support for formatting any value into a string. It may contain quite complex expressions.</td>
        </tr>
        <tr>
          <td id="L1833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1833"></td>
          <td id="LC1833" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1834"></td>
          <td id="LC1834" class="blob-code blob-code-inner js-file-line">One of the common usages is to push values into a string with the %s format specifier. The formatting operation in Python has the comparable syntax as the C function printf() has.</td>
        </tr>
        <tr>
          <td id="L1835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1835"></td>
          <td id="LC1835" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1836"></td>
          <td id="LC1836" class="blob-code blob-code-inner js-file-line">191.What Is The Index In Python?</td>
        </tr>
        <tr>
          <td id="L1837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1837"></td>
          <td id="LC1837" class="blob-code blob-code-inner js-file-line">Ans: An index is an integer data type which denotes a position within an ordered list or a string.</td>
        </tr>
        <tr>
          <td id="L1838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1838"></td>
          <td id="LC1838" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1839"></td>
          <td id="LC1839" class="blob-code blob-code-inner js-file-line">In Python, strings are also lists of characters. We can access them using the index which begins from zero and goes to the length minus one.</td>
        </tr>
        <tr>
          <td id="L1840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1840"></td>
          <td id="LC1840" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1841"></td>
          <td id="LC1841" class="blob-code blob-code-inner js-file-line">For example, in the string “Program,” the indexing happens like this:</td>
        </tr>
        <tr>
          <td id="L1842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1842"></td>
          <td id="LC1842" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1843"></td>
          <td id="LC1843" class="blob-code blob-code-inner js-file-line">Program 0 1 2 3 4 5</td>
        </tr>
        <tr>
          <td id="L1844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1844"></td>
          <td id="LC1844" class="blob-code blob-code-inner js-file-line">192. What Is Docstring In Python?</td>
        </tr>
        <tr>
          <td id="L1845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1845"></td>
          <td id="LC1845" class="blob-code blob-code-inner js-file-line">Ans: A docstring is a unique text that happens to be the first statement in the following Python constructs:</td>
        </tr>
        <tr>
          <td id="L1846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1846"></td>
          <td id="LC1846" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1847"></td>
          <td id="LC1847" class="blob-code blob-code-inner js-file-line">Module, Function, Class, or Method definition.</td>
        </tr>
        <tr>
          <td id="L1848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1848"></td>
          <td id="LC1848" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1849"></td>
          <td id="LC1849" class="blob-code blob-code-inner js-file-line">A docstring gets added to the __doc__ attribute of the string object.</td>
        </tr>
        <tr>
          <td id="L1850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1850"></td>
          <td id="LC1850" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1851"></td>
          <td id="LC1851" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1852"></td>
          <td id="LC1852" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1853"></td>
          <td id="LC1853" class="blob-code blob-code-inner js-file-line">193.What Is A Function In Python Programming?</td>
        </tr>
        <tr>
          <td id="L1854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1854"></td>
          <td id="LC1854" class="blob-code blob-code-inner js-file-line">Ans: A function is an object which represents a block of code and is a reusable entity. It brings modularity to a program and a higher degree of code reusability.</td>
        </tr>
        <tr>
          <td id="L1855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1855"></td>
          <td id="LC1855" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1856"></td>
          <td id="LC1856" class="blob-code blob-code-inner js-file-line">Python has given us many built-in functions such as print() and provides the ability to create user-defined functions.</td>
        </tr>
        <tr>
          <td id="L1857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1857"></td>
          <td id="LC1857" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1858"></td>
          <td id="LC1858" class="blob-code blob-code-inner js-file-line">194. How Many Basic Types Of Functions Are Available In Python?</td>
        </tr>
        <tr>
          <td id="L1859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1859"></td>
          <td id="LC1859" class="blob-code blob-code-inner js-file-line">Ans: Python gives us two basic types of functions.</td>
        </tr>
        <tr>
          <td id="L1860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1860"></td>
          <td id="LC1860" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1861"></td>
          <td id="LC1861" class="blob-code blob-code-inner js-file-line">1. Built-in, and</td>
        </tr>
        <tr>
          <td id="L1862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1862"></td>
          <td id="LC1862" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1863"></td>
          <td id="LC1863" class="blob-code blob-code-inner js-file-line">2. User-defined.</td>
        </tr>
        <tr>
          <td id="L1864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1864"></td>
          <td id="LC1864" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1865"></td>
          <td id="LC1865" class="blob-code blob-code-inner js-file-line">The built-in functions happen to be part of the Python language. Some of these are print(), dir(), len(), and abs() etc.</td>
        </tr>
        <tr>
          <td id="L1866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1866"></td>
          <td id="LC1866" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1867"></td>
          <td id="LC1867" class="blob-code blob-code-inner js-file-line">195. How Do We Write A Function In Python?</td>
        </tr>
        <tr>
          <td id="L1868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1868"></td>
          <td id="LC1868" class="blob-code blob-code-inner js-file-line">Ans: We can create a Python function in the following manner.</td>
        </tr>
        <tr>
          <td id="L1869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1869"></td>
          <td id="LC1869" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1870"></td>
          <td id="LC1870" class="blob-code blob-code-inner js-file-line">Step-1: to begin the function, start writing with the keyword def and then mention the function name.</td>
        </tr>
        <tr>
          <td id="L1871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1871"></td>
          <td id="LC1871" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1872"></td>
          <td id="LC1872" class="blob-code blob-code-inner js-file-line">Step-2: We can now pass the arguments and enclose them using the parentheses. A colon, in the end, marks the end of the function header.</td>
        </tr>
        <tr>
          <td id="L1873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1873"></td>
          <td id="LC1873" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1874"></td>
          <td id="LC1874" class="blob-code blob-code-inner js-file-line">Step-3: After pressing an enter, we can add the desired Python statements for execution.</td>
        </tr>
        <tr>
          <td id="L1875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1875"></td>
          <td id="LC1875" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1876"></td>
          <td id="LC1876" class="blob-code blob-code-inner js-file-line">196. What Is A Function Call Or A Callable Object In Python?</td>
        </tr>
        <tr>
          <td id="L1877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1877"></td>
          <td id="LC1877" class="blob-code blob-code-inner js-file-line">Ans: A function in Python gets treated as a callable object. It can allow some arguments and also return a value or multiple values in the form of a tuple. Apart from the function, Python has other constructs, such as classes or the class instances which fits in the same category.</td>
        </tr>
        <tr>
          <td id="L1878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1878"></td>
          <td id="LC1878" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1879"></td>
          <td id="LC1879" class="blob-code blob-code-inner js-file-line">197. What Is The Return Keyword Used For In Python?</td>
        </tr>
        <tr>
          <td id="L1880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1880"></td>
          <td id="LC1880" class="blob-code blob-code-inner js-file-line">Ans: The purpose of a function is to receive the inputs and return some output.</td>
        </tr>
        <tr>
          <td id="L1881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1881"></td>
          <td id="LC1881" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1882"></td>
          <td id="LC1882" class="blob-code blob-code-inner js-file-line">The return is a Python statement which we can use in a function for sending a value back to its caller.</td>
        </tr>
        <tr>
          <td id="L1883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1883"></td>
          <td id="LC1883" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1884"></td>
          <td id="LC1884" class="blob-code blob-code-inner js-file-line">198. What Is “Call By Value” In Python?</td>
        </tr>
        <tr>
          <td id="L1885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1885"></td>
          <td id="LC1885" class="blob-code blob-code-inner js-file-line">Ans: In call-by-value, the argument whether an expression or a value gets bound to the respective variable in the function.</td>
        </tr>
        <tr>
          <td id="L1886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1886"></td>
          <td id="LC1886" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1887"></td>
          <td id="LC1887" class="blob-code blob-code-inner js-file-line">Python will treat that variable as local in the function-level scope. Any changes made to that variable will remain local and will not reflect outside the function.</td>
        </tr>
        <tr>
          <td id="L1888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1888"></td>
          <td id="LC1888" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1889"></td>
          <td id="LC1889" class="blob-code blob-code-inner js-file-line">199. What Is “Call By Reference” In Python?</td>
        </tr>
        <tr>
          <td id="L1890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1890"></td>
          <td id="LC1890" class="blob-code blob-code-inner js-file-line">Ans: We use both “call-by-reference” and “pass-by-reference” interchangeably. When we pass an argument by reference, then it is available as an implicit reference to the function, rather than a simple copy. In such a case, any modification to the argument will also be visible to the caller.</td>
        </tr>
        <tr>
          <td id="L1891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1891"></td>
          <td id="LC1891" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1892"></td>
          <td id="LC1892" class="blob-code blob-code-inner js-file-line">This scheme also has the advantage of bringing more time and space efficiency because it leaves the need for creating local copies.</td>
        </tr>
        <tr>
          <td id="L1893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1893"></td>
          <td id="LC1893" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1894"></td>
          <td id="LC1894" class="blob-code blob-code-inner js-file-line">On the contrary, the disadvantage could be that a variable can get changed accidentally during a function call. Hence, the programmers need to handle in the code to avoid such uncertainty.</td>
        </tr>
        <tr>
          <td id="L1895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1895"></td>
          <td id="LC1895" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1896"></td>
          <td id="LC1896" class="blob-code blob-code-inner js-file-line">200. What Is The Return Value Of The Trunc() Function?</td>
        </tr>
        <tr>
          <td id="L1897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1897"></td>
          <td id="LC1897" class="blob-code blob-code-inner js-file-line">Ans: The Python trunc() function performs a mathematical operation to remove the decimal values from a particular expression and provides an integer value as its output.</td>
        </tr>
        <tr>
          <td id="L1898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1898"></td>
          <td id="LC1898" class="blob-code blob-code-inner js-file-line">201. Is It Mandatory For A Python Function To Return A Value?</td>
        </tr>
        <tr>
          <td id="L1899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1899"></td>
          <td id="LC1899" class="blob-code blob-code-inner js-file-line">Ans: It is not at all necessary for a function to return any value. However, if needed, we can use None as a return value.</td>
        </tr>
        <tr>
          <td id="L1900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1900"></td>
          <td id="LC1900" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1901"></td>
          <td id="LC1901" class="blob-code blob-code-inner js-file-line">202. What Does The Continue Do In Python?</td>
        </tr>
        <tr>
          <td id="L1902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1902"></td>
          <td id="LC1902" class="blob-code blob-code-inner js-file-line">Ans: The continue is a jump statement in Python which moves the control to execute the next iteration in a loop leaving all the remaining instructions in the block unexecuted.</td>
        </tr>
        <tr>
          <td id="L1903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1903"></td>
          <td id="LC1903" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1904"></td>
          <td id="LC1904" class="blob-code blob-code-inner js-file-line">The continue statement is applicable for both the “while” and “for” loops.</td>
        </tr>
        <tr>
          <td id="L1905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1905"></td>
          <td id="LC1905" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1906"></td>
          <td id="LC1906" class="blob-code blob-code-inner js-file-line">203. What Is The Purpose Of Id() Function In Python?</td>
        </tr>
        <tr>
          <td id="L1907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1907"></td>
          <td id="LC1907" class="blob-code blob-code-inner js-file-line">Ans: The id() is one of the built-in functions in Python.</td>
        </tr>
        <tr>
          <td id="L1908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1908"></td>
          <td id="LC1908" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1909"></td>
          <td id="LC1909" class="blob-code blob-code-inner js-file-line">Signature: id(object)</td>
        </tr>
        <tr>
          <td id="L1910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1910"></td>
          <td id="LC1910" class="blob-code blob-code-inner js-file-line">It accepts one parameter and returns a unique identifier associated with the input object.</td>
        </tr>
        <tr>
          <td id="L1911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1911"></td>
          <td id="LC1911" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1912"></td>
          <td id="LC1912" class="blob-code blob-code-inner js-file-line">204. What Does The *Args Do In Python?</td>
        </tr>
        <tr>
          <td id="L1913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1913"></td>
          <td id="LC1913" class="blob-code blob-code-inner js-file-line">Ans: We use *args as a parameter in the function header. It gives us the ability to pass N (variable) number of arguments.</td>
        </tr>
        <tr>
          <td id="L1914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1914"></td>
          <td id="LC1914" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1915"></td>
          <td id="LC1915" class="blob-code blob-code-inner js-file-line">Please note that this type of argument syntax doesn’t allow passing a named argument to the function.</td>
        </tr>
        <tr>
          <td id="L1916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1916"></td>
          <td id="LC1916" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1917"></td>
          <td id="LC1917" class="blob-code blob-code-inner js-file-line">Example of using the *args:</td>
        </tr>
        <tr>
          <td id="L1918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1918"></td>
          <td id="LC1918" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1919"></td>
          <td id="LC1919" class="blob-code blob-code-inner js-file-line"># Python code to demonstrate </td>
        </tr>
        <tr>
          <td id="L1920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1920"></td>
          <td id="LC1920" class="blob-code blob-code-inner js-file-line"># *args for dynamic arguments </td>
        </tr>
        <tr>
          <td id="L1921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1921"></td>
          <td id="LC1921" class="blob-code blob-code-inner js-file-line">def fn(*argList):  </td>
        </tr>
        <tr>
          <td id="L1922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1922"></td>
          <td id="LC1922" class="blob-code blob-code-inner js-file-line">    for argx in argList:  </td>
        </tr>
        <tr>
          <td id="L1923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1923"></td>
          <td id="LC1923" class="blob-code blob-code-inner js-file-line">        print (argx) </td>
        </tr>
        <tr>
          <td id="L1924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1924"></td>
          <td id="LC1924" class="blob-code blob-code-inner js-file-line">    </td>
        </tr>
        <tr>
          <td id="L1925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1925"></td>
          <td id="LC1925" class="blob-code blob-code-inner js-file-line">fn(&#39;I&#39;, &#39;am&#39;, &#39;Learning&#39;, &#39;Python&#39;)</td>
        </tr>
        <tr>
          <td id="L1926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1926"></td>
          <td id="LC1926" class="blob-code blob-code-inner js-file-line">The output:</td>
        </tr>
        <tr>
          <td id="L1927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1927"></td>
          <td id="LC1927" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1928"></td>
          <td id="LC1928" class="blob-code blob-code-inner js-file-line">I</td>
        </tr>
        <tr>
          <td id="L1929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1929"></td>
          <td id="LC1929" class="blob-code blob-code-inner js-file-line">am</td>
        </tr>
        <tr>
          <td id="L1930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1930"></td>
          <td id="LC1930" class="blob-code blob-code-inner js-file-line">Learning</td>
        </tr>
        <tr>
          <td id="L1931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1931"></td>
          <td id="LC1931" class="blob-code blob-code-inner js-file-line">Python</td>
        </tr>
        <tr>
          <td id="L1932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1932"></td>
          <td id="LC1932" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1933"></td>
          <td id="LC1933" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1934"></td>
          <td id="LC1934" class="blob-code blob-code-inner js-file-line">205.Does Python Have A Main() Method?</td>
        </tr>
        <tr>
          <td id="L1935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1935"></td>
          <td id="LC1935" class="blob-code blob-code-inner js-file-line">Ans: The main() is the entry point function which happens to be called first in most programming languages.</td>
        </tr>
        <tr>
          <td id="L1936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1936"></td>
          <td id="LC1936" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1937"></td>
          <td id="LC1937" class="blob-code blob-code-inner js-file-line">Since Python is interpreter-based, so it sequentially executes the lines of the code one-by-one.</td>
        </tr>
        <tr>
          <td id="L1938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1938"></td>
          <td id="LC1938" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1939"></td>
          <td id="LC1939" class="blob-code blob-code-inner js-file-line">Python also does have a Main() method. But it gets executed whenever we run our Python script either by directly clicking it or starts it from the command line.</td>
        </tr>
        <tr>
          <td id="L1940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1940"></td>
          <td id="LC1940" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1941"></td>
          <td id="LC1941" class="blob-code blob-code-inner js-file-line">We can also override the Python default main() function using the Python if statement. Please see the below code.</td>
        </tr>
        <tr>
          <td id="L1942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1942"></td>
          <td id="LC1942" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1943"></td>
          <td id="LC1943" class="blob-code blob-code-inner js-file-line">print(&quot;Welcome&quot;)</td>
        </tr>
        <tr>
          <td id="L1944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1944"></td>
          <td id="LC1944" class="blob-code blob-code-inner js-file-line">print(&quot;__name__ contains: &quot;, __name__)</td>
        </tr>
        <tr>
          <td id="L1945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1945"></td>
          <td id="LC1945" class="blob-code blob-code-inner js-file-line">def main():</td>
        </tr>
        <tr>
          <td id="L1946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1946"></td>
          <td id="LC1946" class="blob-code blob-code-inner js-file-line">    print(&quot;Testing the main function&quot;)</td>
        </tr>
        <tr>
          <td id="L1947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1947"></td>
          <td id="LC1947" class="blob-code blob-code-inner js-file-line">if __name__ == &#39;__main__&#39;:</td>
        </tr>
        <tr>
          <td id="L1948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1948"></td>
          <td id="LC1948" class="blob-code blob-code-inner js-file-line">    main()</td>
        </tr>
        <tr>
          <td id="L1949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1949"></td>
          <td id="LC1949" class="blob-code blob-code-inner js-file-line">The output:</td>
        </tr>
        <tr>
          <td id="L1950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1950"></td>
          <td id="LC1950" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1951"></td>
          <td id="LC1951" class="blob-code blob-code-inner js-file-line">Welcome</td>
        </tr>
        <tr>
          <td id="L1952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1952"></td>
          <td id="LC1952" class="blob-code blob-code-inner js-file-line">__name__ contains:  __main__</td>
        </tr>
        <tr>
          <td id="L1953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1953"></td>
          <td id="LC1953" class="blob-code blob-code-inner js-file-line">Testing the main function</td>
        </tr>
        <tr>
          <td id="L1954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1954"></td>
          <td id="LC1954" class="blob-code blob-code-inner js-file-line">206. What Does The __ Name __ Do In Python?</td>
        </tr>
        <tr>
          <td id="L1955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1955"></td>
          <td id="LC1955" class="blob-code blob-code-inner js-file-line">Ans: The __name__ is a unique variable. Since Python doesn’t expose the main() function, so when its interpreter gets to run the script, it first executes the code which is at level 0 indentation.</td>
        </tr>
        <tr>
          <td id="L1956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1956"></td>
          <td id="LC1956" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1957"></td>
          <td id="LC1957" class="blob-code blob-code-inner js-file-line">To see whether the main() gets called, we can use the __name__ variable in an if clause compares with the value “__main__.”</td>
        </tr>
        <tr>
          <td id="L1958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1958"></td>
          <td id="LC1958" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1959"></td>
          <td id="LC1959" class="blob-code blob-code-inner js-file-line">207. What Is The Purpose Of “End” In Python?</td>
        </tr>
        <tr>
          <td id="L1960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1960"></td>
          <td id="LC1960" class="blob-code blob-code-inner js-file-line">Ans: Python’s print() function always prints a newline in the end. The print() function accepts an optional parameter known as the ‘end.’ Its value is ‘\n’ by default. We can change the end character in a print statement with the value of our choice using this parameter.</td>
        </tr>
        <tr>
          <td id="L1961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1961"></td>
          <td id="LC1961" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1962"></td>
          <td id="LC1962" class="blob-code blob-code-inner js-file-line"># Example: Print a  instead of the new line in the end.</td>
        </tr>
        <tr>
          <td id="L1963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1963"></td>
          <td id="LC1963" class="blob-code blob-code-inner js-file-line">print(&quot;Let&#39;s learn&quot; , end = &#39; &#39;)  </td>
        </tr>
        <tr>
          <td id="L1964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1964"></td>
          <td id="LC1964" class="blob-code blob-code-inner js-file-line">print(&quot;Python&quot;) </td>
        </tr>
        <tr>
          <td id="L1965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1965"></td>
          <td id="LC1965" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1966"></td>
          <td id="LC1966" class="blob-code blob-code-inner js-file-line"># Printing a dot in the end.</td>
        </tr>
        <tr>
          <td id="L1967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1967"></td>
          <td id="LC1967" class="blob-code blob-code-inner js-file-line">print(&quot;Learn to code from techbeamers&quot; , end = &#39;.&#39;)  </td>
        </tr>
        <tr>
          <td id="L1968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1968"></td>
          <td id="LC1968" class="blob-code blob-code-inner js-file-line">print(&quot;com&quot;, end = &#39; &#39;)</td>
        </tr>
        <tr>
          <td id="L1969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1969"></td>
          <td id="LC1969" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L1970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1970"></td>
          <td id="LC1970" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1971"></td>
          <td id="LC1971" class="blob-code blob-code-inner js-file-line">Let&#39;s learn Python</td>
        </tr>
        <tr>
          <td id="L1972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1972"></td>
          <td id="LC1972" class="blob-code blob-code-inner js-file-line">Learn to code from techbeamers.com</td>
        </tr>
        <tr>
          <td id="L1973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1973"></td>
          <td id="LC1973" class="blob-code blob-code-inner js-file-line">208. When Should You Use The “Break” In Python?</td>
        </tr>
        <tr>
          <td id="L1974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1974"></td>
          <td id="LC1974" class="blob-code blob-code-inner js-file-line">Ans: Python provides a break statement to exit from a loop. Whenever the break hits in the code, the control of the program immediately exits from the body of the loop.</td>
        </tr>
        <tr>
          <td id="L1975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1975"></td>
          <td id="LC1975" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1976"></td>
          <td id="LC1976" class="blob-code blob-code-inner js-file-line">The break statement in a nested loop causes the control to exit from the inner iterative block.</td>
        </tr>
        <tr>
          <td id="L1977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1977"></td>
          <td id="LC1977" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1978"></td>
          <td id="LC1978" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L1979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1979"></td>
          <td id="LC1979" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1980"></td>
          <td id="LC1980" class="blob-code blob-code-inner js-file-line">209.What Is The Difference Between Pass And Continue In Python?</td>
        </tr>
        <tr>
          <td id="L1981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1981"></td>
          <td id="LC1981" class="blob-code blob-code-inner js-file-line">Ans: The continue statement makes the loop to resume from the next iteration.</td>
        </tr>
        <tr>
          <td id="L1982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1982"></td>
          <td id="LC1982" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1983"></td>
          <td id="LC1983" class="blob-code blob-code-inner js-file-line">On the contrary, the pass statement instructs to do nothing, and the remainder of the code executes as usual.</td>
        </tr>
        <tr>
          <td id="L1984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1984"></td>
          <td id="LC1984" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1985"></td>
          <td id="LC1985" class="blob-code blob-code-inner js-file-line">210. What Does The Len() Function Do In Python?</td>
        </tr>
        <tr>
          <td id="L1986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1986"></td>
          <td id="LC1986" class="blob-code blob-code-inner js-file-line">Ans: In Python, the len() is a primary string function. It determines the length of an input string.</td>
        </tr>
        <tr>
          <td id="L1987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1987"></td>
          <td id="LC1987" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1988"></td>
          <td id="LC1988" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; some_string = &#39;techbeamers&#39;</td>
        </tr>
        <tr>
          <td id="L1989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1989"></td>
          <td id="LC1989" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; len(some_string)</td>
        </tr>
        <tr>
          <td id="L1990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1990"></td>
          <td id="LC1990" class="blob-code blob-code-inner js-file-line">11</td>
        </tr>
        <tr>
          <td id="L1991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1991"></td>
          <td id="LC1991" class="blob-code blob-code-inner js-file-line">211. What Does The Chr() Function Do In Python?</td>
        </tr>
        <tr>
          <td id="L1992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1992"></td>
          <td id="LC1992" class="blob-code blob-code-inner js-file-line">Ans: The chr() function got re-added in Python 3.2. In version 3.0, it got removed.</td>
        </tr>
        <tr>
          <td id="L1993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1993"></td>
          <td id="LC1993" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1994"></td>
          <td id="LC1994" class="blob-code blob-code-inner js-file-line">It returns the string denoting a character whose Unicode code point is an integer.</td>
        </tr>
        <tr>
          <td id="L1995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1995"></td>
          <td id="LC1995" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1996"></td>
          <td id="LC1996" class="blob-code blob-code-inner js-file-line">For example, the chr(122) returns the string ‘z’ whereas the chr(1212) returns the string ‘Ҽ’.</td>
        </tr>
        <tr>
          <td id="L1997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1997"></td>
          <td id="LC1997" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L1998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1998"></td>
          <td id="LC1998" class="blob-code blob-code-inner js-file-line">212. What Does The Ord() Function Do In Python?</td>
        </tr>
        <tr>
          <td id="L1999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1999"></td>
          <td id="LC1999" class="blob-code blob-code-inner js-file-line">Ans: The ord(char) in Python takes a string of size one and returns an integer denoting the Unicode code format of the character in case of a Unicode type object, or the value of the byte if the argument is of 8-bit string type.</td>
        </tr>
        <tr>
          <td id="L2000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2000"></td>
          <td id="LC2000" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2001"></td>
          <td id="LC2001" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ord(&quot;z&quot;)</td>
        </tr>
        <tr>
          <td id="L2002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2002"></td>
          <td id="LC2002" class="blob-code blob-code-inner js-file-line">122</td>
        </tr>
        <tr>
          <td id="L2003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2003"></td>
          <td id="LC2003" class="blob-code blob-code-inner js-file-line">213. What Is Rstrip() In Python?</td>
        </tr>
        <tr>
          <td id="L2004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2004"></td>
          <td id="LC2004" class="blob-code blob-code-inner js-file-line">Ans: Python provides the rstrip() method which duplicates the string but leaves out the whitespace characters from the end.</td>
        </tr>
        <tr>
          <td id="L2005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2005"></td>
          <td id="LC2005" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2006"></td>
          <td id="LC2006" class="blob-code blob-code-inner js-file-line">The rstrip() escapes the characters from the right end based on the argument value, i.e., a string mentioning the group of characters to get excluded.</td>
        </tr>
        <tr>
          <td id="L2007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2007"></td>
          <td id="LC2007" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2008"></td>
          <td id="LC2008" class="blob-code blob-code-inner js-file-line">The signature of the rstrip() is:</td>
        </tr>
        <tr>
          <td id="L2009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2009"></td>
          <td id="LC2009" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2010"></td>
          <td id="LC2010" class="blob-code blob-code-inner js-file-line">str.rstrip([char sequence/pre&gt;</td>
        </tr>
        <tr>
          <td id="L2011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2011"></td>
          <td id="LC2011" class="blob-code blob-code-inner js-file-line">#Example</td>
        </tr>
        <tr>
          <td id="L2012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2012"></td>
          <td id="LC2012" class="blob-code blob-code-inner js-file-line">test_str = &#39;Programming    &#39;</td>
        </tr>
        <tr>
          <td id="L2013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2013"></td>
          <td id="LC2013" class="blob-code blob-code-inner js-file-line"># The trailing whitespaces are excluded</td>
        </tr>
        <tr>
          <td id="L2014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2014"></td>
          <td id="LC2014" class="blob-code blob-code-inner js-file-line">print(test_str.rstrip())</td>
        </tr>
        <tr>
          <td id="L2015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2015"></td>
          <td id="LC2015" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2016"></td>
          <td id="LC2016" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2017"></td>
          <td id="LC2017" class="blob-code blob-code-inner js-file-line">214.What Is Whitespace In Python?</td>
        </tr>
        <tr>
          <td id="L2018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2018"></td>
          <td id="LC2018" class="blob-code blob-code-inner js-file-line">Ans: Whitespace represents the characters that we use for spacing and separation.</td>
        </tr>
        <tr>
          <td id="L2019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2019"></td>
          <td id="LC2019" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2020"></td>
          <td id="LC2020" class="blob-code blob-code-inner js-file-line">They possess an “empty” representation. In Python, it could be a tab or space.</td>
        </tr>
        <tr>
          <td id="L2021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2021"></td>
          <td id="LC2021" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2022"></td>
          <td id="LC2022" class="blob-code blob-code-inner js-file-line">215. What Is Isalpha() In Python?</td>
        </tr>
        <tr>
          <td id="L2023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2023"></td>
          <td id="LC2023" class="blob-code blob-code-inner js-file-line">Ans: Python provides this built-in isalpha() function for the string handling purpose.</td>
        </tr>
        <tr>
          <td id="L2024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2024"></td>
          <td id="LC2024" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2025"></td>
          <td id="LC2025" class="blob-code blob-code-inner js-file-line">It returns True if all characters in the string are of alphabet type, else it returns False.</td>
        </tr>
        <tr>
          <td id="L2026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2026"></td>
          <td id="LC2026" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2027"></td>
          <td id="LC2027" class="blob-code blob-code-inner js-file-line">216. How Do You Use The Split() Function In Python?</td>
        </tr>
        <tr>
          <td id="L2028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2028"></td>
          <td id="LC2028" class="blob-code blob-code-inner js-file-line">Python’s split() function works on strings to cut a large piece into smaller chunks, or sub-strings. We can specify a separator to start splitting, or it uses the space as one by default.</td>
        </tr>
        <tr>
          <td id="L2029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2029"></td>
          <td id="LC2029" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2030"></td>
          <td id="LC2030" class="blob-code blob-code-inner js-file-line">#Example</td>
        </tr>
        <tr>
          <td id="L2031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2031"></td>
          <td id="LC2031" class="blob-code blob-code-inner js-file-line">str = &#39;pdf csv json&#39;</td>
        </tr>
        <tr>
          <td id="L2032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2032"></td>
          <td id="LC2032" class="blob-code blob-code-inner js-file-line">print(str.split(&quot; &quot;))</td>
        </tr>
        <tr>
          <td id="L2033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2033"></td>
          <td id="LC2033" class="blob-code blob-code-inner js-file-line">print(str.split())</td>
        </tr>
        <tr>
          <td id="L2034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2034"></td>
          <td id="LC2034" class="blob-code blob-code-inner js-file-line">The output:</td>
        </tr>
        <tr>
          <td id="L2035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2035"></td>
          <td id="LC2035" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2036"></td>
          <td id="LC2036" class="blob-code blob-code-inner js-file-line">[&#39;pdf&#39;, &#39;csv&#39;, &#39;json&#39;]</td>
        </tr>
        <tr>
          <td id="L2037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2037"></td>
          <td id="LC2037" class="blob-code blob-code-inner js-file-line">[&#39;pdf&#39;, &#39;csv&#39;, &#39;json&#39;]</td>
        </tr>
        <tr>
          <td id="L2038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2038"></td>
          <td id="LC2038" class="blob-code blob-code-inner js-file-line">217. What Does The Join Method Do In Python?</td>
        </tr>
        <tr>
          <td id="L2039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2039"></td>
          <td id="LC2039" class="blob-code blob-code-inner js-file-line">Ans: Python provides the join() method which works on strings, lists, and tuples. It combines them and returns a united value.</td>
        </tr>
        <tr>
          <td id="L2040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2040"></td>
          <td id="LC2040" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2041"></td>
          <td id="LC2041" class="blob-code blob-code-inner js-file-line">218. What Does The Title() Method Do In Python?</td>
        </tr>
        <tr>
          <td id="L2042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2042"></td>
          <td id="LC2042" class="blob-code blob-code-inner js-file-line">Ans: Python provides the title() method to convert the first letter in each word to capital format while the rest turns to Lowercase.</td>
        </tr>
        <tr>
          <td id="L2043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2043"></td>
          <td id="LC2043" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2044"></td>
          <td id="LC2044" class="blob-code blob-code-inner js-file-line">#Example</td>
        </tr>
        <tr>
          <td id="L2045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2045"></td>
          <td id="LC2045" class="blob-code blob-code-inner js-file-line">str = &#39;lEaRn pYtHoN&#39;</td>
        </tr>
        <tr>
          <td id="L2046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2046"></td>
          <td id="LC2046" class="blob-code blob-code-inner js-file-line">print(str.title())</td>
        </tr>
        <tr>
          <td id="L2047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2047"></td>
          <td id="LC2047" class="blob-code blob-code-inner js-file-line">The output:</td>
        </tr>
        <tr>
          <td id="L2048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2048"></td>
          <td id="LC2048" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2049"></td>
          <td id="LC2049" class="blob-code blob-code-inner js-file-line">Learn Python</td>
        </tr>
        <tr>
          <td id="L2050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2050"></td>
          <td id="LC2050" class="blob-code blob-code-inner js-file-line">Now, check out some general purpose Python interview questions.</td>
        </tr>
        <tr>
          <td id="L2051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2051"></td>
          <td id="LC2051" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2052"></td>
          <td id="LC2052" class="blob-code blob-code-inner js-file-line">219. What Makes The CPython Different From Python?</td>
        </tr>
        <tr>
          <td id="L2053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2053"></td>
          <td id="LC2053" class="blob-code blob-code-inner js-file-line">Ans: CPython has its core developed in C. The prefix ‘C’ represents this fact. It runs an interpreter loop used for translating the Python-ish code to C language.</td>
        </tr>
        <tr>
          <td id="L2054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2054"></td>
          <td id="LC2054" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2055"></td>
          <td id="LC2055" class="blob-code blob-code-inner js-file-line">220. Which Package Is The Fastest Form Of Python?</td>
        </tr>
        <tr>
          <td id="L2056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2056"></td>
          <td id="LC2056" class="blob-code blob-code-inner js-file-line">Ans: PyPy provides maximum compatibility while utilizing CPython implementation for improving its performance.</td>
        </tr>
        <tr>
          <td id="L2057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2057"></td>
          <td id="LC2057" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2058"></td>
          <td id="LC2058" class="blob-code blob-code-inner js-file-line">The tests confirmed that PyPy is nearly five times faster than the CPython. It currently supports Python 2.7.</td>
        </tr>
        <tr>
          <td id="L2059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2059"></td>
          <td id="LC2059" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2060"></td>
          <td id="LC2060" class="blob-code blob-code-inner js-file-line">221. What Is GIL In Python Language?</td>
        </tr>
        <tr>
          <td id="L2061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2061"></td>
          <td id="LC2061" class="blob-code blob-code-inner js-file-line">Ans: Python supports GIL (the global interpreter lock) which is a mutex used to secure access to Python objects, synchronizing multiple threads from running the Python bytecodes at the same time.</td>
        </tr>
        <tr>
          <td id="L2062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2062"></td>
          <td id="LC2062" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2063"></td>
          <td id="LC2063" class="blob-code blob-code-inner js-file-line">222. How Is Python Thread Safe?</td>
        </tr>
        <tr>
          <td id="L2064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2064"></td>
          <td id="LC2064" class="blob-code blob-code-inner js-file-line">Ans: Python ensures safe access to threads. It uses the GIL mutex to set synchronization. If a thread loses the GIL lock at any time, then you have to make the code thread-safe.</td>
        </tr>
        <tr>
          <td id="L2065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2065"></td>
          <td id="LC2065" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2066"></td>
          <td id="LC2066" class="blob-code blob-code-inner js-file-line">For example, many of the Python operations execute as atomic such as calling the sort() method on a list.</td>
        </tr>
        <tr>
          <td id="L2067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2067"></td>
          <td id="LC2067" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2068"></td>
          <td id="LC2068" class="blob-code blob-code-inner js-file-line">223. How Does Python Manage The Memory?</td>
        </tr>
        <tr>
          <td id="L2069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2069"></td>
          <td id="LC2069" class="blob-code blob-code-inner js-file-line">Ans: Python implements a heap manager internally which holds all of its objects and data structures.</td>
        </tr>
        <tr>
          <td id="L2070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2070"></td>
          <td id="LC2070" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2071"></td>
          <td id="LC2071" class="blob-code blob-code-inner js-file-line">This heap manager does the allocation/de-allocation of heap space for objects.</td>
        </tr>
        <tr>
          <td id="L2072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2072"></td>
          <td id="LC2072" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2073"></td>
          <td id="LC2073" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2074"></td>
          <td id="LC2074" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2075"></td>
          <td id="LC2075" class="blob-code blob-code-inner js-file-line">224.What Is The Set Object In Python?</td>
        </tr>
        <tr>
          <td id="L2076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2076"></td>
          <td id="LC2076" class="blob-code blob-code-inner js-file-line">Ans: Sets are unordered collection objects in Python. They store unique and immutable objects. Python has its implementation derived from mathematics.</td>
        </tr>
        <tr>
          <td id="L2077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2077"></td>
          <td id="LC2077" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2078"></td>
          <td id="LC2078" class="blob-code blob-code-inner js-file-line">225. What Is The Use Of The Dictionary In Python?</td>
        </tr>
        <tr>
          <td id="L2079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2079"></td>
          <td id="LC2079" class="blob-code blob-code-inner js-file-line">Ans: A dictionary has a group of objects (the keys) map to another group of objects (the values). A Python dictionary represents a mapping of unique Keys to Values.</td>
        </tr>
        <tr>
          <td id="L2080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2080"></td>
          <td id="LC2080" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2081"></td>
          <td id="LC2081" class="blob-code blob-code-inner js-file-line">They are mutable and hence will not change. The values associated with the keys can be of any Python types.</td>
        </tr>
        <tr>
          <td id="L2082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2082"></td>
          <td id="LC2082" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2083"></td>
          <td id="LC2083" class="blob-code blob-code-inner js-file-line">226. Is Python List A Linked List?</td>
        </tr>
        <tr>
          <td id="L2084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2084"></td>
          <td id="LC2084" class="blob-code blob-code-inner js-file-line">Ans: A Python list is a variable-length array which is different from C-style linked lists.</td>
        </tr>
        <tr>
          <td id="L2085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2085"></td>
          <td id="LC2085" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2086"></td>
          <td id="LC2086" class="blob-code blob-code-inner js-file-line">Internally, it has a contiguous array for referencing to other objects and stores a pointer to the array variable and its length in the list head structure.</td>
        </tr>
        <tr>
          <td id="L2087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2087"></td>
          <td id="LC2087" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2088"></td>
          <td id="LC2088" class="blob-code blob-code-inner js-file-line">Here are some Python interview questions on classes and objects</td>
        </tr>
        <tr>
          <td id="L2089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2089"></td>
          <td id="LC2089" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2090"></td>
          <td id="LC2090" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2091"></td>
          <td id="LC2091" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2092"></td>
          <td id="LC2092" class="blob-code blob-code-inner js-file-line">227.What Is Class In Python?</td>
        </tr>
        <tr>
          <td id="L2093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2093"></td>
          <td id="LC2093" class="blob-code blob-code-inner js-file-line">Ans: Python supports object-oriented programming and provides almost all OOP features to use in programs.</td>
        </tr>
        <tr>
          <td id="L2094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2094"></td>
          <td id="LC2094" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2095"></td>
          <td id="LC2095" class="blob-code blob-code-inner js-file-line">A Python class is a blueprint for creating the objects. It defines member variables and gets their behavior associated with them.</td>
        </tr>
        <tr>
          <td id="L2096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2096"></td>
          <td id="LC2096" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2097"></td>
          <td id="LC2097" class="blob-code blob-code-inner js-file-line">We can make it by using the keyword “class.” An object gets created from the constructor. This object represents the instance of the class.</td>
        </tr>
        <tr>
          <td id="L2098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2098"></td>
          <td id="LC2098" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2099"></td>
          <td id="LC2099" class="blob-code blob-code-inner js-file-line">In Python, we generate classes and instances in the following way.</td>
        </tr>
        <tr>
          <td id="L2100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2100"></td>
          <td id="LC2100" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2101"></td>
          <td id="LC2101" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;class Human:  # Create the class</td>
        </tr>
        <tr>
          <td id="L2102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2102"></td>
          <td id="LC2102" class="blob-code blob-code-inner js-file-line">...     pass</td>
        </tr>
        <tr>
          <td id="L2103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2103"></td>
          <td id="LC2103" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;man = Human()  # Create the instance</td>
        </tr>
        <tr>
          <td id="L2104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2104"></td>
          <td id="LC2104" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;print(man)</td>
        </tr>
        <tr>
          <td id="L2105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2105"></td>
          <td id="LC2105" class="blob-code blob-code-inner js-file-line">&lt;__main__.Human object at 0x0000000003559E10&gt;</td>
        </tr>
        <tr>
          <td id="L2106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2106"></td>
          <td id="LC2106" class="blob-code blob-code-inner js-file-line">228. What Are Attributes And Methods In A Python Class?</td>
        </tr>
        <tr>
          <td id="L2107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2107"></td>
          <td id="LC2107" class="blob-code blob-code-inner js-file-line">Ans: A class is useless if it has not defined any functionality. We can do so by adding attributes. They work as containers for data and functions. We can add an attribute directly specifying inside the class body.</td>
        </tr>
        <tr>
          <td id="L2108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2108"></td>
          <td id="LC2108" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2109"></td>
          <td id="LC2109" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; class Human:</td>
        </tr>
        <tr>
          <td id="L2110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2110"></td>
          <td id="LC2110" class="blob-code blob-code-inner js-file-line">...     profession = &quot;programmer&quot; # specify the attribute &#39;profession&#39; of the class</td>
        </tr>
        <tr>
          <td id="L2111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2111"></td>
          <td id="LC2111" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; man = Human()</td>
        </tr>
        <tr>
          <td id="L2112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2112"></td>
          <td id="LC2112" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(man.profession)</td>
        </tr>
        <tr>
          <td id="L2113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2113"></td>
          <td id="LC2113" class="blob-code blob-code-inner js-file-line">programmer</td>
        </tr>
        <tr>
          <td id="L2114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2114"></td>
          <td id="LC2114" class="blob-code blob-code-inner js-file-line">After we added the attributes, we can go on to define the functions. Generally, we call them methods. In the method signature, we always have to provide the first argument with a self-keyword.</td>
        </tr>
        <tr>
          <td id="L2115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2115"></td>
          <td id="LC2115" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2116"></td>
          <td id="LC2116" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; class Human:</td>
        </tr>
        <tr>
          <td id="L2117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2117"></td>
          <td id="LC2117" class="blob-code blob-code-inner js-file-line">    profession = &quot;programmer&quot;</td>
        </tr>
        <tr>
          <td id="L2118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2118"></td>
          <td id="LC2118" class="blob-code blob-code-inner js-file-line">    def set_profession(self, new_profession):</td>
        </tr>
        <tr>
          <td id="L2119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2119"></td>
          <td id="LC2119" class="blob-code blob-code-inner js-file-line">        self.profession = new_profession      </td>
        </tr>
        <tr>
          <td id="L2120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2120"></td>
          <td id="LC2120" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; man = Human()</td>
        </tr>
        <tr>
          <td id="L2121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2121"></td>
          <td id="LC2121" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; man.set_profession(&quot;Manager&quot;)</td>
        </tr>
        <tr>
          <td id="L2122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2122"></td>
          <td id="LC2122" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(man.profession)</td>
        </tr>
        <tr>
          <td id="L2123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2123"></td>
          <td id="LC2123" class="blob-code blob-code-inner js-file-line">Manager</td>
        </tr>
        <tr>
          <td id="L2124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2124"></td>
          <td id="LC2124" class="blob-code blob-code-inner js-file-line">229. How To Assign Values For The Class Attributes At Runtime?</td>
        </tr>
        <tr>
          <td id="L2125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2125"></td>
          <td id="LC2125" class="blob-code blob-code-inner js-file-line">Ans: We can specify the values for the attributes at runtime. We need to add an init method and pass input to object constructor. See the following example demonstrating this.</td>
        </tr>
        <tr>
          <td id="L2126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2126"></td>
          <td id="LC2126" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2127"></td>
          <td id="LC2127" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; class Human:</td>
        </tr>
        <tr>
          <td id="L2128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2128"></td>
          <td id="LC2128" class="blob-code blob-code-inner js-file-line">    def __init__(self, profession):</td>
        </tr>
        <tr>
          <td id="L2129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2129"></td>
          <td id="LC2129" class="blob-code blob-code-inner js-file-line">        self.profession = profession</td>
        </tr>
        <tr>
          <td id="L2130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2130"></td>
          <td id="LC2130" class="blob-code blob-code-inner js-file-line">    def set_profession(self, new_profession):</td>
        </tr>
        <tr>
          <td id="L2131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2131"></td>
          <td id="LC2131" class="blob-code blob-code-inner js-file-line">        self.profession = new_profession</td>
        </tr>
        <tr>
          <td id="L2132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2132"></td>
          <td id="LC2132" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2133"></td>
          <td id="LC2133" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; man = Human(&quot;Manager&quot;)</td>
        </tr>
        <tr>
          <td id="L2134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2134"></td>
          <td id="LC2134" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(man.profession)</td>
        </tr>
        <tr>
          <td id="L2135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2135"></td>
          <td id="LC2135" class="blob-code blob-code-inner js-file-line">Manager</td>
        </tr>
        <tr>
          <td id="L2136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2136"></td>
          <td id="LC2136" class="blob-code blob-code-inner js-file-line"> 230.What Is Inheritance In Python Programming?</td>
        </tr>
        <tr>
          <td id="L2137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2137"></td>
          <td id="LC2137" class="blob-code blob-code-inner js-file-line">Ans: Inheritance is an OOP mechanism which allows an object to access its parent class features. It carries forward the base class functionality to the child.</td>
        </tr>
        <tr>
          <td id="L2138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2138"></td>
          <td id="LC2138" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2139"></td>
          <td id="LC2139" class="blob-code blob-code-inner js-file-line">Python Interview Questions - Inheritance</td>
        </tr>
        <tr>
          <td id="L2140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2140"></td>
          <td id="LC2140" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2141"></td>
          <td id="LC2141" class="blob-code blob-code-inner js-file-line">We do it intentionally to abstract away the similar code in different classes.</td>
        </tr>
        <tr>
          <td id="L2142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2142"></td>
          <td id="LC2142" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2143"></td>
          <td id="LC2143" class="blob-code blob-code-inner js-file-line">The common code rests with the base class, and the child class objects can access it via inheritance. Check out the below example.</td>
        </tr>
        <tr>
          <td id="L2144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2144"></td>
          <td id="LC2144" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2145"></td>
          <td id="LC2145" class="blob-code blob-code-inner js-file-line">class PC: # Base class</td>
        </tr>
        <tr>
          <td id="L2146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2146"></td>
          <td id="LC2146" class="blob-code blob-code-inner js-file-line">    processor = &quot;Xeon&quot; # Common attribute</td>
        </tr>
        <tr>
          <td id="L2147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2147"></td>
          <td id="LC2147" class="blob-code blob-code-inner js-file-line">    def set_processor(self, new_processor):</td>
        </tr>
        <tr>
          <td id="L2148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2148"></td>
          <td id="LC2148" class="blob-code blob-code-inner js-file-line">        processor = new_processor</td>
        </tr>
        <tr>
          <td id="L2149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2149"></td>
          <td id="LC2149" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2150"></td>
          <td id="LC2150" class="blob-code blob-code-inner js-file-line">class Desktop(PC): # Derived class</td>
        </tr>
        <tr>
          <td id="L2151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2151"></td>
          <td id="LC2151" class="blob-code blob-code-inner js-file-line">    os = &quot;Mac OS High Sierra&quot; # Personalized attribute</td>
        </tr>
        <tr>
          <td id="L2152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2152"></td>
          <td id="LC2152" class="blob-code blob-code-inner js-file-line">    ram = &quot;32 GB&quot;</td>
        </tr>
        <tr>
          <td id="L2153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2153"></td>
          <td id="LC2153" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2154"></td>
          <td id="LC2154" class="blob-code blob-code-inner js-file-line">class Laptop(PC): # Derived class</td>
        </tr>
        <tr>
          <td id="L2155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2155"></td>
          <td id="LC2155" class="blob-code blob-code-inner js-file-line">    os = &quot;Windows 10 Pro 64&quot; # Personalized attribute</td>
        </tr>
        <tr>
          <td id="L2156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2156"></td>
          <td id="LC2156" class="blob-code blob-code-inner js-file-line">    ram = &quot;16 GB&quot;</td>
        </tr>
        <tr>
          <td id="L2157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2157"></td>
          <td id="LC2157" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2158"></td>
          <td id="LC2158" class="blob-code blob-code-inner js-file-line">desk = Desktop()</td>
        </tr>
        <tr>
          <td id="L2159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2159"></td>
          <td id="LC2159" class="blob-code blob-code-inner js-file-line">print(desk.processor, desk.os, desk.ram)</td>
        </tr>
        <tr>
          <td id="L2160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2160"></td>
          <td id="LC2160" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2161"></td>
          <td id="LC2161" class="blob-code blob-code-inner js-file-line">lap = Laptop()</td>
        </tr>
        <tr>
          <td id="L2162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2162"></td>
          <td id="LC2162" class="blob-code blob-code-inner js-file-line">print(lap.processor, lap.os, lap.ram)</td>
        </tr>
        <tr>
          <td id="L2163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2163"></td>
          <td id="LC2163" class="blob-code blob-code-inner js-file-line">The output:</td>
        </tr>
        <tr>
          <td id="L2164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2164"></td>
          <td id="LC2164" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2165"></td>
          <td id="LC2165" class="blob-code blob-code-inner js-file-line">Xeon Mac OS High Sierra 32 GB</td>
        </tr>
        <tr>
          <td id="L2166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2166"></td>
          <td id="LC2166" class="blob-code blob-code-inner js-file-line">Xeon Windows 10 Pro 64 16 GB</td>
        </tr>
        <tr>
          <td id="L2167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2167"></td>
          <td id="LC2167" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2168"></td>
          <td id="LC2168" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2169"></td>
          <td id="LC2169" class="blob-code blob-code-inner js-file-line">231.What Is Composition In Python?</td>
        </tr>
        <tr>
          <td id="L2170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2170"></td>
          <td id="LC2170" class="blob-code blob-code-inner js-file-line">Ans: The composition is also a type of inheritance in Python. It intends to inherit from the base class but a little differently, i.e., by using an instance variable of the base class acting as a member of the derived class.</td>
        </tr>
        <tr>
          <td id="L2171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2171"></td>
          <td id="LC2171" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2172"></td>
          <td id="LC2172" class="blob-code blob-code-inner js-file-line">See the below diagram.</td>
        </tr>
        <tr>
          <td id="L2173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2173"></td>
          <td id="LC2173" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2174"></td>
          <td id="LC2174" class="blob-code blob-code-inner js-file-line">Python Interview Questions - Composition</td>
        </tr>
        <tr>
          <td id="L2175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2175"></td>
          <td id="LC2175" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2176"></td>
          <td id="LC2176" class="blob-code blob-code-inner js-file-line">To demonstrate composition, we need to instantiate other objects in the class and then make use of those instances.</td>
        </tr>
        <tr>
          <td id="L2177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2177"></td>
          <td id="LC2177" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2178"></td>
          <td id="LC2178" class="blob-code blob-code-inner js-file-line">class PC: # Base class</td>
        </tr>
        <tr>
          <td id="L2179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2179"></td>
          <td id="LC2179" class="blob-code blob-code-inner js-file-line">    processor = &quot;Xeon&quot; # Common attribute</td>
        </tr>
        <tr>
          <td id="L2180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2180"></td>
          <td id="LC2180" class="blob-code blob-code-inner js-file-line">    def __init__(self, processor, ram):</td>
        </tr>
        <tr>
          <td id="L2181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2181"></td>
          <td id="LC2181" class="blob-code blob-code-inner js-file-line">        self.processor = processor</td>
        </tr>
        <tr>
          <td id="L2182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2182"></td>
          <td id="LC2182" class="blob-code blob-code-inner js-file-line">        self.ram = ram</td>
        </tr>
        <tr>
          <td id="L2183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2183"></td>
          <td id="LC2183" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2184"></td>
          <td id="LC2184" class="blob-code blob-code-inner js-file-line">    def set_processor(self, new_processor):</td>
        </tr>
        <tr>
          <td id="L2185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2185"></td>
          <td id="LC2185" class="blob-code blob-code-inner js-file-line">        processor = new_processor</td>
        </tr>
        <tr>
          <td id="L2186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2186"></td>
          <td id="LC2186" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2187"></td>
          <td id="LC2187" class="blob-code blob-code-inner js-file-line">    def get_PC(self):</td>
        </tr>
        <tr>
          <td id="L2188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2188"></td>
          <td id="LC2188" class="blob-code blob-code-inner js-file-line">        return &quot;%s cpu &amp; %s ram&quot; % (self.processor, self.ram)</td>
        </tr>
        <tr>
          <td id="L2189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2189"></td>
          <td id="LC2189" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2190"></td>
          <td id="LC2190" class="blob-code blob-code-inner js-file-line">class Tablet():</td>
        </tr>
        <tr>
          <td id="L2191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2191"></td>
          <td id="LC2191" class="blob-code blob-code-inner js-file-line">    make = &quot;Intel&quot;</td>
        </tr>
        <tr>
          <td id="L2192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2192"></td>
          <td id="LC2192" class="blob-code blob-code-inner js-file-line">    def __init__(self, processor, ram, make):</td>
        </tr>
        <tr>
          <td id="L2193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2193"></td>
          <td id="LC2193" class="blob-code blob-code-inner js-file-line">        self.PC = PC(processor, ram) # Composition</td>
        </tr>
        <tr>
          <td id="L2194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2194"></td>
          <td id="LC2194" class="blob-code blob-code-inner js-file-line">        self.make = make</td>
        </tr>
        <tr>
          <td id="L2195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2195"></td>
          <td id="LC2195" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2196"></td>
          <td id="LC2196" class="blob-code blob-code-inner js-file-line">    def get_Tablet(self):</td>
        </tr>
        <tr>
          <td id="L2197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2197"></td>
          <td id="LC2197" class="blob-code blob-code-inner js-file-line">        return &quot;Tablet with %s CPU &amp; %s ram by %s&quot; % (self.PC.processor, self.PC.ram, self.make)</td>
        </tr>
        <tr>
          <td id="L2198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2198"></td>
          <td id="LC2198" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2199"></td>
          <td id="LC2199" class="blob-code blob-code-inner js-file-line">if __name__ == &quot;__main__&quot;:</td>
        </tr>
        <tr>
          <td id="L2200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2200"></td>
          <td id="LC2200" class="blob-code blob-code-inner js-file-line">    tab = Tablet(&quot;i7&quot;, &quot;16 GB&quot;, &quot;Intel&quot;)</td>
        </tr>
        <tr>
          <td id="L2201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2201"></td>
          <td id="LC2201" class="blob-code blob-code-inner js-file-line">    print(tab.get_Tablet())</td>
        </tr>
        <tr>
          <td id="L2202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2202"></td>
          <td id="LC2202" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2203"></td>
          <td id="LC2203" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2204"></td>
          <td id="LC2204" class="blob-code blob-code-inner js-file-line">Tablet with i7 CPU &amp; 16 GB ram by Intel</td>
        </tr>
        <tr>
          <td id="L2205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2205"></td>
          <td id="LC2205" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2206"></td>
          <td id="LC2206" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2207"></td>
          <td id="LC2207" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2208"></td>
          <td id="LC2208" class="blob-code blob-code-inner js-file-line">232.What Are Errors And Exceptions In Python Programs?</td>
        </tr>
        <tr>
          <td id="L2209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2209"></td>
          <td id="LC2209" class="blob-code blob-code-inner js-file-line">Ans: Errors are coding issues in a program which may cause it to exit abnormally.</td>
        </tr>
        <tr>
          <td id="L2210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2210"></td>
          <td id="LC2210" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2211"></td>
          <td id="LC2211" class="blob-code blob-code-inner js-file-line">On the contrary, exceptions happen due to the occurrence of an external event which interrupts the normal flow of the program.</td>
        </tr>
        <tr>
          <td id="L2212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2212"></td>
          <td id="LC2212" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2213"></td>
          <td id="LC2213" class="blob-code blob-code-inner js-file-line">233. How Do You Handle Exceptions With Try/Except/Finally In Python?</td>
        </tr>
        <tr>
          <td id="L2214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2214"></td>
          <td id="LC2214" class="blob-code blob-code-inner js-file-line">Ans: Python lay down Try, Except, Finally constructs to handle errors as well as Exceptions. We enclose the unsafe code indented under the try block. And we can keep our fall-back code inside the except block. Any instructions intended for execution last should come under the finally block.</td>
        </tr>
        <tr>
          <td id="L2215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2215"></td>
          <td id="LC2215" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2216"></td>
          <td id="LC2216" class="blob-code blob-code-inner js-file-line">try:</td>
        </tr>
        <tr>
          <td id="L2217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2217"></td>
          <td id="LC2217" class="blob-code blob-code-inner js-file-line">    print(&quot;Executing code in the try block&quot;)</td>
        </tr>
        <tr>
          <td id="L2218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2218"></td>
          <td id="LC2218" class="blob-code blob-code-inner js-file-line">    print(exception)</td>
        </tr>
        <tr>
          <td id="L2219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2219"></td>
          <td id="LC2219" class="blob-code blob-code-inner js-file-line">except:</td>
        </tr>
        <tr>
          <td id="L2220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2220"></td>
          <td id="LC2220" class="blob-code blob-code-inner js-file-line">    print(&quot;Entering in the except block&quot;)</td>
        </tr>
        <tr>
          <td id="L2221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2221"></td>
          <td id="LC2221" class="blob-code blob-code-inner js-file-line">finally:</td>
        </tr>
        <tr>
          <td id="L2222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2222"></td>
          <td id="LC2222" class="blob-code blob-code-inner js-file-line">    print(&quot;Reached to the final block&quot;)</td>
        </tr>
        <tr>
          <td id="L2223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2223"></td>
          <td id="LC2223" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2224"></td>
          <td id="LC2224" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2225"></td>
          <td id="LC2225" class="blob-code blob-code-inner js-file-line">Executing code in the try block</td>
        </tr>
        <tr>
          <td id="L2226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2226"></td>
          <td id="LC2226" class="blob-code blob-code-inner js-file-line">Entering in the except block</td>
        </tr>
        <tr>
          <td id="L2227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2227"></td>
          <td id="LC2227" class="blob-code blob-code-inner js-file-line">Reached to the final block</td>
        </tr>
        <tr>
          <td id="L2228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2228"></td>
          <td id="LC2228" class="blob-code blob-code-inner js-file-line">234. How Do You Raise Exceptions For A Predefined Condition In Python?</td>
        </tr>
        <tr>
          <td id="L2229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2229"></td>
          <td id="LC2229" class="blob-code blob-code-inner js-file-line">Ans: We can raise an exception based on some condition.</td>
        </tr>
        <tr>
          <td id="L2230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2230"></td>
          <td id="LC2230" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2231"></td>
          <td id="LC2231" class="blob-code blob-code-inner js-file-line">For example, if we want the user to enter only odd numbers, else will raise an exception.</td>
        </tr>
        <tr>
          <td id="L2232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2232"></td>
          <td id="LC2232" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2233"></td>
          <td id="LC2233" class="blob-code blob-code-inner js-file-line"># Example - Raise an exception</td>
        </tr>
        <tr>
          <td id="L2234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2234"></td>
          <td id="LC2234" class="blob-code blob-code-inner js-file-line">while True:</td>
        </tr>
        <tr>
          <td id="L2235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2235"></td>
          <td id="LC2235" class="blob-code blob-code-inner js-file-line">    try:</td>
        </tr>
        <tr>
          <td id="L2236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2236"></td>
          <td id="LC2236" class="blob-code blob-code-inner js-file-line">        value = int(input(&quot;Enter an odd number- &quot;))</td>
        </tr>
        <tr>
          <td id="L2237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2237"></td>
          <td id="LC2237" class="blob-code blob-code-inner js-file-line">        if value%2 == 0:</td>
        </tr>
        <tr>
          <td id="L2238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2238"></td>
          <td id="LC2238" class="blob-code blob-code-inner js-file-line">            raise ValueError(&quot;Exited due to invalid input!!!&quot;)</td>
        </tr>
        <tr>
          <td id="L2239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2239"></td>
          <td id="LC2239" class="blob-code blob-code-inner js-file-line">        else:</td>
        </tr>
        <tr>
          <td id="L2240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2240"></td>
          <td id="LC2240" class="blob-code blob-code-inner js-file-line">            print(&quot;Value entered is : %s&quot; % value)</td>
        </tr>
        <tr>
          <td id="L2241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2241"></td>
          <td id="LC2241" class="blob-code blob-code-inner js-file-line">    except ValueError as ex:</td>
        </tr>
        <tr>
          <td id="L2242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2242"></td>
          <td id="LC2242" class="blob-code blob-code-inner js-file-line">        print(ex)</td>
        </tr>
        <tr>
          <td id="L2243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2243"></td>
          <td id="LC2243" class="blob-code blob-code-inner js-file-line">        break</td>
        </tr>
        <tr>
          <td id="L2244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2244"></td>
          <td id="LC2244" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2245"></td>
          <td id="LC2245" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2246"></td>
          <td id="LC2246" class="blob-code blob-code-inner js-file-line">Enter an odd number- 2</td>
        </tr>
        <tr>
          <td id="L2247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2247"></td>
          <td id="LC2247" class="blob-code blob-code-inner js-file-line">Exited due to invalid input!!!</td>
        </tr>
        <tr>
          <td id="L2248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2248"></td>
          <td id="LC2248" class="blob-code blob-code-inner js-file-line">Enter an odd number- 1</td>
        </tr>
        <tr>
          <td id="L2249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2249"></td>
          <td id="LC2249" class="blob-code blob-code-inner js-file-line">Value entered is : 1</td>
        </tr>
        <tr>
          <td id="L2250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2250"></td>
          <td id="LC2250" class="blob-code blob-code-inner js-file-line">Enter an odd number-</td>
        </tr>
        <tr>
          <td id="L2251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2251"></td>
          <td id="LC2251" class="blob-code blob-code-inner js-file-line">235. What Are Python Iterators?</td>
        </tr>
        <tr>
          <td id="L2252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2252"></td>
          <td id="LC2252" class="blob-code blob-code-inner js-file-line">Ans: Iterators in Python are array-like objects which allow moving on the next element. We use them in traversing a loop, for example, in a “for” loop.</td>
        </tr>
        <tr>
          <td id="L2253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2253"></td>
          <td id="LC2253" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2254"></td>
          <td id="LC2254" class="blob-code blob-code-inner js-file-line">Python library has a no. of iterators. For example, a list is also an iterator and we can start a for loop over it.</td>
        </tr>
        <tr>
          <td id="L2255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2255"></td>
          <td id="LC2255" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2256"></td>
          <td id="LC2256" class="blob-code blob-code-inner js-file-line">236. What Is The Difference Between An Iterator And Iterable?</td>
        </tr>
        <tr>
          <td id="L2257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2257"></td>
          <td id="LC2257" class="blob-code blob-code-inner js-file-line">Ans: The collection type like a list, tuple, dictionary, and set are all iterable objects whereas they are also iterable containers which return an iterator while traversing.</td>
        </tr>
        <tr>
          <td id="L2258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2258"></td>
          <td id="LC2258" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2259"></td>
          <td id="LC2259" class="blob-code blob-code-inner js-file-line">Here are some advanced-level Python interview questions.</td>
        </tr>
        <tr>
          <td id="L2260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2260"></td>
          <td id="LC2260" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2261"></td>
          <td id="LC2261" class="blob-code blob-code-inner js-file-line">237. What Are Python Generators?</td>
        </tr>
        <tr>
          <td id="L2262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2262"></td>
          <td id="LC2262" class="blob-code blob-code-inner js-file-line">Ans: A Generator is a kind of function which lets us specify a function that acts like an iterator and hence can get used in a “for” loop.</td>
        </tr>
        <tr>
          <td id="L2263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2263"></td>
          <td id="LC2263" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2264"></td>
          <td id="LC2264" class="blob-code blob-code-inner js-file-line">In a generator function, the yield keyword substitutes the return statement.</td>
        </tr>
        <tr>
          <td id="L2265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2265"></td>
          <td id="LC2265" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2266"></td>
          <td id="LC2266" class="blob-code blob-code-inner js-file-line"># Simple Python function</td>
        </tr>
        <tr>
          <td id="L2267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2267"></td>
          <td id="LC2267" class="blob-code blob-code-inner js-file-line">def fn():</td>
        </tr>
        <tr>
          <td id="L2268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2268"></td>
          <td id="LC2268" class="blob-code blob-code-inner js-file-line">    return &quot;Simple Python function.&quot;</td>
        </tr>
        <tr>
          <td id="L2269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2269"></td>
          <td id="LC2269" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2270"></td>
          <td id="LC2270" class="blob-code blob-code-inner js-file-line"># Python Generator function</td>
        </tr>
        <tr>
          <td id="L2271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2271"></td>
          <td id="LC2271" class="blob-code blob-code-inner js-file-line">def generate():</td>
        </tr>
        <tr>
          <td id="L2272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2272"></td>
          <td id="LC2272" class="blob-code blob-code-inner js-file-line">    yield &quot;Python Generator function.&quot;</td>
        </tr>
        <tr>
          <td id="L2273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2273"></td>
          <td id="LC2273" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2274"></td>
          <td id="LC2274" class="blob-code blob-code-inner js-file-line">print(next(generate()))</td>
        </tr>
        <tr>
          <td id="L2275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2275"></td>
          <td id="LC2275" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2276"></td>
          <td id="LC2276" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2277"></td>
          <td id="LC2277" class="blob-code blob-code-inner js-file-line">Python Generator function.</td>
        </tr>
        <tr>
          <td id="L2278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2278"></td>
          <td id="LC2278" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2279"></td>
          <td id="LC2279" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2280"></td>
          <td id="LC2280" class="blob-code blob-code-inner js-file-line">238.What Are Closures In Python?</td>
        </tr>
        <tr>
          <td id="L2281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2281"></td>
          <td id="LC2281" class="blob-code blob-code-inner js-file-line">Ans: Python closures are function objects returned by another function. We use them to eliminate code redundancy.</td>
        </tr>
        <tr>
          <td id="L2282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2282"></td>
          <td id="LC2282" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2283"></td>
          <td id="LC2283" class="blob-code blob-code-inner js-file-line">In the example below, we’ve written a simple closure for multiplying numbers.</td>
        </tr>
        <tr>
          <td id="L2284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2284"></td>
          <td id="LC2284" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2285"></td>
          <td id="LC2285" class="blob-code blob-code-inner js-file-line">def multiply_number(num):</td>
        </tr>
        <tr>
          <td id="L2286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2286"></td>
          <td id="LC2286" class="blob-code blob-code-inner js-file-line">    def product(number):</td>
        </tr>
        <tr>
          <td id="L2287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2287"></td>
          <td id="LC2287" class="blob-code blob-code-inner js-file-line">        &#39;product() here is a closure&#39;</td>
        </tr>
        <tr>
          <td id="L2288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2288"></td>
          <td id="LC2288" class="blob-code blob-code-inner js-file-line">        return num * number</td>
        </tr>
        <tr>
          <td id="L2289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2289"></td>
          <td id="LC2289" class="blob-code blob-code-inner js-file-line">    return product</td>
        </tr>
        <tr>
          <td id="L2290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2290"></td>
          <td id="LC2290" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2291"></td>
          <td id="LC2291" class="blob-code blob-code-inner js-file-line">num_2 = multiply_number(2)</td>
        </tr>
        <tr>
          <td id="L2292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2292"></td>
          <td id="LC2292" class="blob-code blob-code-inner js-file-line">print(num_2(11))</td>
        </tr>
        <tr>
          <td id="L2293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2293"></td>
          <td id="LC2293" class="blob-code blob-code-inner js-file-line">print(num_2(24))</td>
        </tr>
        <tr>
          <td id="L2294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2294"></td>
          <td id="LC2294" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2295"></td>
          <td id="LC2295" class="blob-code blob-code-inner js-file-line">num_6 = multiply_number(6)</td>
        </tr>
        <tr>
          <td id="L2296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2296"></td>
          <td id="LC2296" class="blob-code blob-code-inner js-file-line">print(num_6(1))</td>
        </tr>
        <tr>
          <td id="L2297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2297"></td>
          <td id="LC2297" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2298"></td>
          <td id="LC2298" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2299"></td>
          <td id="LC2299" class="blob-code blob-code-inner js-file-line">22</td>
        </tr>
        <tr>
          <td id="L2300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2300"></td>
          <td id="LC2300" class="blob-code blob-code-inner js-file-line">48</td>
        </tr>
        <tr>
          <td id="L2301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2301"></td>
          <td id="LC2301" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L2302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2302"></td>
          <td id="LC2302" class="blob-code blob-code-inner js-file-line">239. What Are Decorators In Python?</td>
        </tr>
        <tr>
          <td id="L2303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2303"></td>
          <td id="LC2303" class="blob-code blob-code-inner js-file-line">Ans: Python decorator gives us the ability to add new behavior to the given objects dynamically. In the example below, we’ve written a simple example to display a message pre and post the execution of a function.</td>
        </tr>
        <tr>
          <td id="L2304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2304"></td>
          <td id="LC2304" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2305"></td>
          <td id="LC2305" class="blob-code blob-code-inner js-file-line">def decorator_sample(func):</td>
        </tr>
        <tr>
          <td id="L2306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2306"></td>
          <td id="LC2306" class="blob-code blob-code-inner js-file-line">    def decorator_hook(*args, **kwargs):</td>
        </tr>
        <tr>
          <td id="L2307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2307"></td>
          <td id="LC2307" class="blob-code blob-code-inner js-file-line">        print(&quot;Before the function call&quot;)</td>
        </tr>
        <tr>
          <td id="L2308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2308"></td>
          <td id="LC2308" class="blob-code blob-code-inner js-file-line">        result = func(*args, **kwargs)</td>
        </tr>
        <tr>
          <td id="L2309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2309"></td>
          <td id="LC2309" class="blob-code blob-code-inner js-file-line">        print(&quot;After the function call&quot;)</td>
        </tr>
        <tr>
          <td id="L2310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2310"></td>
          <td id="LC2310" class="blob-code blob-code-inner js-file-line">        return result</td>
        </tr>
        <tr>
          <td id="L2311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2311"></td>
          <td id="LC2311" class="blob-code blob-code-inner js-file-line">    return decorator_hook</td>
        </tr>
        <tr>
          <td id="L2312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2312"></td>
          <td id="LC2312" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2313"></td>
          <td id="LC2313" class="blob-code blob-code-inner js-file-line">@decorator_sample</td>
        </tr>
        <tr>
          <td id="L2314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2314"></td>
          <td id="LC2314" class="blob-code blob-code-inner js-file-line">def product(x, y):</td>
        </tr>
        <tr>
          <td id="L2315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2315"></td>
          <td id="LC2315" class="blob-code blob-code-inner js-file-line">    &quot;Function to multiply two numbers.&quot;</td>
        </tr>
        <tr>
          <td id="L2316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2316"></td>
          <td id="LC2316" class="blob-code blob-code-inner js-file-line">    return x * y</td>
        </tr>
        <tr>
          <td id="L2317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2317"></td>
          <td id="LC2317" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2318"></td>
          <td id="LC2318" class="blob-code blob-code-inner js-file-line">print(product(3, 3))</td>
        </tr>
        <tr>
          <td id="L2319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2319"></td>
          <td id="LC2319" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2320"></td>
          <td id="LC2320" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2321"></td>
          <td id="LC2321" class="blob-code blob-code-inner js-file-line">Before the function call</td>
        </tr>
        <tr>
          <td id="L2322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2322"></td>
          <td id="LC2322" class="blob-code blob-code-inner js-file-line">After the function call</td>
        </tr>
        <tr>
          <td id="L2323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2323"></td>
          <td id="LC2323" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L2324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2324"></td>
          <td id="LC2324" class="blob-code blob-code-inner js-file-line">240. How Do You Create A Dictionary In Python?</td>
        </tr>
        <tr>
          <td id="L2325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2325"></td>
          <td id="LC2325" class="blob-code blob-code-inner js-file-line">Ans: Let’s take the example of building site statistics. For this, we first need to break up the key-value pairs using a colon(“:”). The keys should be of an immutable type, i.e., so we’ll use the data-types which don’t allow changes at runtime. We’ll choose from an int, string, or tuple.</td>
        </tr>
        <tr>
          <td id="L2326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2326"></td>
          <td id="LC2326" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2327"></td>
          <td id="LC2327" class="blob-code blob-code-inner js-file-line">However, we can take values of any kind. For distinguishing the data pairs, we can use a comma(“,”) and keep the whole stuff inside curly braces({…}).</td>
        </tr>
        <tr>
          <td id="L2328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2328"></td>
          <td id="LC2328" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2329"></td>
          <td id="LC2329" class="blob-code blob-code-inner js-file-line"> &gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2330"></td>
          <td id="LC2330" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(site_stats)</td>
        </tr>
        <tr>
          <td id="L2331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2331"></td>
          <td id="LC2331" class="blob-code blob-code-inner js-file-line">&lt;class &#39;dict&#39;&gt;</td>
        </tr>
        <tr>
          <td id="L2332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2332"></td>
          <td id="LC2332" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2333"></td>
          <td id="LC2333" class="blob-code blob-code-inner js-file-line">{&#39;type&#39;: &#39;organic&#39;, &#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000}</td>
        </tr>
        <tr>
          <td id="L2334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2334"></td>
          <td id="LC2334" class="blob-code blob-code-inner js-file-line">241. How Do You Read From A Dictionary In Python?</td>
        </tr>
        <tr>
          <td id="L2335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2335"></td>
          <td id="LC2335" class="blob-code blob-code-inner js-file-line">Ans:To fetch data from a dictionary, we can directly access using the keys. We can enclose a “key” using brackets […] after mentioning the variable name corresponding to the dictionary.</td>
        </tr>
        <tr>
          <td id="L2336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2336"></td>
          <td id="LC2336" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2337"></td>
          <td id="LC2337" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2338"></td>
          <td id="LC2338" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats[&quot;traffic&quot;])</td>
        </tr>
        <tr>
          <td id="L2339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2339"></td>
          <td id="LC2339" class="blob-code blob-code-inner js-file-line">We can even call the get method to fetch the values from a dict. It also let us set a default value. If the key is missing, then the KeyError would occur.</td>
        </tr>
        <tr>
          <td id="L2340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2340"></td>
          <td id="LC2340" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2341"></td>
          <td id="LC2341" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2342"></td>
          <td id="LC2342" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats.get(&#39;site&#39;))</td>
        </tr>
        <tr>
          <td id="L2343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2343"></td>
          <td id="LC2343" class="blob-code blob-code-inner js-file-line">tecbeamers.com</td>
        </tr>
        <tr>
          <td id="L2344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2344"></td>
          <td id="LC2344" class="blob-code blob-code-inner js-file-line">242. How Do You Traverse Through A Dictionary Object In Python?</td>
        </tr>
        <tr>
          <td id="L2345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2345"></td>
          <td id="LC2345" class="blob-code blob-code-inner js-file-line">Ans: We can use the “for” and “in” loop for traversing the dictionary object.</td>
        </tr>
        <tr>
          <td id="L2346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2346"></td>
          <td id="LC2346" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2347"></td>
          <td id="LC2347" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2348"></td>
          <td id="LC2348" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; for k, v in site_stats.items():</td>
        </tr>
        <tr>
          <td id="L2349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2349"></td>
          <td id="LC2349" class="blob-code blob-code-inner js-file-line">    print(&quot;The key is: %s&quot; % k)</td>
        </tr>
        <tr>
          <td id="L2350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2350"></td>
          <td id="LC2350" class="blob-code blob-code-inner js-file-line">    print(&quot;The value is: %s&quot; % v)</td>
        </tr>
        <tr>
          <td id="L2351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2351"></td>
          <td id="LC2351" class="blob-code blob-code-inner js-file-line">    print(&quot;++++++++++++++++++++++++&quot;)</td>
        </tr>
        <tr>
          <td id="L2352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2352"></td>
          <td id="LC2352" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2353"></td>
          <td id="LC2353" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2354"></td>
          <td id="LC2354" class="blob-code blob-code-inner js-file-line">The key is: type</td>
        </tr>
        <tr>
          <td id="L2355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2355"></td>
          <td id="LC2355" class="blob-code blob-code-inner js-file-line">The value is: organic</td>
        </tr>
        <tr>
          <td id="L2356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2356"></td>
          <td id="LC2356" class="blob-code blob-code-inner js-file-line">++++++++++++++++++++++++</td>
        </tr>
        <tr>
          <td id="L2357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2357"></td>
          <td id="LC2357" class="blob-code blob-code-inner js-file-line">The key is: site</td>
        </tr>
        <tr>
          <td id="L2358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2358"></td>
          <td id="LC2358" class="blob-code blob-code-inner js-file-line">The value is: tecbeamers.com</td>
        </tr>
        <tr>
          <td id="L2359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2359"></td>
          <td id="LC2359" class="blob-code blob-code-inner js-file-line">++++++++++++++++++++++++</td>
        </tr>
        <tr>
          <td id="L2360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2360"></td>
          <td id="LC2360" class="blob-code blob-code-inner js-file-line">The key is: traffic</td>
        </tr>
        <tr>
          <td id="L2361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2361"></td>
          <td id="LC2361" class="blob-code blob-code-inner js-file-line">The value is: 10000</td>
        </tr>
        <tr>
          <td id="L2362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2362"></td>
          <td id="LC2362" class="blob-code blob-code-inner js-file-line">++++++++++++++++++++++++</td>
        </tr>
        <tr>
          <td id="L2363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2363"></td>
          <td id="LC2363" class="blob-code blob-code-inner js-file-line">243. How Do You Add Elements To A Dictionary In Python?</td>
        </tr>
        <tr>
          <td id="L2364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2364"></td>
          <td id="LC2364" class="blob-code blob-code-inner js-file-line">Ans: We can add elements by modifying the dictionary with a fresh key and then set the value to it.</td>
        </tr>
        <tr>
          <td id="L2365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2365"></td>
          <td id="LC2365" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2366"></td>
          <td id="LC2366" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; # Setup a blank dictionary</td>
        </tr>
        <tr>
          <td id="L2367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2367"></td>
          <td id="LC2367" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {}</td>
        </tr>
        <tr>
          <td id="L2368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2368"></td>
          <td id="LC2368" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats[&#39;site&#39;] = &#39;google.com&#39;</td>
        </tr>
        <tr>
          <td id="L2369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2369"></td>
          <td id="LC2369" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats[&#39;traffic&#39;] = 10000000000</td>
        </tr>
        <tr>
          <td id="L2370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2370"></td>
          <td id="LC2370" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats[&#39;type&#39;] = &#39;Referral&#39;</td>
        </tr>
        <tr>
          <td id="L2371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2371"></td>
          <td id="LC2371" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2372"></td>
          <td id="LC2372" class="blob-code blob-code-inner js-file-line">{&#39;type&#39;: &#39;Referral&#39;, &#39;site&#39;: &#39;google.com&#39;, &#39;traffic&#39;: 10000000000}</td>
        </tr>
        <tr>
          <td id="L2373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2373"></td>
          <td id="LC2373" class="blob-code blob-code-inner js-file-line">We can even join two dictionaries to get a bigger dictionary with the help of the update() method.</td>
        </tr>
        <tr>
          <td id="L2374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2374"></td>
          <td id="LC2374" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2375"></td>
          <td id="LC2375" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats[&#39;site&#39;] = &#39;google.co.in&#39;</td>
        </tr>
        <tr>
          <td id="L2376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2376"></td>
          <td id="LC2376" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2377"></td>
          <td id="LC2377" class="blob-code blob-code-inner js-file-line">{&#39;site&#39;: &#39;google.co.in&#39;}</td>
        </tr>
        <tr>
          <td id="L2378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2378"></td>
          <td id="LC2378" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats_new = {&#39;traffic&#39;: 1000000, &quot;type&quot;: &quot;social media&quot;}</td>
        </tr>
        <tr>
          <td id="L2379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2379"></td>
          <td id="LC2379" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats.update(site_stats_new)</td>
        </tr>
        <tr>
          <td id="L2380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2380"></td>
          <td id="LC2380" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2381"></td>
          <td id="LC2381" class="blob-code blob-code-inner js-file-line">{&#39;type&#39;: &#39;social media&#39;, &#39;site&#39;: &#39;google.co.in&#39;, &#39;traffic&#39;: 1000000}</td>
        </tr>
        <tr>
          <td id="L2382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2382"></td>
          <td id="LC2382" class="blob-code blob-code-inner js-file-line">244. How Do You Delete Elements Of A Dictionary In Python?</td>
        </tr>
        <tr>
          <td id="L2383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2383"></td>
          <td id="LC2383" class="blob-code blob-code-inner js-file-line">Ans: We can delete a key in a dictionary by using the del() method.</td>
        </tr>
        <tr>
          <td id="L2384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2384"></td>
          <td id="LC2384" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2385"></td>
          <td id="LC2385" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2386"></td>
          <td id="LC2386" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; del site_stats[&quot;type&quot;]</td>
        </tr>
        <tr>
          <td id="L2387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2387"></td>
          <td id="LC2387" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2388"></td>
          <td id="LC2388" class="blob-code blob-code-inner js-file-line">{&#39;site&#39;: &#39;google.co.in&#39;, &#39;traffic&#39;: 1000000}</td>
        </tr>
        <tr>
          <td id="L2389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2389"></td>
          <td id="LC2389" class="blob-code blob-code-inner js-file-line">Another method, we can use is the pop() function. It accepts the key as the parameter. Also, a second parameter, we can pass a default value if the key doesn’t exist.</td>
        </tr>
        <tr>
          <td id="L2390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2390"></td>
          <td id="LC2390" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2391"></td>
          <td id="LC2391" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2392"></td>
          <td id="LC2392" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats.pop(&quot;type&quot;, None))</td>
        </tr>
        <tr>
          <td id="L2393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2393"></td>
          <td id="LC2393" class="blob-code blob-code-inner js-file-line">organic</td>
        </tr>
        <tr>
          <td id="L2394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2394"></td>
          <td id="LC2394" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(site_stats)</td>
        </tr>
        <tr>
          <td id="L2395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2395"></td>
          <td id="LC2395" class="blob-code blob-code-inner js-file-line">{&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000}</td>
        </tr>
        <tr>
          <td id="L2396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2396"></td>
          <td id="LC2396" class="blob-code blob-code-inner js-file-line">245. How Do You Check The Presence Of A Key In A Dictionary?</td>
        </tr>
        <tr>
          <td id="L2397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2397"></td>
          <td id="LC2397" class="blob-code blob-code-inner js-file-line">Ans: We can use Python’s “in” operator to test the presence of a key inside a dict object.</td>
        </tr>
        <tr>
          <td id="L2398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2398"></td>
          <td id="LC2398" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2399"></td>
          <td id="LC2399" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; site_stats = {&#39;site&#39;: &#39;tecbeamers.com&#39;, &#39;traffic&#39;: 10000, &quot;type&quot;: &quot;organic&quot;}</td>
        </tr>
        <tr>
          <td id="L2400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2400"></td>
          <td id="LC2400" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; &#39;site&#39; in site_stats</td>
        </tr>
        <tr>
          <td id="L2401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2401"></td>
          <td id="LC2401" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2402"></td>
          <td id="LC2402" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; &#39;traffic&#39; in site_stats</td>
        </tr>
        <tr>
          <td id="L2403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2403"></td>
          <td id="LC2403" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2404"></td>
          <td id="LC2404" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; &quot;type&quot; in site_stats</td>
        </tr>
        <tr>
          <td id="L2405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2405"></td>
          <td id="LC2405" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2406"></td>
          <td id="LC2406" class="blob-code blob-code-inner js-file-line">Earlier, Python also provided the has_key() method which got deprecated.</td>
        </tr>
        <tr>
          <td id="L2407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2407"></td>
          <td id="LC2407" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2408"></td>
          <td id="LC2408" class="blob-code blob-code-inner js-file-line">246. What Is The Syntax For List Comprehension In Python?</td>
        </tr>
        <tr>
          <td id="L2409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2409"></td>
          <td id="LC2409" class="blob-code blob-code-inner js-file-line">Ans: The signature for the list comprehension is as follows:</td>
        </tr>
        <tr>
          <td id="L2410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2410"></td>
          <td id="LC2410" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2411"></td>
          <td id="LC2411" class="blob-code blob-code-inner js-file-line">[ expression(var) for var in iterable ]</td>
        </tr>
        <tr>
          <td id="L2412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2412"></td>
          <td id="LC2412" class="blob-code blob-code-inner js-file-line">For example, the below code will return all the numbers from 10 to 20 and store them in a list.</td>
        </tr>
        <tr>
          <td id="L2413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2413"></td>
          <td id="LC2413" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2414"></td>
          <td id="LC2414" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; alist = [var for var in range(10, 20)]</td>
        </tr>
        <tr>
          <td id="L2415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2415"></td>
          <td id="LC2415" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(alist)</td>
        </tr>
        <tr>
          <td id="L2416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2416"></td>
          <td id="LC2416" class="blob-code blob-code-inner js-file-line">247. What Is The Syntax For Dictionary Comprehension In Python?</td>
        </tr>
        <tr>
          <td id="L2417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2417"></td>
          <td id="LC2417" class="blob-code blob-code-inner js-file-line">A dictionary has the same syntax as was for the list comprehension but the difference is that it uses curly braces:</td>
        </tr>
        <tr>
          <td id="L2418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2418"></td>
          <td id="LC2418" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2419"></td>
          <td id="LC2419" class="blob-code blob-code-inner js-file-line">{ aKey, itsValue for aKey in iterable }</td>
        </tr>
        <tr>
          <td id="L2420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2420"></td>
          <td id="LC2420" class="blob-code blob-code-inner js-file-line">For example, the below code will return all the numbers 10 to 20 as the keys and will store the respective squares of those numbers as the values.</td>
        </tr>
        <tr>
          <td id="L2421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2421"></td>
          <td id="LC2421" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2422"></td>
          <td id="LC2422" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; adict = {var:var**2 for var in range(10, 20)}</td>
        </tr>
        <tr>
          <td id="L2423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2423"></td>
          <td id="LC2423" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(adict)</td>
        </tr>
        <tr>
          <td id="L2424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2424"></td>
          <td id="LC2424" class="blob-code blob-code-inner js-file-line">248. What Is The Syntax For Generator Expression In Python?</td>
        </tr>
        <tr>
          <td id="L2425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2425"></td>
          <td id="LC2425" class="blob-code blob-code-inner js-file-line">Ans: The syntax for generator expression matches with the list comprehension, but the difference is that it uses parenthesis:</td>
        </tr>
        <tr>
          <td id="L2426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2426"></td>
          <td id="LC2426" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2427"></td>
          <td id="LC2427" class="blob-code blob-code-inner js-file-line">( expression(var) for var in iterable )</td>
        </tr>
        <tr>
          <td id="L2428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2428"></td>
          <td id="LC2428" class="blob-code blob-code-inner js-file-line">For example, the below code will create a generator object that generates the values from 10 to 20 upon using it.</td>
        </tr>
        <tr>
          <td id="L2429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2429"></td>
          <td id="LC2429" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2430"></td>
          <td id="LC2430" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; (var for var in range(10, 20))</td>
        </tr>
        <tr>
          <td id="L2431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2431"></td>
          <td id="LC2431" class="blob-code blob-code-inner js-file-line"> at 0x0000000003668728&gt;</td>
        </tr>
        <tr>
          <td id="L2432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2432"></td>
          <td id="LC2432" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list((var for var in range(10, 20)))</td>
        </tr>
        <tr>
          <td id="L2433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2433"></td>
          <td id="LC2433" class="blob-code blob-code-inner js-file-line">Now, see more Python interview questions for practice.</td>
        </tr>
        <tr>
          <td id="L2434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2434"></td>
          <td id="LC2434" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2435"></td>
          <td id="LC2435" class="blob-code blob-code-inner js-file-line">249. How Do You Write A Conditional Expression In Python?</td>
        </tr>
        <tr>
          <td id="L2436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2436"></td>
          <td id="LC2436" class="blob-code blob-code-inner js-file-line">Ans: We can utilize the following single statement as a conditional expression. default_statment if Condition else another_statement</td>
        </tr>
        <tr>
          <td id="L2437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2437"></td>
          <td id="LC2437" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2438"></td>
          <td id="LC2438" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; no_of_days = 366</td>
        </tr>
        <tr>
          <td id="L2439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2439"></td>
          <td id="LC2439" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; is_leap_year = &quot;Yes&quot; if no_of_days == 366 else &quot;No&quot;</td>
        </tr>
        <tr>
          <td id="L2440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2440"></td>
          <td id="LC2440" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(is_leap_year)</td>
        </tr>
        <tr>
          <td id="L2441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2441"></td>
          <td id="LC2441" class="blob-code blob-code-inner js-file-line">Yes</td>
        </tr>
        <tr>
          <td id="L2442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2442"></td>
          <td id="LC2442" class="blob-code blob-code-inner js-file-line">250. What Do You Know About The Python Enumerate?</td>
        </tr>
        <tr>
          <td id="L2443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2443"></td>
          <td id="LC2443" class="blob-code blob-code-inner js-file-line">Ans: While using the iterators, sometimes we might have a use case to store the count of iterations. Python gets this task quite easy for us by giving a built-in method known as the enumerate().</td>
        </tr>
        <tr>
          <td id="L2444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2444"></td>
          <td id="LC2444" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2445"></td>
          <td id="LC2445" class="blob-code blob-code-inner js-file-line">The enumerate() function attaches a counter variable to an iterable and returns it as the “enumerated” object.</td>
        </tr>
        <tr>
          <td id="L2446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2446"></td>
          <td id="LC2446" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2447"></td>
          <td id="LC2447" class="blob-code blob-code-inner js-file-line">We can use this object directly in the “for” loops or transform it into a list of tuples by calling the list() method. It has the following signature:</td>
        </tr>
        <tr>
          <td id="L2448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2448"></td>
          <td id="LC2448" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2449"></td>
          <td id="LC2449" class="blob-code blob-code-inner js-file-line">enumerate(iterable, to_begin=0)</td>
        </tr>
        <tr>
          <td id="L2450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2450"></td>
          <td id="LC2450" class="blob-code blob-code-inner js-file-line">Arguments:</td>
        </tr>
        <tr>
          <td id="L2451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2451"></td>
          <td id="LC2451" class="blob-code blob-code-inner js-file-line">iterable: array type object which enables iteration</td>
        </tr>
        <tr>
          <td id="L2452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2452"></td>
          <td id="LC2452" class="blob-code blob-code-inner js-file-line">to_begin: the base index for the counter is to get started, its default value is 0</td>
        </tr>
        <tr>
          <td id="L2453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2453"></td>
          <td id="LC2453" class="blob-code blob-code-inner js-file-line"># Example - enumerate function </td>
        </tr>
        <tr>
          <td id="L2454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2454"></td>
          <td id="LC2454" class="blob-code blob-code-inner js-file-line">alist = [&quot;apple&quot;,&quot;mango&quot;, &quot;orange&quot;] </td>
        </tr>
        <tr>
          <td id="L2455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2455"></td>
          <td id="LC2455" class="blob-code blob-code-inner js-file-line">astr = &quot;banana&quot;</td>
        </tr>
        <tr>
          <td id="L2456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2456"></td>
          <td id="LC2456" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2457"></td>
          <td id="LC2457" class="blob-code blob-code-inner js-file-line"># Let&#39;s set the enumerate objects </td>
        </tr>
        <tr>
          <td id="L2458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2458"></td>
          <td id="LC2458" class="blob-code blob-code-inner js-file-line">list_obj = enumerate(alist) </td>
        </tr>
        <tr>
          <td id="L2459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2459"></td>
          <td id="LC2459" class="blob-code blob-code-inner js-file-line">str_obj = enumerate(astr) </td>
        </tr>
        <tr>
          <td id="L2460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2460"></td>
          <td id="LC2460" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2461"></td>
          <td id="LC2461" class="blob-code blob-code-inner js-file-line">print(&quot;list_obj type:&quot;, type(list_obj))</td>
        </tr>
        <tr>
          <td id="L2462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2462"></td>
          <td id="LC2462" class="blob-code blob-code-inner js-file-line">print(&quot;str_obj type:&quot;, type(str_obj))</td>
        </tr>
        <tr>
          <td id="L2463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2463"></td>
          <td id="LC2463" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2464"></td>
          <td id="LC2464" class="blob-code blob-code-inner js-file-line">print(list(enumerate(alist)) )  </td>
        </tr>
        <tr>
          <td id="L2465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2465"></td>
          <td id="LC2465" class="blob-code blob-code-inner js-file-line"># Move the starting index to two from zero</td>
        </tr>
        <tr>
          <td id="L2466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2466"></td>
          <td id="LC2466" class="blob-code blob-code-inner js-file-line">print(list(enumerate(astr, 2)))</td>
        </tr>
        <tr>
          <td id="L2467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2467"></td>
          <td id="LC2467" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2468"></td>
          <td id="LC2468" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2469"></td>
          <td id="LC2469" class="blob-code blob-code-inner js-file-line">list_obj type: &lt;class &#39;enumerate&#39;&gt;</td>
        </tr>
        <tr>
          <td id="L2470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2470"></td>
          <td id="LC2470" class="blob-code blob-code-inner js-file-line">str_obj type: &lt;class &#39;enumerate&#39;&gt;</td>
        </tr>
        <tr>
          <td id="L2471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2471"></td>
          <td id="LC2471" class="blob-code blob-code-inner js-file-line">[(0, &#39;apple&#39;), (1, &#39;mango&#39;), (2, &#39;orange&#39;)]</td>
        </tr>
        <tr>
          <td id="L2472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2472"></td>
          <td id="LC2472" class="blob-code blob-code-inner js-file-line">[(2, &#39;b&#39;), (3, &#39;a&#39;), (4, &#39;n&#39;), (5, &#39;a&#39;), (6, &#39;n&#39;), (7, &#39;a&#39;)]</td>
        </tr>
        <tr>
          <td id="L2473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2473"></td>
          <td id="LC2473" class="blob-code blob-code-inner js-file-line">251. What Is The Use Of Globals() Function In Python?</td>
        </tr>
        <tr>
          <td id="L2474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2474"></td>
          <td id="LC2474" class="blob-code blob-code-inner js-file-line">Ans: The globals() function in Python returns the current global symbol table as a dictionary object.</td>
        </tr>
        <tr>
          <td id="L2475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2475"></td>
          <td id="LC2475" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2476"></td>
          <td id="LC2476" class="blob-code blob-code-inner js-file-line">Python maintains a symbol table to keep all necessary information about a program. This info includes the names of variables, methods, and classes used by the program.</td>
        </tr>
        <tr>
          <td id="L2477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2477"></td>
          <td id="LC2477" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2478"></td>
          <td id="LC2478" class="blob-code blob-code-inner js-file-line">All the information in this table remains in the global scope of the program and Python allows us to retrieve it using the globals() method.</td>
        </tr>
        <tr>
          <td id="L2479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2479"></td>
          <td id="LC2479" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2480"></td>
          <td id="LC2480" class="blob-code blob-code-inner js-file-line">Signature: globals()</td>
        </tr>
        <tr>
          <td id="L2481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2481"></td>
          <td id="LC2481" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2482"></td>
          <td id="LC2482" class="blob-code blob-code-inner js-file-line">Arguments: None</td>
        </tr>
        <tr>
          <td id="L2483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2483"></td>
          <td id="LC2483" class="blob-code blob-code-inner js-file-line"># Example: globals() function </td>
        </tr>
        <tr>
          <td id="L2484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2484"></td>
          <td id="LC2484" class="blob-code blob-code-inner js-file-line">x = 9</td>
        </tr>
        <tr>
          <td id="L2485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2485"></td>
          <td id="LC2485" class="blob-code blob-code-inner js-file-line">def fn(): </td>
        </tr>
        <tr>
          <td id="L2486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2486"></td>
          <td id="LC2486" class="blob-code blob-code-inner js-file-line">    y = 3</td>
        </tr>
        <tr>
          <td id="L2487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2487"></td>
          <td id="LC2487" class="blob-code blob-code-inner js-file-line">    z = y + x</td>
        </tr>
        <tr>
          <td id="L2488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2488"></td>
          <td id="LC2488" class="blob-code blob-code-inner js-file-line">    # Calling the globals() method</td>
        </tr>
        <tr>
          <td id="L2489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2489"></td>
          <td id="LC2489" class="blob-code blob-code-inner js-file-line">    z = globals()[&#39;x&#39;] = z</td>
        </tr>
        <tr>
          <td id="L2490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2490"></td>
          <td id="LC2490" class="blob-code blob-code-inner js-file-line">    return z</td>
        </tr>
        <tr>
          <td id="L2491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2491"></td>
          <td id="LC2491" class="blob-code blob-code-inner js-file-line">       </td>
        </tr>
        <tr>
          <td id="L2492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2492"></td>
          <td id="LC2492" class="blob-code blob-code-inner js-file-line"># Test Code     </td>
        </tr>
        <tr>
          <td id="L2493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2493"></td>
          <td id="LC2493" class="blob-code blob-code-inner js-file-line">ret = fn() </td>
        </tr>
        <tr>
          <td id="L2494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2494"></td>
          <td id="LC2494" class="blob-code blob-code-inner js-file-line">print(ret)</td>
        </tr>
        <tr>
          <td id="L2495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2495"></td>
          <td id="LC2495" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2496"></td>
          <td id="LC2496" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2497"></td>
          <td id="LC2497" class="blob-code blob-code-inner js-file-line">12</td>
        </tr>
        <tr>
          <td id="L2498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2498"></td>
          <td id="LC2498" class="blob-code blob-code-inner js-file-line">252. Why Do You Use The Zip() Method In Python?</td>
        </tr>
        <tr>
          <td id="L2499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2499"></td>
          <td id="LC2499" class="blob-code blob-code-inner js-file-line">Ans: The zip method lets us map the corresponding index of multiple containers so that we can use them using as a single unit.</td>
        </tr>
        <tr>
          <td id="L2500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2500"></td>
          <td id="LC2500" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2501"></td>
          <td id="LC2501" class="blob-code blob-code-inner js-file-line">Signature: </td>
        </tr>
        <tr>
          <td id="L2502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2502"></td>
          <td id="LC2502" class="blob-code blob-code-inner js-file-line"> zip(*iterators)</td>
        </tr>
        <tr>
          <td id="L2503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2503"></td>
          <td id="LC2503" class="blob-code blob-code-inner js-file-line">Arguments: </td>
        </tr>
        <tr>
          <td id="L2504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2504"></td>
          <td id="LC2504" class="blob-code blob-code-inner js-file-line"> Python iterables or collections (e.g., list, string, etc.)</td>
        </tr>
        <tr>
          <td id="L2505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2505"></td>
          <td id="LC2505" class="blob-code blob-code-inner js-file-line">Returns: </td>
        </tr>
        <tr>
          <td id="L2506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2506"></td>
          <td id="LC2506" class="blob-code blob-code-inner js-file-line"> A single iterator object with combined mapped values</td>
        </tr>
        <tr>
          <td id="L2507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2507"></td>
          <td id="LC2507" class="blob-code blob-code-inner js-file-line"># Example: zip() function</td>
        </tr>
        <tr>
          <td id="L2508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2508"></td>
          <td id="LC2508" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2509"></td>
          <td id="LC2509" class="blob-code blob-code-inner js-file-line">emp = [ &quot;tom&quot;, &quot;john&quot;, &quot;jerry&quot;, &quot;jake&quot; ] </td>
        </tr>
        <tr>
          <td id="L2510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2510"></td>
          <td id="LC2510" class="blob-code blob-code-inner js-file-line">age = [ 32, 28, 33, 44 ] </td>
        </tr>
        <tr>
          <td id="L2511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2511"></td>
          <td id="LC2511" class="blob-code blob-code-inner js-file-line">dept = [ &#39;HR&#39;, &#39;Accounts&#39;, &#39;R&amp;D&#39;, &#39;IT&#39; ] </td>
        </tr>
        <tr>
          <td id="L2512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2512"></td>
          <td id="LC2512" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2513"></td>
          <td id="LC2513" class="blob-code blob-code-inner js-file-line"># call zip() to map values </td>
        </tr>
        <tr>
          <td id="L2514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2514"></td>
          <td id="LC2514" class="blob-code blob-code-inner js-file-line">out = zip(emp, age, dept)</td>
        </tr>
        <tr>
          <td id="L2515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2515"></td>
          <td id="LC2515" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2516"></td>
          <td id="LC2516" class="blob-code blob-code-inner js-file-line"># convert all values for printing them as set </td>
        </tr>
        <tr>
          <td id="L2517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2517"></td>
          <td id="LC2517" class="blob-code blob-code-inner js-file-line">out = set(out) </td>
        </tr>
        <tr>
          <td id="L2518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2518"></td>
          <td id="LC2518" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2519"></td>
          <td id="LC2519" class="blob-code blob-code-inner js-file-line"># Displaying the final values  </td>
        </tr>
        <tr>
          <td id="L2520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2520"></td>
          <td id="LC2520" class="blob-code blob-code-inner js-file-line">print (&quot;The output of zip() is : &quot;,end=&quot;&quot;) </td>
        </tr>
        <tr>
          <td id="L2521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2521"></td>
          <td id="LC2521" class="blob-code blob-code-inner js-file-line">print (out)</td>
        </tr>
        <tr>
          <td id="L2522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2522"></td>
          <td id="LC2522" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2523"></td>
          <td id="LC2523" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2524"></td>
          <td id="LC2524" class="blob-code blob-code-inner js-file-line">The output of zip() is : {(&#39;jerry&#39;, 33, &#39;R&amp;D&#39;), (&#39;jake&#39;, 44, &#39;IT&#39;), (&#39;john&#39;, 28, &#39;Accounts&#39;), (&#39;tom&#39;, 32, &#39;HR&#39;)}</td>
        </tr>
        <tr>
          <td id="L2525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2525"></td>
          <td id="LC2525" class="blob-code blob-code-inner js-file-line">253. What Are Class Or Static Variables In Python Programming?</td>
        </tr>
        <tr>
          <td id="L2526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2526"></td>
          <td id="LC2526" class="blob-code blob-code-inner js-file-line">Ans: In Python, all the objects share common class or static variables.</td>
        </tr>
        <tr>
          <td id="L2527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2527"></td>
          <td id="LC2527" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2528"></td>
          <td id="LC2528" class="blob-code blob-code-inner js-file-line">But the instance or non-static variables are altogether different for different objects.</td>
        </tr>
        <tr>
          <td id="L2529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2529"></td>
          <td id="LC2529" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2530"></td>
          <td id="LC2530" class="blob-code blob-code-inner js-file-line">The programming languages like C++ and Java need to use the static keyword to make a variable as the class variable. However, Python has a unique way to declare a static variable.</td>
        </tr>
        <tr>
          <td id="L2531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2531"></td>
          <td id="LC2531" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2532"></td>
          <td id="LC2532" class="blob-code blob-code-inner js-file-line">All names initialized with a value in the class declaration becomes the class variables. And those which get assigned values in the class methods becomes the instance variables.</td>
        </tr>
        <tr>
          <td id="L2533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2533"></td>
          <td id="LC2533" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2534"></td>
          <td id="LC2534" class="blob-code blob-code-inner js-file-line"># Example </td>
        </tr>
        <tr>
          <td id="L2535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2535"></td>
          <td id="LC2535" class="blob-code blob-code-inner js-file-line">class Test: </td>
        </tr>
        <tr>
          <td id="L2536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2536"></td>
          <td id="LC2536" class="blob-code blob-code-inner js-file-line">    aclass = &#39;programming&#39; # A class variable </td>
        </tr>
        <tr>
          <td id="L2537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2537"></td>
          <td id="LC2537" class="blob-code blob-code-inner js-file-line">    def __init__(self, ainst): </td>
        </tr>
        <tr>
          <td id="L2538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2538"></td>
          <td id="LC2538" class="blob-code blob-code-inner js-file-line">        self.ainst = ainst # An instance variable </td>
        </tr>
        <tr>
          <td id="L2539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2539"></td>
          <td id="LC2539" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2540"></td>
          <td id="LC2540" class="blob-code blob-code-inner js-file-line"># Objects of CSStudent class </td>
        </tr>
        <tr>
          <td id="L2541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2541"></td>
          <td id="LC2541" class="blob-code blob-code-inner js-file-line">test1 = Test(1) </td>
        </tr>
        <tr>
          <td id="L2542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2542"></td>
          <td id="LC2542" class="blob-code blob-code-inner js-file-line">test2 = Test(2) </td>
        </tr>
        <tr>
          <td id="L2543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2543"></td>
          <td id="LC2543" class="blob-code blob-code-inner js-file-line">  </td>
        </tr>
        <tr>
          <td id="L2544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2544"></td>
          <td id="LC2544" class="blob-code blob-code-inner js-file-line">print(test1.aclass)</td>
        </tr>
        <tr>
          <td id="L2545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2545"></td>
          <td id="LC2545" class="blob-code blob-code-inner js-file-line">print(test2.aclass)</td>
        </tr>
        <tr>
          <td id="L2546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2546"></td>
          <td id="LC2546" class="blob-code blob-code-inner js-file-line">print(test1.ainst)</td>
        </tr>
        <tr>
          <td id="L2547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2547"></td>
          <td id="LC2547" class="blob-code blob-code-inner js-file-line">print(test2.ainst)</td>
        </tr>
        <tr>
          <td id="L2548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2548"></td>
          <td id="LC2548" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2549"></td>
          <td id="LC2549" class="blob-code blob-code-inner js-file-line"># A class variable is also accessible using the class name</td>
        </tr>
        <tr>
          <td id="L2550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2550"></td>
          <td id="LC2550" class="blob-code blob-code-inner js-file-line">print(Test.aclass)</td>
        </tr>
        <tr>
          <td id="L2551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2551"></td>
          <td id="LC2551" class="blob-code blob-code-inner js-file-line">The output is:</td>
        </tr>
        <tr>
          <td id="L2552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2552"></td>
          <td id="LC2552" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2553"></td>
          <td id="LC2553" class="blob-code blob-code-inner js-file-line">programming</td>
        </tr>
        <tr>
          <td id="L2554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2554"></td>
          <td id="LC2554" class="blob-code blob-code-inner js-file-line">programming</td>
        </tr>
        <tr>
          <td id="L2555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2555"></td>
          <td id="LC2555" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L2556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2556"></td>
          <td id="LC2556" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L2557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2557"></td>
          <td id="LC2557" class="blob-code blob-code-inner js-file-line">programming</td>
        </tr>
        <tr>
          <td id="L2558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2558"></td>
          <td id="LC2558" class="blob-code blob-code-inner js-file-line">Let’s now answer some advanced-level Python interview questions.</td>
        </tr>
        <tr>
          <td id="L2559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2559"></td>
          <td id="LC2559" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2560"></td>
          <td id="LC2560" class="blob-code blob-code-inner js-file-line">254. How Does The Ternary Operator Work In Python?</td>
        </tr>
        <tr>
          <td id="L2561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2561"></td>
          <td id="LC2561" class="blob-code blob-code-inner js-file-line">Ans: The ternary operator is an alternative for the conditional statements. It combines true or false values with a statement that you need to test.</td>
        </tr>
        <tr>
          <td id="L2562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2562"></td>
          <td id="LC2562" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2563"></td>
          <td id="LC2563" class="blob-code blob-code-inner js-file-line">The syntax would look like the one given below.</td>
        </tr>
        <tr>
          <td id="L2564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2564"></td>
          <td id="LC2564" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2565"></td>
          <td id="LC2565" class="blob-code blob-code-inner js-file-line">[onTrue] if [Condition] else [onFalse]</td>
        </tr>
        <tr>
          <td id="L2566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2566"></td>
          <td id="LC2566" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2567"></td>
          <td id="LC2567" class="blob-code blob-code-inner js-file-line">x, y = 35, 75</td>
        </tr>
        <tr>
          <td id="L2568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2568"></td>
          <td id="LC2568" class="blob-code blob-code-inner js-file-line">smaller = x if x &lt; y else y</td>
        </tr>
        <tr>
          <td id="L2569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2569"></td>
          <td id="LC2569" class="blob-code blob-code-inner js-file-line">print(smaller)</td>
        </tr>
        <tr>
          <td id="L2570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2570"></td>
          <td id="LC2570" class="blob-code blob-code-inner js-file-line">255. What Does The “Self” Keyword Do?</td>
        </tr>
        <tr>
          <td id="L2571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2571"></td>
          <td id="LC2571" class="blob-code blob-code-inner js-file-line">Ans: The self is a Python keyword which represents a variable that holds the instance of an object.</td>
        </tr>
        <tr>
          <td id="L2572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2572"></td>
          <td id="LC2572" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2573"></td>
          <td id="LC2573" class="blob-code blob-code-inner js-file-line">In almost, all the object-oriented languages, it is passed to the methods as a hidden parameter.</td>
        </tr>
        <tr>
          <td id="L2574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2574"></td>
          <td id="LC2574" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2575"></td>
          <td id="LC2575" class="blob-code blob-code-inner js-file-line">256. What Are The Different Methods To Copy An Object In Python?</td>
        </tr>
        <tr>
          <td id="L2576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2576"></td>
          <td id="LC2576" class="blob-code blob-code-inner js-file-line">Ans: There are two ways to copy objects in Python.</td>
        </tr>
        <tr>
          <td id="L2577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2577"></td>
          <td id="LC2577" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2578"></td>
          <td id="LC2578" class="blob-code blob-code-inner js-file-line">copy.copy() function</td>
        </tr>
        <tr>
          <td id="L2579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2579"></td>
          <td id="LC2579" class="blob-code blob-code-inner js-file-line">It makes a copy of the file from source to destination.</td>
        </tr>
        <tr>
          <td id="L2580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2580"></td>
          <td id="LC2580" class="blob-code blob-code-inner js-file-line">It’ll return a shallow copy of the parameter.</td>
        </tr>
        <tr>
          <td id="L2581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2581"></td>
          <td id="LC2581" class="blob-code blob-code-inner js-file-line">copy.deepcopy() function</td>
        </tr>
        <tr>
          <td id="L2582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2582"></td>
          <td id="LC2582" class="blob-code blob-code-inner js-file-line">It also produces the copy of an object from the source to destination.</td>
        </tr>
        <tr>
          <td id="L2583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2583"></td>
          <td id="LC2583" class="blob-code blob-code-inner js-file-line">It’ll return a deep copy of the parameter that you can pass to the function.</td>
        </tr>
        <tr>
          <td id="L2584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2584"></td>
          <td id="LC2584" class="blob-code blob-code-inner js-file-line">257: What Is The Purpose Of Docstrings In Python?</td>
        </tr>
        <tr>
          <td id="L2585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2585"></td>
          <td id="LC2585" class="blob-code blob-code-inner js-file-line">Ans: In Python, the docstring is what we call as the docstrings. It sets a process of recording Python functions, modules, and classes.</td>
        </tr>
        <tr>
          <td id="L2586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2586"></td>
          <td id="LC2586" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2587"></td>
          <td id="LC2587" class="blob-code blob-code-inner js-file-line">258. Which Python Function Will You Use To Convert A Number To A String?</td>
        </tr>
        <tr>
          <td id="L2588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2588"></td>
          <td id="LC2588" class="blob-code blob-code-inner js-file-line">Ans: For converting a number into a string, you can use the built-in function str().  If you want an octal or hexadecimal representation, use the inbuilt function oct() or hex().</td>
        </tr>
        <tr>
          <td id="L2589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2589"></td>
          <td id="LC2589" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2590"></td>
          <td id="LC2590" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2591"></td>
          <td id="LC2591" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2592"></td>
          <td id="LC2592" class="blob-code blob-code-inner js-file-line">259. How Do You Debug A Program In Python? Is It Possible To Step Through The Python Code?</td>
        </tr>
        <tr>
          <td id="L2593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2593"></td>
          <td id="LC2593" class="blob-code blob-code-inner js-file-line">Ans: Yes, we can use the Python debugger (pdb) to debug any Python program. And if we start a program using pdb, then it let us even step through the code.</td>
        </tr>
        <tr>
          <td id="L2594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2594"></td>
          <td id="LC2594" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2595"></td>
          <td id="LC2595" class="blob-code blob-code-inner js-file-line">260. List Down Some Of The PDB Commands For Debugging Python Programs?</td>
        </tr>
        <tr>
          <td id="L2596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2596"></td>
          <td id="LC2596" class="blob-code blob-code-inner js-file-line">Ans: Here are a few PDB commands to start debugging Python code.</td>
        </tr>
        <tr>
          <td id="L2597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2597"></td>
          <td id="LC2597" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2598"></td>
          <td id="LC2598" class="blob-code blob-code-inner js-file-line">Add breakpoint (b)</td>
        </tr>
        <tr>
          <td id="L2599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2599"></td>
          <td id="LC2599" class="blob-code blob-code-inner js-file-line">Resume execution (c)</td>
        </tr>
        <tr>
          <td id="L2600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2600"></td>
          <td id="LC2600" class="blob-code blob-code-inner js-file-line">Step by step debugging (s)</td>
        </tr>
        <tr>
          <td id="L2601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2601"></td>
          <td id="LC2601" class="blob-code blob-code-inner js-file-line">Move to the next line (n)</td>
        </tr>
        <tr>
          <td id="L2602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2602"></td>
          <td id="LC2602" class="blob-code blob-code-inner js-file-line">List source code (l)</td>
        </tr>
        <tr>
          <td id="L2603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2603"></td>
          <td id="LC2603" class="blob-code blob-code-inner js-file-line">Print an expression (p)</td>
        </tr>
        <tr>
          <td id="L2604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2604"></td>
          <td id="LC2604" class="blob-code blob-code-inner js-file-line">261. What Is The Command To Debug A Python Program?</td>
        </tr>
        <tr>
          <td id="L2605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2605"></td>
          <td id="LC2605" class="blob-code blob-code-inner js-file-line">Ans: The following command helps run a Python program in debug mode.</td>
        </tr>
        <tr>
          <td id="L2606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2606"></td>
          <td id="LC2606" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2607"></td>
          <td id="LC2607" class="blob-code blob-code-inner js-file-line">$ python -m pdb python-script.py</td>
        </tr>
        <tr>
          <td id="L2608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2608"></td>
          <td id="LC2608" class="blob-code blob-code-inner js-file-line">262. How Do You Monitor The Code Flow Of A Program In Python?</td>
        </tr>
        <tr>
          <td id="L2609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2609"></td>
          <td id="LC2609" class="blob-code blob-code-inner js-file-line">Ans: In Python, we can use the sys module’s settrace() method to setup trace hooks and monitor the functions inside a program.</td>
        </tr>
        <tr>
          <td id="L2610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2610"></td>
          <td id="LC2610" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2611"></td>
          <td id="LC2611" class="blob-code blob-code-inner js-file-line">You need to define a trace callback method and pass it to the settrace() function. The callback should specify three arguments as shown below.</td>
        </tr>
        <tr>
          <td id="L2612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2612"></td>
          <td id="LC2612" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2613"></td>
          <td id="LC2613" class="blob-code blob-code-inner js-file-line">import sys</td>
        </tr>
        <tr>
          <td id="L2614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2614"></td>
          <td id="LC2614" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2615"></td>
          <td id="LC2615" class="blob-code blob-code-inner js-file-line">def trace_calls(frame, event, arg):</td>
        </tr>
        <tr>
          <td id="L2616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2616"></td>
          <td id="LC2616" class="blob-code blob-code-inner js-file-line">    # The &#39;call&#39; event occurs before a function gets executed.</td>
        </tr>
        <tr>
          <td id="L2617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2617"></td>
          <td id="LC2617" class="blob-code blob-code-inner js-file-line">    if event != &#39;call&#39;:</td>
        </tr>
        <tr>
          <td id="L2618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2618"></td>
          <td id="LC2618" class="blob-code blob-code-inner js-file-line">        return</td>
        </tr>
        <tr>
          <td id="L2619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2619"></td>
          <td id="LC2619" class="blob-code blob-code-inner js-file-line">    # Next, inspect the frame data and print information.</td>
        </tr>
        <tr>
          <td id="L2620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2620"></td>
          <td id="LC2620" class="blob-code blob-code-inner js-file-line">    print &#39;Function name=%s, line num=%s&#39; % (frame.f_code.co_name, frame.f_lineno)</td>
        </tr>
        <tr>
          <td id="L2621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2621"></td>
          <td id="LC2621" class="blob-code blob-code-inner js-file-line">    return</td>
        </tr>
        <tr>
          <td id="L2622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2622"></td>
          <td id="LC2622" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2623"></td>
          <td id="LC2623" class="blob-code blob-code-inner js-file-line">def demo2():</td>
        </tr>
        <tr>
          <td id="L2624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2624"></td>
          <td id="LC2624" class="blob-code blob-code-inner js-file-line">    print &#39;in demo2()&#39;</td>
        </tr>
        <tr>
          <td id="L2625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2625"></td>
          <td id="LC2625" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2626"></td>
          <td id="LC2626" class="blob-code blob-code-inner js-file-line">def demo1():</td>
        </tr>
        <tr>
          <td id="L2627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2627"></td>
          <td id="LC2627" class="blob-code blob-code-inner js-file-line">    print &#39;in demo1()&#39;</td>
        </tr>
        <tr>
          <td id="L2628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2628"></td>
          <td id="LC2628" class="blob-code blob-code-inner js-file-line">    demo2()</td>
        </tr>
        <tr>
          <td id="L2629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2629"></td>
          <td id="LC2629" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2630"></td>
          <td id="LC2630" class="blob-code blob-code-inner js-file-line">sys.settrace(trace_calls)</td>
        </tr>
        <tr>
          <td id="L2631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2631"></td>
          <td id="LC2631" class="blob-code blob-code-inner js-file-line">demo1()</td>
        </tr>
        <tr>
          <td id="L2632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2632"></td>
          <td id="LC2632" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2633"></td>
          <td id="LC2633" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2634"></td>
          <td id="LC2634" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2635"></td>
          <td id="LC2635" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2636"></td>
          <td id="LC2636" class="blob-code blob-code-inner js-file-line">263. How long can an identifier be in Python?</td>
        </tr>
        <tr>
          <td id="L2637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2637"></td>
          <td id="LC2637" class="blob-code blob-code-inner js-file-line">Ans: According to the official Python documentation, an identifier can be of any length. However, PEP 8 suggests that you should limit all lines to a maximum of 79 characters. Also, PEP 20 says ‘readability counts’. So, a very long identifier will violate PEP-8 and PEP-20.</td>
        </tr>
        <tr>
          <td id="L2638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2638"></td>
          <td id="LC2638" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2639"></td>
          <td id="LC2639" class="blob-code blob-code-inner js-file-line">Apart from that, there are certain rules we must follow to name one:</td>
        </tr>
        <tr>
          <td id="L2640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2640"></td>
          <td id="LC2640" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2641"></td>
          <td id="LC2641" class="blob-code blob-code-inner js-file-line">According to the official Python documentation, an identifier can be of any length. However, PEP 8 suggests that you should limit all lines to a maximum of 79 characters. Also, PEP 20 says ‘readability counts’. So, a very long identifier will violate PEP-8 and PEP-20.</td>
        </tr>
        <tr>
          <td id="L2642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2642"></td>
          <td id="LC2642" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2643"></td>
          <td id="LC2643" class="blob-code blob-code-inner js-file-line">Apart from that, there are certain rules we must follow to name one:</td>
        </tr>
        <tr>
          <td id="L2644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2644"></td>
          <td id="LC2644" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2645"></td>
          <td id="LC2645" class="blob-code blob-code-inner js-file-line">It can only begin with an underscore or a character from A-Z or a-z.</td>
        </tr>
        <tr>
          <td id="L2646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2646"></td>
          <td id="LC2646" class="blob-code blob-code-inner js-file-line">The rest of it can contain anything from the following: A-Z/a-z/_/0-9.</td>
        </tr>
        <tr>
          <td id="L2647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2647"></td>
          <td id="LC2647" class="blob-code blob-code-inner js-file-line">Python is case-sensitive, as we discussed in the previous question.</td>
        </tr>
        <tr>
          <td id="L2648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2648"></td>
          <td id="LC2648" class="blob-code blob-code-inner js-file-line">Keywords cannot be used as identifiers. Python has the following keywords:</td>
        </tr>
        <tr>
          <td id="L2649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2649"></td>
          <td id="LC2649" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2650"></td>
          <td id="LC2650" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2651"></td>
          <td id="LC2651" class="blob-code blob-code-inner js-file-line">and	def	False	import	not	True</td>
        </tr>
        <tr>
          <td id="L2652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2652"></td>
          <td id="LC2652" class="blob-code blob-code-inner js-file-line">as	del	finally	in	or	try</td>
        </tr>
        <tr>
          <td id="L2653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2653"></td>
          <td id="LC2653" class="blob-code blob-code-inner js-file-line">assert	elif	for	is	pass	while</td>
        </tr>
        <tr>
          <td id="L2654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2654"></td>
          <td id="LC2654" class="blob-code blob-code-inner js-file-line">break	else	from	lambda	print	with</td>
        </tr>
        <tr>
          <td id="L2655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2655"></td>
          <td id="LC2655" class="blob-code blob-code-inner js-file-line">class	except	global	None	raise	yield</td>
        </tr>
        <tr>
          <td id="L2656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2656"></td>
          <td id="LC2656" class="blob-code blob-code-inner js-file-line">continue	exec	if	nonlocal	return</td>
        </tr>
        <tr>
          <td id="L2657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2657"></td>
          <td id="LC2657" class="blob-code blob-code-inner js-file-line">264. How would you convert a string into lowercase? </td>
        </tr>
        <tr>
          <td id="L2658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2658"></td>
          <td id="LC2658" class="blob-code blob-code-inner js-file-line">Ans: We use the lower() method for this.</td>
        </tr>
        <tr>
          <td id="L2659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2659"></td>
          <td id="LC2659" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2660"></td>
          <td id="LC2660" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘AyuShi’.lower()</td>
        </tr>
        <tr>
          <td id="L2661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2661"></td>
          <td id="LC2661" class="blob-code blob-code-inner js-file-line">‘ayushi’</td>
        </tr>
        <tr>
          <td id="L2662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2662"></td>
          <td id="LC2662" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2663"></td>
          <td id="LC2663" class="blob-code blob-code-inner js-file-line">To convert it into uppercase, then, we use upper().</td>
        </tr>
        <tr>
          <td id="L2664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2664"></td>
          <td id="LC2664" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2665"></td>
          <td id="LC2665" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘AyuShi’.upper()</td>
        </tr>
        <tr>
          <td id="L2666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2666"></td>
          <td id="LC2666" class="blob-code blob-code-inner js-file-line">‘AYUSHI’</td>
        </tr>
        <tr>
          <td id="L2667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2667"></td>
          <td id="LC2667" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2668"></td>
          <td id="LC2668" class="blob-code blob-code-inner js-file-line">Also, to check if a string is in all uppercase or all lowercase, we use the methods isupper() and islower().</td>
        </tr>
        <tr>
          <td id="L2669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2669"></td>
          <td id="LC2669" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2670"></td>
          <td id="LC2670" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘AyuShi’.isupper()</td>
        </tr>
        <tr>
          <td id="L2671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2671"></td>
          <td id="LC2671" class="blob-code blob-code-inner js-file-line">False</td>
        </tr>
        <tr>
          <td id="L2672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2672"></td>
          <td id="LC2672" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2673"></td>
          <td id="LC2673" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘AYUSHI’.isupper()</td>
        </tr>
        <tr>
          <td id="L2674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2674"></td>
          <td id="LC2674" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2675"></td>
          <td id="LC2675" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2676"></td>
          <td id="LC2676" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘ayushi’.islower()</td>
        </tr>
        <tr>
          <td id="L2677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2677"></td>
          <td id="LC2677" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2678"></td>
          <td id="LC2678" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2679"></td>
          <td id="LC2679" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘@yu$hi’.islower()</td>
        </tr>
        <tr>
          <td id="L2680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2680"></td>
          <td id="LC2680" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2681"></td>
          <td id="LC2681" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2682"></td>
          <td id="LC2682" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘@YU$HI’.isupper()</td>
        </tr>
        <tr>
          <td id="L2683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2683"></td>
          <td id="LC2683" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2684"></td>
          <td id="LC2684" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2685"></td>
          <td id="LC2685" class="blob-code blob-code-inner js-file-line">So, characters like @ and $ will suffice for both cases</td>
        </tr>
        <tr>
          <td id="L2686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2686"></td>
          <td id="LC2686" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2687"></td>
          <td id="LC2687" class="blob-code blob-code-inner js-file-line">Also, istitle() will tell us if a string is in title case.</td>
        </tr>
        <tr>
          <td id="L2688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2688"></td>
          <td id="LC2688" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2689"></td>
          <td id="LC2689" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘The Corpse Bride’.istitle()</td>
        </tr>
        <tr>
          <td id="L2690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2690"></td>
          <td id="LC2690" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2691"></td>
          <td id="LC2691" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2692"></td>
          <td id="LC2692" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2693"></td>
          <td id="LC2693" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2694"></td>
          <td id="LC2694" class="blob-code blob-code-inner js-file-line">265. What is the pass statement in Python?</td>
        </tr>
        <tr>
          <td id="L2695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2695"></td>
          <td id="LC2695" class="blob-code blob-code-inner js-file-line">There may be times in our code when we haven’t decided what to do yet, but we must type something for it to be syntactically correct. In such a case, we use the pass statement.</td>
        </tr>
        <tr>
          <td id="L2696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2696"></td>
          <td id="LC2696" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2697"></td>
          <td id="LC2697" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; def func(*args):</td>
        </tr>
        <tr>
          <td id="L2698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2698"></td>
          <td id="LC2698" class="blob-code blob-code-inner js-file-line">pass</td>
        </tr>
        <tr>
          <td id="L2699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2699"></td>
          <td id="LC2699" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;</td>
        </tr>
        <tr>
          <td id="L2700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2700"></td>
          <td id="LC2700" class="blob-code blob-code-inner js-file-line">Similarly, the break statement breaks out of a loop.</td>
        </tr>
        <tr>
          <td id="L2701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2701"></td>
          <td id="LC2701" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2702"></td>
          <td id="LC2702" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; for i in range(7):</td>
        </tr>
        <tr>
          <td id="L2703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2703"></td>
          <td id="LC2703" class="blob-code blob-code-inner js-file-line">if i==3: break</td>
        </tr>
        <tr>
          <td id="L2704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2704"></td>
          <td id="LC2704" class="blob-code blob-code-inner js-file-line">print(i)</td>
        </tr>
        <tr>
          <td id="L2705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2705"></td>
          <td id="LC2705" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L2706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2706"></td>
          <td id="LC2706" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2707"></td>
          <td id="LC2707" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L2708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2708"></td>
          <td id="LC2708" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2709"></td>
          <td id="LC2709" class="blob-code blob-code-inner js-file-line">Finally, the continue statement skips to the next iteration.</td>
        </tr>
        <tr>
          <td id="L2710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2710"></td>
          <td id="LC2710" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2711"></td>
          <td id="LC2711" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; for i in range(7):</td>
        </tr>
        <tr>
          <td id="L2712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2712"></td>
          <td id="LC2712" class="blob-code blob-code-inner js-file-line">if i==3: continue</td>
        </tr>
        <tr>
          <td id="L2713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2713"></td>
          <td id="LC2713" class="blob-code blob-code-inner js-file-line">print(i)</td>
        </tr>
        <tr>
          <td id="L2714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2714"></td>
          <td id="LC2714" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L2715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2715"></td>
          <td id="LC2715" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2716"></td>
          <td id="LC2716" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L2717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2717"></td>
          <td id="LC2717" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2718"></td>
          <td id="LC2718" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L2719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2719"></td>
          <td id="LC2719" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2720"></td>
          <td id="LC2720" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L2721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2721"></td>
          <td id="LC2721" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2722"></td>
          <td id="LC2722" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L2723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2723"></td>
          <td id="LC2723" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2724"></td>
          <td id="LC2724" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2725"></td>
          <td id="LC2725" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2726"></td>
          <td id="LC2726" class="blob-code blob-code-inner js-file-line">266. Explain help() and dir() functions in Python?</td>
        </tr>
        <tr>
          <td id="L2727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2727"></td>
          <td id="LC2727" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L2728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2728"></td>
          <td id="LC2728" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2729"></td>
          <td id="LC2729" class="blob-code blob-code-inner js-file-line">The help() function displays the documentation string and help for its argument.</td>
        </tr>
        <tr>
          <td id="L2730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2730"></td>
          <td id="LC2730" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2731"></td>
          <td id="LC2731" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; import copy</td>
        </tr>
        <tr>
          <td id="L2732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2732"></td>
          <td id="LC2732" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; help(copy.copy)</td>
        </tr>
        <tr>
          <td id="L2733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2733"></td>
          <td id="LC2733" class="blob-code blob-code-inner js-file-line">Help on function copy in module copy:</td>
        </tr>
        <tr>
          <td id="L2734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2734"></td>
          <td id="LC2734" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2735"></td>
          <td id="LC2735" class="blob-code blob-code-inner js-file-line">copy(x)</td>
        </tr>
        <tr>
          <td id="L2736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2736"></td>
          <td id="LC2736" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2737"></td>
          <td id="LC2737" class="blob-code blob-code-inner js-file-line">Shallow copy operation on arbitrary Python objects.</td>
        </tr>
        <tr>
          <td id="L2738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2738"></td>
          <td id="LC2738" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2739"></td>
          <td id="LC2739" class="blob-code blob-code-inner js-file-line">See the module’s __doc__ string for more info.</td>
        </tr>
        <tr>
          <td id="L2740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2740"></td>
          <td id="LC2740" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2741"></td>
          <td id="LC2741" class="blob-code blob-code-inner js-file-line">The dir() function displays all the members of an object(any kind).</td>
        </tr>
        <tr>
          <td id="L2742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2742"></td>
          <td id="LC2742" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2743"></td>
          <td id="LC2743" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; dir(copy.copy)</td>
        </tr>
        <tr>
          <td id="L2744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2744"></td>
          <td id="LC2744" class="blob-code blob-code-inner js-file-line">[‘__annotations__’, ‘__call__’, ‘__class__’, ‘__closure__’, ‘__code__’, ‘__defaults__’, ‘__delattr__’, ‘__dict__’, ‘__dir__’, ‘__doc__’, ‘__eq__’, ‘__format__’, ‘__ge__’, ‘__get__’, ‘__getattribute__’, ‘__globals__’, ‘__gt__’, ‘__hash__’, ‘__init__’, ‘__init_subclass__’, ‘__kwdefaults__’, ‘__le__’, ‘__lt__’, ‘__module__’, ‘__name__’, ‘__ne__’, ‘__new__’, ‘__qualname__’, ‘__reduce__’, ‘__reduce_ex__’, ‘__repr__’, ‘__setattr__’, ‘__sizeof__’, ‘__str__’, ‘__subclasshook__’]</td>
        </tr>
        <tr>
          <td id="L2745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2745"></td>
          <td id="LC2745" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2746"></td>
          <td id="LC2746" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2747"></td>
          <td id="LC2747" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2748"></td>
          <td id="LC2748" class="blob-code blob-code-inner js-file-line">267. How do you get a list of all the keys in a dictionary?</td>
        </tr>
        <tr>
          <td id="L2749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2749"></td>
          <td id="LC2749" class="blob-code blob-code-inner js-file-line">Ans:For this, we use the function keys().</td>
        </tr>
        <tr>
          <td id="L2750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2750"></td>
          <td id="LC2750" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2751"></td>
          <td id="LC2751" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; mydict={‘a’:1,‘b’:2,‘c’:3,‘e’:5}</td>
        </tr>
        <tr>
          <td id="L2752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2752"></td>
          <td id="LC2752" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; mydict.keys()</td>
        </tr>
        <tr>
          <td id="L2753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2753"></td>
          <td id="LC2753" class="blob-code blob-code-inner js-file-line">dict_keys([‘a’, ‘b’, ‘c’, ‘e’])</td>
        </tr>
        <tr>
          <td id="L2754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2754"></td>
          <td id="LC2754" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2755"></td>
          <td id="LC2755" class="blob-code blob-code-inner js-file-line">268. How will you check if all characters in a string are alphanumeric?</td>
        </tr>
        <tr>
          <td id="L2756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2756"></td>
          <td id="LC2756" class="blob-code blob-code-inner js-file-line">Ans: For this, we use the method isalnum().</td>
        </tr>
        <tr>
          <td id="L2757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2757"></td>
          <td id="LC2757" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2758"></td>
          <td id="LC2758" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2759"></td>
          <td id="LC2759" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2760"></td>
          <td id="LC2760" class="blob-code blob-code-inner js-file-line">269. With Python, how do you find out which directory you are currently in?</td>
        </tr>
        <tr>
          <td id="L2761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2761"></td>
          <td id="LC2761" class="blob-code blob-code-inner js-file-line">Ans:  To find this, we use the function/method getcwd(). We import it from the module os.</td>
        </tr>
        <tr>
          <td id="L2762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2762"></td>
          <td id="LC2762" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2763"></td>
          <td id="LC2763" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; import os</td>
        </tr>
        <tr>
          <td id="L2764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2764"></td>
          <td id="LC2764" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; os.getcwd()</td>
        </tr>
        <tr>
          <td id="L2765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2765"></td>
          <td id="LC2765" class="blob-code blob-code-inner js-file-line">‘C:\\Users\\lifei\\AppData\\Local\\Programs\\Python\\Python36-32’</td>
        </tr>
        <tr>
          <td id="L2766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2766"></td>
          <td id="LC2766" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2767"></td>
          <td id="LC2767" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(os.getcwd)</td>
        </tr>
        <tr>
          <td id="L2768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2768"></td>
          <td id="LC2768" class="blob-code blob-code-inner js-file-line">&lt;class ‘builtin_function_or_method’&gt;</td>
        </tr>
        <tr>
          <td id="L2769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2769"></td>
          <td id="LC2769" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2770"></td>
          <td id="LC2770" class="blob-code blob-code-inner js-file-line">We can also change the current working directory with chdir().</td>
        </tr>
        <tr>
          <td id="L2771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2771"></td>
          <td id="LC2771" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2772"></td>
          <td id="LC2772" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; os.chdir(‘C:\\Users\\lifei\\Desktop’)</td>
        </tr>
        <tr>
          <td id="L2773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2773"></td>
          <td id="LC2773" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; os.getcwd()</td>
        </tr>
        <tr>
          <td id="L2774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2774"></td>
          <td id="LC2774" class="blob-code blob-code-inner js-file-line">‘C:\\Users\\lifei\\Desktop’</td>
        </tr>
        <tr>
          <td id="L2775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2775"></td>
          <td id="LC2775" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2776"></td>
          <td id="LC2776" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2777"></td>
          <td id="LC2777" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2778"></td>
          <td id="LC2778" class="blob-code blob-code-inner js-file-line">270. How do you insert an object at a given index in Python?</td>
        </tr>
        <tr>
          <td id="L2779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2779"></td>
          <td id="LC2779" class="blob-code blob-code-inner js-file-line">Ans: Let’s build a list first.</td>
        </tr>
        <tr>
          <td id="L2780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2780"></td>
          <td id="LC2780" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2781"></td>
          <td id="LC2781" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=[1,2,4]</td>
        </tr>
        <tr>
          <td id="L2782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2782"></td>
          <td id="LC2782" class="blob-code blob-code-inner js-file-line">Now, we use the method insert. The first argument is the index at which to insert, the second is the value to insert.</td>
        </tr>
        <tr>
          <td id="L2783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2783"></td>
          <td id="LC2783" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2784"></td>
          <td id="LC2784" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a.insert(2,3)</td>
        </tr>
        <tr>
          <td id="L2785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2785"></td>
          <td id="LC2785" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L2786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2786"></td>
          <td id="LC2786" class="blob-code blob-code-inner js-file-line">[1, 2, 3, 4]</td>
        </tr>
        <tr>
          <td id="L2787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2787"></td>
          <td id="LC2787" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2788"></td>
          <td id="LC2788" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2789"></td>
          <td id="LC2789" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2790"></td>
          <td id="LC2790" class="blob-code blob-code-inner js-file-line">271.  how do you reverse a list?</td>
        </tr>
        <tr>
          <td id="L2791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2791"></td>
          <td id="LC2791" class="blob-code blob-code-inner js-file-line">Ans: Using the reverse() method.</td>
        </tr>
        <tr>
          <td id="L2792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2792"></td>
          <td id="LC2792" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2793"></td>
          <td id="LC2793" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a.reverse()</td>
        </tr>
        <tr>
          <td id="L2794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2794"></td>
          <td id="LC2794" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L2795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2795"></td>
          <td id="LC2795" class="blob-code blob-code-inner js-file-line">[4, 3, 2, 1]</td>
        </tr>
        <tr>
          <td id="L2796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2796"></td>
          <td id="LC2796" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2797"></td>
          <td id="LC2797" class="blob-code blob-code-inner js-file-line">You can also do it via slicing from right to left:</td>
        </tr>
        <tr>
          <td id="L2798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2798"></td>
          <td id="LC2798" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2799"></td>
          <td id="LC2799" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a[::-1]</td>
        </tr>
        <tr>
          <td id="L2800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2800"></td>
          <td id="LC2800" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L2801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2801"></td>
          <td id="LC2801" class="blob-code blob-code-inner js-file-line">[1, 2, 3, 4]</td>
        </tr>
        <tr>
          <td id="L2802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2802"></td>
          <td id="LC2802" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2803"></td>
          <td id="LC2803" class="blob-code blob-code-inner js-file-line">This gives us the original list because we already reversed it once. However, this does not modify the original list to reverse it.</td>
        </tr>
        <tr>
          <td id="L2804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2804"></td>
          <td id="LC2804" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2805"></td>
          <td id="LC2805" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2806"></td>
          <td id="LC2806" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2807"></td>
          <td id="LC2807" class="blob-code blob-code-inner js-file-line">272. How does a function return values?</td>
        </tr>
        <tr>
          <td id="L2808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2808"></td>
          <td id="LC2808" class="blob-code blob-code-inner js-file-line">Ans:  A function uses the ‘return’ keyword to return a value. Take a look:</td>
        </tr>
        <tr>
          <td id="L2809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2809"></td>
          <td id="LC2809" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2810"></td>
          <td id="LC2810" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; def add(a,b):</td>
        </tr>
        <tr>
          <td id="L2811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2811"></td>
          <td id="LC2811" class="blob-code blob-code-inner js-file-line">return a+b</td>
        </tr>
        <tr>
          <td id="L2812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2812"></td>
          <td id="LC2812" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2813"></td>
          <td id="LC2813" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2814"></td>
          <td id="LC2814" class="blob-code blob-code-inner js-file-line">273. How would you define a block in Python?</td>
        </tr>
        <tr>
          <td id="L2815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2815"></td>
          <td id="LC2815" class="blob-code blob-code-inner js-file-line">Ans:  For any kind of statements, we possibly need to define a block of code under them. However, Python does not support curly braces. This means we must end such statements with colons and then indent the blocks under those with the same amount.</td>
        </tr>
        <tr>
          <td id="L2816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2816"></td>
          <td id="LC2816" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2817"></td>
          <td id="LC2817" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; if 3&gt;1:</td>
        </tr>
        <tr>
          <td id="L2818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2818"></td>
          <td id="LC2818" class="blob-code blob-code-inner js-file-line">print(“Hello”)</td>
        </tr>
        <tr>
          <td id="L2819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2819"></td>
          <td id="LC2819" class="blob-code blob-code-inner js-file-line">print(“Goodbye”)</td>
        </tr>
        <tr>
          <td id="L2820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2820"></td>
          <td id="LC2820" class="blob-code blob-code-inner js-file-line">Hello</td>
        </tr>
        <tr>
          <td id="L2821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2821"></td>
          <td id="LC2821" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2822"></td>
          <td id="LC2822" class="blob-code blob-code-inner js-file-line">Goodbye</td>
        </tr>
        <tr>
          <td id="L2823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2823"></td>
          <td id="LC2823" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2824"></td>
          <td id="LC2824" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2825"></td>
          <td id="LC2825" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2826"></td>
          <td id="LC2826" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2827"></td>
          <td id="LC2827" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2828"></td>
          <td id="LC2828" class="blob-code blob-code-inner js-file-line">274. Will the do-while loop work if you don’t end it with a semicolon?</td>
        </tr>
        <tr>
          <td id="L2829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2829"></td>
          <td id="LC2829" class="blob-code blob-code-inner js-file-line">Ans: Trick question! Python does not support an intrinsic do-while loop. Secondly, to terminate do-while loops is a necessity for languages like C++.</td>
        </tr>
        <tr>
          <td id="L2830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2830"></td>
          <td id="LC2830" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2831"></td>
          <td id="LC2831" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2832"></td>
          <td id="LC2832" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2833"></td>
          <td id="LC2833" class="blob-code blob-code-inner js-file-line">275. In one line, show us how you’ll get the max alphabetical character from a string.?</td>
        </tr>
        <tr>
          <td id="L2834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2834"></td>
          <td id="LC2834" class="blob-code blob-code-inner js-file-line">Ans:  For this, we’ll simply use the max function.</td>
        </tr>
        <tr>
          <td id="L2835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2835"></td>
          <td id="LC2835" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2836"></td>
          <td id="LC2836" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; max(‘flyiNg’)</td>
        </tr>
        <tr>
          <td id="L2837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2837"></td>
          <td id="LC2837" class="blob-code blob-code-inner js-file-line">‘y’</td>
        </tr>
        <tr>
          <td id="L2838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2838"></td>
          <td id="LC2838" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2839"></td>
          <td id="LC2839" class="blob-code blob-code-inner js-file-line">The following are the ASCII values for all the letters of this string-</td>
        </tr>
        <tr>
          <td id="L2840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2840"></td>
          <td id="LC2840" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2841"></td>
          <td id="LC2841" class="blob-code blob-code-inner js-file-line">f- 102</td>
        </tr>
        <tr>
          <td id="L2842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2842"></td>
          <td id="LC2842" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2843"></td>
          <td id="LC2843" class="blob-code blob-code-inner js-file-line">l- 108</td>
        </tr>
        <tr>
          <td id="L2844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2844"></td>
          <td id="LC2844" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2845"></td>
          <td id="LC2845" class="blob-code blob-code-inner js-file-line">y- 121</td>
        </tr>
        <tr>
          <td id="L2846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2846"></td>
          <td id="LC2846" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2847"></td>
          <td id="LC2847" class="blob-code blob-code-inner js-file-line">i- 105</td>
        </tr>
        <tr>
          <td id="L2848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2848"></td>
          <td id="LC2848" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2849"></td>
          <td id="LC2849" class="blob-code blob-code-inner js-file-line">N- 78</td>
        </tr>
        <tr>
          <td id="L2850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2850"></td>
          <td id="LC2850" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2851"></td>
          <td id="LC2851" class="blob-code blob-code-inner js-file-line">g- 103</td>
        </tr>
        <tr>
          <td id="L2852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2852"></td>
          <td id="LC2852" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2853"></td>
          <td id="LC2853" class="blob-code blob-code-inner js-file-line">By this logic, try to explain the following line of code-</td>
        </tr>
        <tr>
          <td id="L2854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2854"></td>
          <td id="LC2854" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2855"></td>
          <td id="LC2855" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; max(‘fly{}iNg’)</td>
        </tr>
        <tr>
          <td id="L2856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2856"></td>
          <td id="LC2856" class="blob-code blob-code-inner js-file-line">‘}’</td>
        </tr>
        <tr>
          <td id="L2857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2857"></td>
          <td id="LC2857" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2858"></td>
          <td id="LC2858" class="blob-code blob-code-inner js-file-line">(Bonus: } – 125)</td>
        </tr>
        <tr>
          <td id="L2859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2859"></td>
          <td id="LC2859" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2860"></td>
          <td id="LC2860" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2861"></td>
          <td id="LC2861" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2862"></td>
          <td id="LC2862" class="blob-code blob-code-inner js-file-line">276. What is Python good for?</td>
        </tr>
        <tr>
          <td id="L2863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2863"></td>
          <td id="LC2863" class="blob-code blob-code-inner js-file-line">Ans: Python is a jack of many trades, check out Applications of Python to find out more.</td>
        </tr>
        <tr>
          <td id="L2864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2864"></td>
          <td id="LC2864" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2865"></td>
          <td id="LC2865" class="blob-code blob-code-inner js-file-line">Meanwhile, we’ll say we can use it for:</td>
        </tr>
        <tr>
          <td id="L2866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2866"></td>
          <td id="LC2866" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2867"></td>
          <td id="LC2867" class="blob-code blob-code-inner js-file-line">Web and Internet Development</td>
        </tr>
        <tr>
          <td id="L2868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2868"></td>
          <td id="LC2868" class="blob-code blob-code-inner js-file-line">Desktop GUI</td>
        </tr>
        <tr>
          <td id="L2869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2869"></td>
          <td id="LC2869" class="blob-code blob-code-inner js-file-line">Scientific and Numeric Applications</td>
        </tr>
        <tr>
          <td id="L2870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2870"></td>
          <td id="LC2870" class="blob-code blob-code-inner js-file-line">Software Development Applications</td>
        </tr>
        <tr>
          <td id="L2871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2871"></td>
          <td id="LC2871" class="blob-code blob-code-inner js-file-line">Applications in Education</td>
        </tr>
        <tr>
          <td id="L2872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2872"></td>
          <td id="LC2872" class="blob-code blob-code-inner js-file-line">Applications in Business</td>
        </tr>
        <tr>
          <td id="L2873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2873"></td>
          <td id="LC2873" class="blob-code blob-code-inner js-file-line">Database Access</td>
        </tr>
        <tr>
          <td id="L2874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2874"></td>
          <td id="LC2874" class="blob-code blob-code-inner js-file-line">Network Programming</td>
        </tr>
        <tr>
          <td id="L2875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2875"></td>
          <td id="LC2875" class="blob-code blob-code-inner js-file-line">Games, 3D Graphics</td>
        </tr>
        <tr>
          <td id="L2876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2876"></td>
          <td id="LC2876" class="blob-code blob-code-inner js-file-line">Other Python Applications</td>
        </tr>
        <tr>
          <td id="L2877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2877"></td>
          <td id="LC2877" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2878"></td>
          <td id="LC2878" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2879"></td>
          <td id="LC2879" class="blob-code blob-code-inner js-file-line">277. Can you name ten built-in functions in Python and explain each in brief?</td>
        </tr>
        <tr>
          <td id="L2880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2880"></td>
          <td id="LC2880" class="blob-code blob-code-inner js-file-line">Ans: Ten Built-in Functions, you say? Okay, here you go.</td>
        </tr>
        <tr>
          <td id="L2881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2881"></td>
          <td id="LC2881" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2882"></td>
          <td id="LC2882" class="blob-code blob-code-inner js-file-line">complex()- Creates a complex number.</td>
        </tr>
        <tr>
          <td id="L2883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2883"></td>
          <td id="LC2883" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2884"></td>
          <td id="LC2884" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; complex(3.5,4)</td>
        </tr>
        <tr>
          <td id="L2885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2885"></td>
          <td id="LC2885" class="blob-code blob-code-inner js-file-line">(3.5+4j)</td>
        </tr>
        <tr>
          <td id="L2886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2886"></td>
          <td id="LC2886" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2887"></td>
          <td id="LC2887" class="blob-code blob-code-inner js-file-line">eval()- Parses a string as an expression.</td>
        </tr>
        <tr>
          <td id="L2888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2888"></td>
          <td id="LC2888" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2889"></td>
          <td id="LC2889" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; eval(‘print(max(22,22.0)-min(2,3))’)</td>
        </tr>
        <tr>
          <td id="L2890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2890"></td>
          <td id="LC2890" class="blob-code blob-code-inner js-file-line">20</td>
        </tr>
        <tr>
          <td id="L2891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2891"></td>
          <td id="LC2891" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2892"></td>
          <td id="LC2892" class="blob-code blob-code-inner js-file-line">filter()- Filters in items for which the condition is true.</td>
        </tr>
        <tr>
          <td id="L2893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2893"></td>
          <td id="LC2893" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2894"></td>
          <td id="LC2894" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(filter(lambda x:x%2==0,[1,2,0,False]))</td>
        </tr>
        <tr>
          <td id="L2895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2895"></td>
          <td id="LC2895" class="blob-code blob-code-inner js-file-line">[2, 0, False]</td>
        </tr>
        <tr>
          <td id="L2896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2896"></td>
          <td id="LC2896" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2897"></td>
          <td id="LC2897" class="blob-code blob-code-inner js-file-line">format()- Lets us format a string.</td>
        </tr>
        <tr>
          <td id="L2898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2898"></td>
          <td id="LC2898" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2899"></td>
          <td id="LC2899" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; print(“a={0} but b={1}”.format(a,b))</td>
        </tr>
        <tr>
          <td id="L2900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2900"></td>
          <td id="LC2900" class="blob-code blob-code-inner js-file-line">a=2 but b=3</td>
        </tr>
        <tr>
          <td id="L2901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2901"></td>
          <td id="LC2901" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2902"></td>
          <td id="LC2902" class="blob-code blob-code-inner js-file-line">hash()- Returns the hash value of an object.</td>
        </tr>
        <tr>
          <td id="L2903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2903"></td>
          <td id="LC2903" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2904"></td>
          <td id="LC2904" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; hash(3.7)</td>
        </tr>
        <tr>
          <td id="L2905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2905"></td>
          <td id="LC2905" class="blob-code blob-code-inner js-file-line">644245917</td>
        </tr>
        <tr>
          <td id="L2906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2906"></td>
          <td id="LC2906" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2907"></td>
          <td id="LC2907" class="blob-code blob-code-inner js-file-line">hex()- Converts an integer to a hexadecimal.</td>
        </tr>
        <tr>
          <td id="L2908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2908"></td>
          <td id="LC2908" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2909"></td>
          <td id="LC2909" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; hex(14)</td>
        </tr>
        <tr>
          <td id="L2910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2910"></td>
          <td id="LC2910" class="blob-code blob-code-inner js-file-line">‘0xe’</td>
        </tr>
        <tr>
          <td id="L2911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2911"></td>
          <td id="LC2911" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2912"></td>
          <td id="LC2912" class="blob-code blob-code-inner js-file-line">input()- Reads and returns a line of string.</td>
        </tr>
        <tr>
          <td id="L2913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2913"></td>
          <td id="LC2913" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2914"></td>
          <td id="LC2914" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; input(‘Enter a number’)</td>
        </tr>
        <tr>
          <td id="L2915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2915"></td>
          <td id="LC2915" class="blob-code blob-code-inner js-file-line">Enter a number7</td>
        </tr>
        <tr>
          <td id="L2916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2916"></td>
          <td id="LC2916" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2917"></td>
          <td id="LC2917" class="blob-code blob-code-inner js-file-line">‘7’</td>
        </tr>
        <tr>
          <td id="L2918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2918"></td>
          <td id="LC2918" class="blob-code blob-code-inner js-file-line">len()- Returns the length of an object.</td>
        </tr>
        <tr>
          <td id="L2919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2919"></td>
          <td id="LC2919" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2920"></td>
          <td id="LC2920" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; len(‘Ayushi’)</td>
        </tr>
        <tr>
          <td id="L2921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2921"></td>
          <td id="LC2921" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L2922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2922"></td>
          <td id="LC2922" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2923"></td>
          <td id="LC2923" class="blob-code blob-code-inner js-file-line">locals()- Returns a dictionary of the current local symbol table.</td>
        </tr>
        <tr>
          <td id="L2924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2924"></td>
          <td id="LC2924" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2925"></td>
          <td id="LC2925" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; locals()</td>
        </tr>
        <tr>
          <td id="L2926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2926"></td>
          <td id="LC2926" class="blob-code blob-code-inner js-file-line">{‘__name__’: ‘__main__’, ‘__doc__’: None, ‘__package__’: None, ‘__loader__’: &lt;class ‘_frozen_importlib.BuiltinImporter’&gt;, ‘__spec__’: None, ‘__annotations__’: {}, ‘__builtins__’: &lt;module ‘builtins’ (built-in)&gt;, ‘a’: 2, ‘b’: 3}</td>
        </tr>
        <tr>
          <td id="L2927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2927"></td>
          <td id="LC2927" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2928"></td>
          <td id="LC2928" class="blob-code blob-code-inner js-file-line">open()- Opens a file.</td>
        </tr>
        <tr>
          <td id="L2929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2929"></td>
          <td id="LC2929" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2930"></td>
          <td id="LC2930" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; file=open(‘tabs.txt’)</td>
        </tr>
        <tr>
          <td id="L2931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2931"></td>
          <td id="LC2931" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2932"></td>
          <td id="LC2932" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2933"></td>
          <td id="LC2933" class="blob-code blob-code-inner js-file-line">278. How will you convert a list into a string? </td>
        </tr>
        <tr>
          <td id="L2934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2934"></td>
          <td id="LC2934" class="blob-code blob-code-inner js-file-line">Ans: We will use the join() method for this.</td>
        </tr>
        <tr>
          <td id="L2935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2935"></td>
          <td id="LC2935" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2936"></td>
          <td id="LC2936" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; nums=[‘one’,‘two’,‘three’,‘four’,‘five’,‘six’,‘seven’]</td>
        </tr>
        <tr>
          <td id="L2937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2937"></td>
          <td id="LC2937" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s=‘ ‘.join(nums)</td>
        </tr>
        <tr>
          <td id="L2938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2938"></td>
          <td id="LC2938" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s</td>
        </tr>
        <tr>
          <td id="L2939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2939"></td>
          <td id="LC2939" class="blob-code blob-code-inner js-file-line">o/p= ‘one two three four five six seven’</td>
        </tr>
        <tr>
          <td id="L2940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2940"></td>
          <td id="LC2940" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2941"></td>
          <td id="LC2941" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2942"></td>
          <td id="LC2942" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2943"></td>
          <td id="LC2943" class="blob-code blob-code-inner js-file-line">279. How will you remove a duplicate element from a list?</td>
        </tr>
        <tr>
          <td id="L2944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2944"></td>
          <td id="LC2944" class="blob-code blob-code-inner js-file-line">Ans: We can turn it into a set to do that.</td>
        </tr>
        <tr>
          <td id="L2945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2945"></td>
          <td id="LC2945" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2946"></td>
          <td id="LC2946" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list=[1,2,1,3,4,2]</td>
        </tr>
        <tr>
          <td id="L2947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2947"></td>
          <td id="LC2947" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; set(list)</td>
        </tr>
        <tr>
          <td id="L2948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2948"></td>
          <td id="LC2948" class="blob-code blob-code-inner js-file-line">{1, 2, 3, 4}</td>
        </tr>
        <tr>
          <td id="L2949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2949"></td>
          <td id="LC2949" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2950"></td>
          <td id="LC2950" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2951"></td>
          <td id="LC2951" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2952"></td>
          <td id="LC2952" class="blob-code blob-code-inner js-file-line">280. Can you explain the life cycle of a thread?</td>
        </tr>
        <tr>
          <td id="L2953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2953"></td>
          <td id="LC2953" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L2954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2954"></td>
          <td id="LC2954" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2955"></td>
          <td id="LC2955" class="blob-code blob-code-inner js-file-line">python scripting interview questions</td>
        </tr>
        <tr>
          <td id="L2956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2956"></td>
          <td id="LC2956" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2957"></td>
          <td id="LC2957" class="blob-code blob-code-inner js-file-line">To create a thread, we create a class that we make override the run method of the thread class. Then, we instantiate it.</td>
        </tr>
        <tr>
          <td id="L2958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2958"></td>
          <td id="LC2958" class="blob-code blob-code-inner js-file-line">A thread that we just created is in the new state. When we make a call to start() on it, it forwards the threads for scheduling. These are in the ready state.</td>
        </tr>
        <tr>
          <td id="L2959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2959"></td>
          <td id="LC2959" class="blob-code blob-code-inner js-file-line">When execution begins, the thread is in the running state.</td>
        </tr>
        <tr>
          <td id="L2960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2960"></td>
          <td id="LC2960" class="blob-code blob-code-inner js-file-line">Calls to methods like sleep() and join() make a thread wait. Such a thread is in the waiting/blocked state.</td>
        </tr>
        <tr>
          <td id="L2961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2961"></td>
          <td id="LC2961" class="blob-code blob-code-inner js-file-line">When a thread is done waiting or executing, other waiting threads are sent for scheduling.</td>
        </tr>
        <tr>
          <td id="L2962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2962"></td>
          <td id="LC2962" class="blob-code blob-code-inner js-file-line">A running thread that is done executing terminates and is in the dead state.</td>
        </tr>
        <tr>
          <td id="L2963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2963"></td>
          <td id="LC2963" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2964"></td>
          <td id="LC2964" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2965"></td>
          <td id="LC2965" class="blob-code blob-code-inner js-file-line">281. Explain the //, %, and ** operators in Python?</td>
        </tr>
        <tr>
          <td id="L2966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2966"></td>
          <td id="LC2966" class="blob-code blob-code-inner js-file-line">Ans: The // operator performs floor division. It will return the integer part of the result on division.</td>
        </tr>
        <tr>
          <td id="L2967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2967"></td>
          <td id="LC2967" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2968"></td>
          <td id="LC2968" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 7//2</td>
        </tr>
        <tr>
          <td id="L2969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2969"></td>
          <td id="LC2969" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L2970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2970"></td>
          <td id="LC2970" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2971"></td>
          <td id="LC2971" class="blob-code blob-code-inner js-file-line">Normal division would return 3.5 here.</td>
        </tr>
        <tr>
          <td id="L2972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2972"></td>
          <td id="LC2972" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2973"></td>
          <td id="LC2973" class="blob-code blob-code-inner js-file-line">Similarly, ** performs exponentiation. a**b returns the value of a raised to the power b.</td>
        </tr>
        <tr>
          <td id="L2974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2974"></td>
          <td id="LC2974" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2975"></td>
          <td id="LC2975" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 2**10</td>
        </tr>
        <tr>
          <td id="L2976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2976"></td>
          <td id="LC2976" class="blob-code blob-code-inner js-file-line">1024</td>
        </tr>
        <tr>
          <td id="L2977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2977"></td>
          <td id="LC2977" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2978"></td>
          <td id="LC2978" class="blob-code blob-code-inner js-file-line">Finally, % is for modulus. This gives us the value left after the highest achievable division.</td>
        </tr>
        <tr>
          <td id="L2979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2979"></td>
          <td id="LC2979" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2980"></td>
          <td id="LC2980" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 13%7</td>
        </tr>
        <tr>
          <td id="L2981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2981"></td>
          <td id="LC2981" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L2982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2982"></td>
          <td id="LC2982" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2983"></td>
          <td id="LC2983" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 3.5%1.5</td>
        </tr>
        <tr>
          <td id="L2984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2984"></td>
          <td id="LC2984" class="blob-code blob-code-inner js-file-line">0.5 </td>
        </tr>
        <tr>
          <td id="L2985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2985"></td>
          <td id="LC2985" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2986"></td>
          <td id="LC2986" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2987"></td>
          <td id="LC2987" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2988"></td>
          <td id="LC2988" class="blob-code blob-code-inner js-file-line">282. What are membership operators?</td>
        </tr>
        <tr>
          <td id="L2989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2989"></td>
          <td id="LC2989" class="blob-code blob-code-inner js-file-line">Ans:  With the operators ‘in’ and ‘not in’, we can confirm if a value is a member in another.</td>
        </tr>
        <tr>
          <td id="L2990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2990"></td>
          <td id="LC2990" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2991"></td>
          <td id="LC2991" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘me’ in ‘disappointment’</td>
        </tr>
        <tr>
          <td id="L2992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2992"></td>
          <td id="LC2992" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2993"></td>
          <td id="LC2993" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2994"></td>
          <td id="LC2994" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘us’ not in ‘disappointment’</td>
        </tr>
        <tr>
          <td id="L2995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2995"></td>
          <td id="LC2995" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L2996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2996"></td>
          <td id="LC2996" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2997"></td>
          <td id="LC2997" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L2998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2998"></td>
          <td id="LC2998" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L2999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2999"></td>
          <td id="LC2999" class="blob-code blob-code-inner js-file-line">283. Explain identity operators in Python?</td>
        </tr>
        <tr>
          <td id="L3000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3000"></td>
          <td id="LC3000" class="blob-code blob-code-inner js-file-line">Ans: The operators ‘is’ and ‘is not’ tell us if two values have the same identity.</td>
        </tr>
        <tr>
          <td id="L3001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3001"></td>
          <td id="LC3001" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3002"></td>
          <td id="LC3002" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 10 is ’10’</td>
        </tr>
        <tr>
          <td id="L3003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3003"></td>
          <td id="LC3003" class="blob-code blob-code-inner js-file-line">False</td>
        </tr>
        <tr>
          <td id="L3004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3004"></td>
          <td id="LC3004" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3005"></td>
          <td id="LC3005" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; True is not False</td>
        </tr>
        <tr>
          <td id="L3006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3006"></td>
          <td id="LC3006" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3007"></td>
          <td id="LC3007" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3008"></td>
          <td id="LC3008" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3009"></td>
          <td id="LC3009" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3010"></td>
          <td id="LC3010" class="blob-code blob-code-inner js-file-line">284. Finally, tell us about bitwise operators in Python?</td>
        </tr>
        <tr>
          <td id="L3011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3011"></td>
          <td id="LC3011" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3012"></td>
          <td id="LC3012" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3013"></td>
          <td id="LC3013" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3014"></td>
          <td id="LC3014" class="blob-code blob-code-inner js-file-line">python interview questions for freshers</td>
        </tr>
        <tr>
          <td id="L3015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3015"></td>
          <td id="LC3015" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3016"></td>
          <td id="LC3016" class="blob-code blob-code-inner js-file-line">These operate on values bit by bit.</td>
        </tr>
        <tr>
          <td id="L3017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3017"></td>
          <td id="LC3017" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3018"></td>
          <td id="LC3018" class="blob-code blob-code-inner js-file-line">AND (&amp;) This performs &amp; on each bit pair.</td>
        </tr>
        <tr>
          <td id="L3019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3019"></td>
          <td id="LC3019" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3020"></td>
          <td id="LC3020" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 0b110 &amp; 0b010</td>
        </tr>
        <tr>
          <td id="L3021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3021"></td>
          <td id="LC3021" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L3022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3022"></td>
          <td id="LC3022" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3023"></td>
          <td id="LC3023" class="blob-code blob-code-inner js-file-line">OR (|) This performs | on each bit pair.</td>
        </tr>
        <tr>
          <td id="L3024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3024"></td>
          <td id="LC3024" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3025"></td>
          <td id="LC3025" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 3|2</td>
        </tr>
        <tr>
          <td id="L3026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3026"></td>
          <td id="LC3026" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L3027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3027"></td>
          <td id="LC3027" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3028"></td>
          <td id="LC3028" class="blob-code blob-code-inner js-file-line">XOR (^) This performs an exclusive-OR operation on each bit pair.</td>
        </tr>
        <tr>
          <td id="L3029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3029"></td>
          <td id="LC3029" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3030"></td>
          <td id="LC3030" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 3^2</td>
        </tr>
        <tr>
          <td id="L3031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3031"></td>
          <td id="LC3031" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L3032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3032"></td>
          <td id="LC3032" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3033"></td>
          <td id="LC3033" class="blob-code blob-code-inner js-file-line">Binary One’s Complement (~) This returns the one’s complement of a value.</td>
        </tr>
        <tr>
          <td id="L3034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3034"></td>
          <td id="LC3034" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3035"></td>
          <td id="LC3035" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ~2</td>
        </tr>
        <tr>
          <td id="L3036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3036"></td>
          <td id="LC3036" class="blob-code blob-code-inner js-file-line">-3</td>
        </tr>
        <tr>
          <td id="L3037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3037"></td>
          <td id="LC3037" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3038"></td>
          <td id="LC3038" class="blob-code blob-code-inner js-file-line">Binary Left-Shift (&lt;&lt;) This shifts the bits to the left by the specified amount.</td>
        </tr>
        <tr>
          <td id="L3039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3039"></td>
          <td id="LC3039" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3040"></td>
          <td id="LC3040" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 1&lt;&lt;2</td>
        </tr>
        <tr>
          <td id="L3041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3041"></td>
          <td id="LC3041" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L3042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3042"></td>
          <td id="LC3042" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3043"></td>
          <td id="LC3043" class="blob-code blob-code-inner js-file-line">Here, 001 was shifted to the left by two places to get 100, which is binary for 4.</td>
        </tr>
        <tr>
          <td id="L3044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3044"></td>
          <td id="LC3044" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3045"></td>
          <td id="LC3045" class="blob-code blob-code-inner js-file-line">Binary Right-Shift (&gt;&gt;)</td>
        </tr>
        <tr>
          <td id="L3046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3046"></td>
          <td id="LC3046" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3047"></td>
          <td id="LC3047" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 4&gt;&gt;2</td>
        </tr>
        <tr>
          <td id="L3048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3048"></td>
          <td id="LC3048" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L3049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3049"></td>
          <td id="LC3049" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3050"></td>
          <td id="LC3050" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3051"></td>
          <td id="LC3051" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3052"></td>
          <td id="LC3052" class="blob-code blob-code-inner js-file-line">285. What data types does Python support?</td>
        </tr>
        <tr>
          <td id="L3053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3053"></td>
          <td id="LC3053" class="blob-code blob-code-inner js-file-line">Ans:  Python provides us with five kinds of data types:</td>
        </tr>
        <tr>
          <td id="L3054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3054"></td>
          <td id="LC3054" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3055"></td>
          <td id="LC3055" class="blob-code blob-code-inner js-file-line">Numbers – Numbers use to hold numerical values.</td>
        </tr>
        <tr>
          <td id="L3056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3056"></td>
          <td id="LC3056" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3057"></td>
          <td id="LC3057" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=7.0</td>
        </tr>
        <tr>
          <td id="L3058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3058"></td>
          <td id="LC3058" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt;</td>
        </tr>
        <tr>
          <td id="L3059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3059"></td>
          <td id="LC3059" class="blob-code blob-code-inner js-file-line">Strings – A string is a sequence of characters. We declare it using single or double quotes.</td>
        </tr>
        <tr>
          <td id="L3060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3060"></td>
          <td id="LC3060" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3061"></td>
          <td id="LC3061" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; title=“Ayushi’s Book”</td>
        </tr>
        <tr>
          <td id="L3062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3062"></td>
          <td id="LC3062" class="blob-code blob-code-inner js-file-line">Lists – A list is an ordered collection of values, and we declare it using square brackets.</td>
        </tr>
        <tr>
          <td id="L3063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3063"></td>
          <td id="LC3063" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3064"></td>
          <td id="LC3064" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; colors=[‘red’,‘green’,‘blue’]</td>
        </tr>
        <tr>
          <td id="L3065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3065"></td>
          <td id="LC3065" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(colors)</td>
        </tr>
        <tr>
          <td id="L3066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3066"></td>
          <td id="LC3066" class="blob-code blob-code-inner js-file-line">&lt;class ‘list’&gt;</td>
        </tr>
        <tr>
          <td id="L3067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3067"></td>
          <td id="LC3067" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3068"></td>
          <td id="LC3068" class="blob-code blob-code-inner js-file-line">Tuples – A tuple, like a list, is an ordered collection of values. The difference. However, is that a tuple is immutable. This means that we cannot change a value in it.</td>
        </tr>
        <tr>
          <td id="L3069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3069"></td>
          <td id="LC3069" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3070"></td>
          <td id="LC3070" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; name=(‘Ayushi’,‘Sharma’)</td>
        </tr>
        <tr>
          <td id="L3071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3071"></td>
          <td id="LC3071" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; name[0]=‘Avery’</td>
        </tr>
        <tr>
          <td id="L3072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3072"></td>
          <td id="LC3072" class="blob-code blob-code-inner js-file-line">Traceback (most recent call last):</td>
        </tr>
        <tr>
          <td id="L3073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3073"></td>
          <td id="LC3073" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3074"></td>
          <td id="LC3074" class="blob-code blob-code-inner js-file-line">File “&lt;pyshell#129&gt;”, line 1, in &lt;module&gt;</td>
        </tr>
        <tr>
          <td id="L3075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3075"></td>
          <td id="LC3075" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3076"></td>
          <td id="LC3076" class="blob-code blob-code-inner js-file-line">name[0]=’Avery’</td>
        </tr>
        <tr>
          <td id="L3077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3077"></td>
          <td id="LC3077" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3078"></td>
          <td id="LC3078" class="blob-code blob-code-inner js-file-line">TypeError: ‘tuple’ object does not support item assignment</td>
        </tr>
        <tr>
          <td id="L3079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3079"></td>
          <td id="LC3079" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3080"></td>
          <td id="LC3080" class="blob-code blob-code-inner js-file-line">Dictionary – A dictionary is a data structure that holds key-value pairs. We declare it using curly braces.</td>
        </tr>
        <tr>
          <td id="L3081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3081"></td>
          <td id="LC3081" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3082"></td>
          <td id="LC3082" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; squares={1:1,2:4,3:9,4:16,5:25}</td>
        </tr>
        <tr>
          <td id="L3083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3083"></td>
          <td id="LC3083" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(squares)</td>
        </tr>
        <tr>
          <td id="L3084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3084"></td>
          <td id="LC3084" class="blob-code blob-code-inner js-file-line">&lt;class ‘dict’&gt;</td>
        </tr>
        <tr>
          <td id="L3085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3085"></td>
          <td id="LC3085" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3086"></td>
          <td id="LC3086" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type({})</td>
        </tr>
        <tr>
          <td id="L3087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3087"></td>
          <td id="LC3087" class="blob-code blob-code-inner js-file-line">&lt;class ‘dict’&gt;</td>
        </tr>
        <tr>
          <td id="L3088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3088"></td>
          <td id="LC3088" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3089"></td>
          <td id="LC3089" class="blob-code blob-code-inner js-file-line">We can also use a dictionary comprehension:</td>
        </tr>
        <tr>
          <td id="L3090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3090"></td>
          <td id="LC3090" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3091"></td>
          <td id="LC3091" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; squares={x:x**2 for x in range(1,6)}</td>
        </tr>
        <tr>
          <td id="L3092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3092"></td>
          <td id="LC3092" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; squares</td>
        </tr>
        <tr>
          <td id="L3093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3093"></td>
          <td id="LC3093" class="blob-code blob-code-inner js-file-line">{1: 1, 2: 4, 3: 9, 4: 16, 5: 25}</td>
        </tr>
        <tr>
          <td id="L3094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3094"></td>
          <td id="LC3094" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3095"></td>
          <td id="LC3095" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3096"></td>
          <td id="LC3096" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3097"></td>
          <td id="LC3097" class="blob-code blob-code-inner js-file-line">286. How would you convert a string into an int in Python?</td>
        </tr>
        <tr>
          <td id="L3098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3098"></td>
          <td id="LC3098" class="blob-code blob-code-inner js-file-line">Ans: If a string contains only numerical characters, you can convert it into an integer using the int() function.</td>
        </tr>
        <tr>
          <td id="L3099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3099"></td>
          <td id="LC3099" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3100"></td>
          <td id="LC3100" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; int(‘227’)</td>
        </tr>
        <tr>
          <td id="L3101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3101"></td>
          <td id="LC3101" class="blob-code blob-code-inner js-file-line">227</td>
        </tr>
        <tr>
          <td id="L3102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3102"></td>
          <td id="LC3102" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3103"></td>
          <td id="LC3103" class="blob-code blob-code-inner js-file-line">Let’s check the types:</td>
        </tr>
        <tr>
          <td id="L3104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3104"></td>
          <td id="LC3104" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3105"></td>
          <td id="LC3105" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(‘227’)</td>
        </tr>
        <tr>
          <td id="L3106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3106"></td>
          <td id="LC3106" class="blob-code blob-code-inner js-file-line">&lt;class ‘str’&gt;</td>
        </tr>
        <tr>
          <td id="L3107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3107"></td>
          <td id="LC3107" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3108"></td>
          <td id="LC3108" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(int(‘227’))</td>
        </tr>
        <tr>
          <td id="L3109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3109"></td>
          <td id="LC3109" class="blob-code blob-code-inner js-file-line">&lt;class ‘int’&gt;</td>
        </tr>
        <tr>
          <td id="L3110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3110"></td>
          <td id="LC3110" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3111"></td>
          <td id="LC3111" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3112"></td>
          <td id="LC3112" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3113"></td>
          <td id="LC3113" class="blob-code blob-code-inner js-file-line">287. How do you take input in Python?</td>
        </tr>
        <tr>
          <td id="L3114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3114"></td>
          <td id="LC3114" class="blob-code blob-code-inner js-file-line">Ans:  For taking input from the user, we have the function input(). In Python 2, we had another function raw_input().</td>
        </tr>
        <tr>
          <td id="L3115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3115"></td>
          <td id="LC3115" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3116"></td>
          <td id="LC3116" class="blob-code blob-code-inner js-file-line">The input() function takes, as an argument, the text to be displayed for the task:</td>
        </tr>
        <tr>
          <td id="L3117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3117"></td>
          <td id="LC3117" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3118"></td>
          <td id="LC3118" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=input(‘Enter a number’)</td>
        </tr>
        <tr>
          <td id="L3119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3119"></td>
          <td id="LC3119" class="blob-code blob-code-inner js-file-line">Enter a number7</td>
        </tr>
        <tr>
          <td id="L3120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3120"></td>
          <td id="LC3120" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3121"></td>
          <td id="LC3121" class="blob-code blob-code-inner js-file-line">But if you have paid attention, you know that it takes input in the form of a string.</td>
        </tr>
        <tr>
          <td id="L3122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3122"></td>
          <td id="LC3122" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3123"></td>
          <td id="LC3123" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; type(a)</td>
        </tr>
        <tr>
          <td id="L3124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3124"></td>
          <td id="LC3124" class="blob-code blob-code-inner js-file-line">&lt;class ‘str’&gt;</td>
        </tr>
        <tr>
          <td id="L3125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3125"></td>
          <td id="LC3125" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3126"></td>
          <td id="LC3126" class="blob-code blob-code-inner js-file-line">Multiplying this by 2 gives us this:</td>
        </tr>
        <tr>
          <td id="L3127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3127"></td>
          <td id="LC3127" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3128"></td>
          <td id="LC3128" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a*=2</td>
        </tr>
        <tr>
          <td id="L3129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3129"></td>
          <td id="LC3129" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3130"></td>
          <td id="LC3130" class="blob-code blob-code-inner js-file-line">’77’</td>
        </tr>
        <tr>
          <td id="L3131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3131"></td>
          <td id="LC3131" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3132"></td>
          <td id="LC3132" class="blob-code blob-code-inner js-file-line">So, what if we need to work on an integer instead?</td>
        </tr>
        <tr>
          <td id="L3133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3133"></td>
          <td id="LC3133" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3134"></td>
          <td id="LC3134" class="blob-code blob-code-inner js-file-line">We use the int() function for this.</td>
        </tr>
        <tr>
          <td id="L3135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3135"></td>
          <td id="LC3135" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3136"></td>
          <td id="LC3136" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=int(input(‘Enter a number’))</td>
        </tr>
        <tr>
          <td id="L3137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3137"></td>
          <td id="LC3137" class="blob-code blob-code-inner js-file-line">Enter a number7</td>
        </tr>
        <tr>
          <td id="L3138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3138"></td>
          <td id="LC3138" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3139"></td>
          <td id="LC3139" class="blob-code blob-code-inner js-file-line">Now when we multiply it by 2, we get this:</td>
        </tr>
        <tr>
          <td id="L3140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3140"></td>
          <td id="LC3140" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3141"></td>
          <td id="LC3141" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a*=2</td>
        </tr>
        <tr>
          <td id="L3142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3142"></td>
          <td id="LC3142" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3143"></td>
          <td id="LC3143" class="blob-code blob-code-inner js-file-line">14</td>
        </tr>
        <tr>
          <td id="L3144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3144"></td>
          <td id="LC3144" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3145"></td>
          <td id="LC3145" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3146"></td>
          <td id="LC3146" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3147"></td>
          <td id="LC3147" class="blob-code blob-code-inner js-file-line">288. What is a function?</td>
        </tr>
        <tr>
          <td id="L3148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3148"></td>
          <td id="LC3148" class="blob-code blob-code-inner js-file-line">Ans: When we want to execute a sequence of statements, we can give it a name. Let’s define a function to take two numbers and return the greater number.</td>
        </tr>
        <tr>
          <td id="L3149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3149"></td>
          <td id="LC3149" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3150"></td>
          <td id="LC3150" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; def greater(a,b):</td>
        </tr>
        <tr>
          <td id="L3151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3151"></td>
          <td id="LC3151" class="blob-code blob-code-inner js-file-line">return a is a&gt;b else b</td>
        </tr>
        <tr>
          <td id="L3152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3152"></td>
          <td id="LC3152" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; greater(3,3.5)</td>
        </tr>
        <tr>
          <td id="L3153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3153"></td>
          <td id="LC3153" class="blob-code blob-code-inner js-file-line">3.5</td>
        </tr>
        <tr>
          <td id="L3154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3154"></td>
          <td id="LC3154" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3155"></td>
          <td id="LC3155" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3156"></td>
          <td id="LC3156" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3157"></td>
          <td id="LC3157" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3158"></td>
          <td id="LC3158" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3159"></td>
          <td id="LC3159" class="blob-code blob-code-inner js-file-line">289. What is recursion?</td>
        </tr>
        <tr>
          <td id="L3160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3160"></td>
          <td id="LC3160" class="blob-code blob-code-inner js-file-line">Ans: When a function makes a call to itself, it is termed recursion. But then, in order for it to avoid forming an infinite loop, we must have a base condition.</td>
        </tr>
        <tr>
          <td id="L3161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3161"></td>
          <td id="LC3161" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3162"></td>
          <td id="LC3162" class="blob-code blob-code-inner js-file-line">Let’s take an example.</td>
        </tr>
        <tr>
          <td id="L3163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3163"></td>
          <td id="LC3163" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3164"></td>
          <td id="LC3164" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; def facto(n):</td>
        </tr>
        <tr>
          <td id="L3165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3165"></td>
          <td id="LC3165" class="blob-code blob-code-inner js-file-line">if n==1: return 1</td>
        </tr>
        <tr>
          <td id="L3166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3166"></td>
          <td id="LC3166" class="blob-code blob-code-inner js-file-line">return n*facto(n-1)</td>
        </tr>
        <tr>
          <td id="L3167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3167"></td>
          <td id="LC3167" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; facto(4)</td>
        </tr>
        <tr>
          <td id="L3168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3168"></td>
          <td id="LC3168" class="blob-code blob-code-inner js-file-line">24</td>
        </tr>
        <tr>
          <td id="L3169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3169"></td>
          <td id="LC3169" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3170"></td>
          <td id="LC3170" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3171"></td>
          <td id="LC3171" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3172"></td>
          <td id="LC3172" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3173"></td>
          <td id="LC3173" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3174"></td>
          <td id="LC3174" class="blob-code blob-code-inner js-file-line">290. What do you know about relational operators in Python?</td>
        </tr>
        <tr>
          <td id="L3175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3175"></td>
          <td id="LC3175" class="blob-code blob-code-inner js-file-line">Ans:  </td>
        </tr>
        <tr>
          <td id="L3176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3176"></td>
          <td id="LC3176" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3177"></td>
          <td id="LC3177" class="blob-code blob-code-inner js-file-line">Top python interview questions with answers</td>
        </tr>
        <tr>
          <td id="L3178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3178"></td>
          <td id="LC3178" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3179"></td>
          <td id="LC3179" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3180"></td>
          <td id="LC3180" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3181"></td>
          <td id="LC3181" class="blob-code blob-code-inner js-file-line">Relational operators compare values.</td>
        </tr>
        <tr>
          <td id="L3182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3182"></td>
          <td id="LC3182" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3183"></td>
          <td id="LC3183" class="blob-code blob-code-inner js-file-line">Less than (&lt;) If the value on the left is lesser, it returns True.</td>
        </tr>
        <tr>
          <td id="L3184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3184"></td>
          <td id="LC3184" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3185"></td>
          <td id="LC3185" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘hi’&lt;‘Hi’</td>
        </tr>
        <tr>
          <td id="L3186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3186"></td>
          <td id="LC3186" class="blob-code blob-code-inner js-file-line">False</td>
        </tr>
        <tr>
          <td id="L3187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3187"></td>
          <td id="LC3187" class="blob-code blob-code-inner js-file-line">Greater than (&gt;) If the value on the left is greater, it returns True.</td>
        </tr>
        <tr>
          <td id="L3188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3188"></td>
          <td id="LC3188" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3189"></td>
          <td id="LC3189" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 1.1+2.2&gt;3.3</td>
        </tr>
        <tr>
          <td id="L3190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3190"></td>
          <td id="LC3190" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3191"></td>
          <td id="LC3191" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3192"></td>
          <td id="LC3192" class="blob-code blob-code-inner js-file-line">This is because of the flawed floating-point arithmetic in Python, due to hardware dependencies.</td>
        </tr>
        <tr>
          <td id="L3193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3193"></td>
          <td id="LC3193" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3194"></td>
          <td id="LC3194" class="blob-code blob-code-inner js-file-line">Less than or equal to (&lt;=) If the value on the left is lesser than or equal to, it returns True.</td>
        </tr>
        <tr>
          <td id="L3195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3195"></td>
          <td id="LC3195" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3196"></td>
          <td id="LC3196" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 3.0&lt;=3</td>
        </tr>
        <tr>
          <td id="L3197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3197"></td>
          <td id="LC3197" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3198"></td>
          <td id="LC3198" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3199"></td>
          <td id="LC3199" class="blob-code blob-code-inner js-file-line">Greater than or equal to (&gt;=) If the value on the left is greater than or equal to, it returns True.</td>
        </tr>
        <tr>
          <td id="L3200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3200"></td>
          <td id="LC3200" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3201"></td>
          <td id="LC3201" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; True&gt;=False</td>
        </tr>
        <tr>
          <td id="L3202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3202"></td>
          <td id="LC3202" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3203"></td>
          <td id="LC3203" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3204"></td>
          <td id="LC3204" class="blob-code blob-code-inner js-file-line">Equal to (==) If the two values are equal, it returns True.</td>
        </tr>
        <tr>
          <td id="L3205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3205"></td>
          <td id="LC3205" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3206"></td>
          <td id="LC3206" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; {1,3,2,2}=={1,2,3}</td>
        </tr>
        <tr>
          <td id="L3207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3207"></td>
          <td id="LC3207" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3208"></td>
          <td id="LC3208" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3209"></td>
          <td id="LC3209" class="blob-code blob-code-inner js-file-line">Not equal to (!=) If the two values are unequal, it returns True.</td>
        </tr>
        <tr>
          <td id="L3210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3210"></td>
          <td id="LC3210" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3211"></td>
          <td id="LC3211" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; True!=0.1</td>
        </tr>
        <tr>
          <td id="L3212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3212"></td>
          <td id="LC3212" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3213"></td>
          <td id="LC3213" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3214"></td>
          <td id="LC3214" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; False!=0.1</td>
        </tr>
        <tr>
          <td id="L3215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3215"></td>
          <td id="LC3215" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3216"></td>
          <td id="LC3216" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3217"></td>
          <td id="LC3217" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3218"></td>
          <td id="LC3218" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3219"></td>
          <td id="LC3219" class="blob-code blob-code-inner js-file-line">291. What are assignment operators in Python?</td>
        </tr>
        <tr>
          <td id="L3220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3220"></td>
          <td id="LC3220" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3221"></td>
          <td id="LC3221" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3222"></td>
          <td id="LC3222" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3223"></td>
          <td id="LC3223" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3224"></td>
          <td id="LC3224" class="blob-code blob-code-inner js-file-line">python coding interview questions</td>
        </tr>
        <tr>
          <td id="L3225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3225"></td>
          <td id="LC3225" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3226"></td>
          <td id="LC3226" class="blob-code blob-code-inner js-file-line">We can combine all arithmetic operators with the assignment symbol.</td>
        </tr>
        <tr>
          <td id="L3227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3227"></td>
          <td id="LC3227" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3228"></td>
          <td id="LC3228" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=7</td>
        </tr>
        <tr>
          <td id="L3229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3229"></td>
          <td id="LC3229" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a+=1</td>
        </tr>
        <tr>
          <td id="L3230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3230"></td>
          <td id="LC3230" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3231"></td>
          <td id="LC3231" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L3232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3232"></td>
          <td id="LC3232" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3233"></td>
          <td id="LC3233" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a-=1</td>
        </tr>
        <tr>
          <td id="L3234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3234"></td>
          <td id="LC3234" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3235"></td>
          <td id="LC3235" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3236"></td>
          <td id="LC3236" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3237"></td>
          <td id="LC3237" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a*=2</td>
        </tr>
        <tr>
          <td id="L3238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3238"></td>
          <td id="LC3238" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3239"></td>
          <td id="LC3239" class="blob-code blob-code-inner js-file-line">14</td>
        </tr>
        <tr>
          <td id="L3240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3240"></td>
          <td id="LC3240" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3241"></td>
          <td id="LC3241" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a/=2</td>
        </tr>
        <tr>
          <td id="L3242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3242"></td>
          <td id="LC3242" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3243"></td>
          <td id="LC3243" class="blob-code blob-code-inner js-file-line">7.0</td>
        </tr>
        <tr>
          <td id="L3244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3244"></td>
          <td id="LC3244" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3245"></td>
          <td id="LC3245" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a**=2</td>
        </tr>
        <tr>
          <td id="L3246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3246"></td>
          <td id="LC3246" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3247"></td>
          <td id="LC3247" class="blob-code blob-code-inner js-file-line">49.0</td>
        </tr>
        <tr>
          <td id="L3248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3248"></td>
          <td id="LC3248" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3249"></td>
          <td id="LC3249" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a//=3</td>
        </tr>
        <tr>
          <td id="L3250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3250"></td>
          <td id="LC3250" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3251"></td>
          <td id="LC3251" class="blob-code blob-code-inner js-file-line">16.0</td>
        </tr>
        <tr>
          <td id="L3252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3252"></td>
          <td id="LC3252" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3253"></td>
          <td id="LC3253" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a%=4</td>
        </tr>
        <tr>
          <td id="L3254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3254"></td>
          <td id="LC3254" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a</td>
        </tr>
        <tr>
          <td id="L3255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3255"></td>
          <td id="LC3255" class="blob-code blob-code-inner js-file-line">0.0</td>
        </tr>
        <tr>
          <td id="L3256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3256"></td>
          <td id="LC3256" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3257"></td>
          <td id="LC3257" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3258"></td>
          <td id="LC3258" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3259"></td>
          <td id="LC3259" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3260"></td>
          <td id="LC3260" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3261"></td>
          <td id="LC3261" class="blob-code blob-code-inner js-file-line">292. Explain logical operators in Python.?</td>
        </tr>
        <tr>
          <td id="L3262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3262"></td>
          <td id="LC3262" class="blob-code blob-code-inner js-file-line">Ans:  We have three logical operators- and, or, not.</td>
        </tr>
        <tr>
          <td id="L3263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3263"></td>
          <td id="LC3263" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3264"></td>
          <td id="LC3264" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; False and True</td>
        </tr>
        <tr>
          <td id="L3265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3265"></td>
          <td id="LC3265" class="blob-code blob-code-inner js-file-line">False</td>
        </tr>
        <tr>
          <td id="L3266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3266"></td>
          <td id="LC3266" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3267"></td>
          <td id="LC3267" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 7&lt;7 or True</td>
        </tr>
        <tr>
          <td id="L3268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3268"></td>
          <td id="LC3268" class="blob-code blob-code-inner js-file-line">True</td>
        </tr>
        <tr>
          <td id="L3269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3269"></td>
          <td id="LC3269" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3270"></td>
          <td id="LC3270" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; not 2==2</td>
        </tr>
        <tr>
          <td id="L3271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3271"></td>
          <td id="LC3271" class="blob-code blob-code-inner js-file-line">False</td>
        </tr>
        <tr>
          <td id="L3272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3272"></td>
          <td id="LC3272" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3273"></td>
          <td id="LC3273" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3274"></td>
          <td id="LC3274" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3275"></td>
          <td id="LC3275" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3276"></td>
          <td id="LC3276" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3277"></td>
          <td id="LC3277" class="blob-code blob-code-inner js-file-line">293. What does the function zip() do?</td>
        </tr>
        <tr>
          <td id="L3278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3278"></td>
          <td id="LC3278" class="blob-code blob-code-inner js-file-line">Ans:  One of the less common functions with beginners, zip() returns an iterator of tuples.</td>
        </tr>
        <tr>
          <td id="L3279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3279"></td>
          <td id="LC3279" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3280"></td>
          <td id="LC3280" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(zip([‘a’,‘b’,‘c’],[1,2,3]))</td>
        </tr>
        <tr>
          <td id="L3281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3281"></td>
          <td id="LC3281" class="blob-code blob-code-inner js-file-line">[(‘a’, 1), (‘b’, 2), (‘c’, 3)]</td>
        </tr>
        <tr>
          <td id="L3282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3282"></td>
          <td id="LC3282" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3283"></td>
          <td id="LC3283" class="blob-code blob-code-inner js-file-line">Here, it pairs items from the two lists and creates tuples with those. But it doesn’t have to be lists.</td>
        </tr>
        <tr>
          <td id="L3284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3284"></td>
          <td id="LC3284" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3285"></td>
          <td id="LC3285" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(zip((‘a’,‘b’,‘c’),(1,2,3)))</td>
        </tr>
        <tr>
          <td id="L3286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3286"></td>
          <td id="LC3286" class="blob-code blob-code-inner js-file-line">[(‘a’, 1), (‘b’, 2), (‘c’, 3)]</td>
        </tr>
        <tr>
          <td id="L3287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3287"></td>
          <td id="LC3287" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3288"></td>
          <td id="LC3288" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3289"></td>
          <td id="LC3289" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3290"></td>
          <td id="LC3290" class="blob-code blob-code-inner js-file-line">294. How can you declare multiple assignments in one statement?</td>
        </tr>
        <tr>
          <td id="L3291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3291"></td>
          <td id="LC3291" class="blob-code blob-code-inner js-file-line">Ans: There are two ways to do this:</td>
        </tr>
        <tr>
          <td id="L3292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3292"></td>
          <td id="LC3292" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3293"></td>
          <td id="LC3293" class="blob-code blob-code-inner js-file-line">First – </td>
        </tr>
        <tr>
          <td id="L3294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3294"></td>
          <td id="LC3294" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3295"></td>
          <td id="LC3295" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a,b,c=3,4,5 #This assigns 3, 4, and 5 to a, b, and c respectively</td>
        </tr>
        <tr>
          <td id="L3296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3296"></td>
          <td id="LC3296" class="blob-code blob-code-inner js-file-line">Second – </td>
        </tr>
        <tr>
          <td id="L3297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3297"></td>
          <td id="LC3297" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3298"></td>
          <td id="LC3298" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; a=b=c=3 #This assigns 3 to a, b, and c</td>
        </tr>
        <tr>
          <td id="L3299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3299"></td>
          <td id="LC3299" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3300"></td>
          <td id="LC3300" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3301"></td>
          <td id="LC3301" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3302"></td>
          <td id="LC3302" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3303"></td>
          <td id="LC3303" class="blob-code blob-code-inner js-file-line">295. If you are ever stuck in an infinite loop, how will you break out of it?</td>
        </tr>
        <tr>
          <td id="L3304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3304"></td>
          <td id="LC3304" class="blob-code blob-code-inner js-file-line">Ans: For this, we press Ctrl+C. This interrupts the execution. Let’s create an infinite loop to demonstrate this.</td>
        </tr>
        <tr>
          <td id="L3305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3305"></td>
          <td id="LC3305" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3306"></td>
          <td id="LC3306" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; def counterfunc(n):</td>
        </tr>
        <tr>
          <td id="L3307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3307"></td>
          <td id="LC3307" class="blob-code blob-code-inner js-file-line">while(n==7):print(n)</td>
        </tr>
        <tr>
          <td id="L3308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3308"></td>
          <td id="LC3308" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; counterfunc(7)</td>
        </tr>
        <tr>
          <td id="L3309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3309"></td>
          <td id="LC3309" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3310"></td>
          <td id="LC3310" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3311"></td>
          <td id="LC3311" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3312"></td>
          <td id="LC3312" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3313"></td>
          <td id="LC3313" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3314"></td>
          <td id="LC3314" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3315"></td>
          <td id="LC3315" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3316"></td>
          <td id="LC3316" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3317"></td>
          <td id="LC3317" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3318"></td>
          <td id="LC3318" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3319"></td>
          <td id="LC3319" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3320"></td>
          <td id="LC3320" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3321"></td>
          <td id="LC3321" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3322"></td>
          <td id="LC3322" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3323"></td>
          <td id="LC3323" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3324"></td>
          <td id="LC3324" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3325"></td>
          <td id="LC3325" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3326"></td>
          <td id="LC3326" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3327"></td>
          <td id="LC3327" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3328"></td>
          <td id="LC3328" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3329"></td>
          <td id="LC3329" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3330"></td>
          <td id="LC3330" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3331"></td>
          <td id="LC3331" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3332"></td>
          <td id="LC3332" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3333"></td>
          <td id="LC3333" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3334"></td>
          <td id="LC3334" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3335"></td>
          <td id="LC3335" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3336"></td>
          <td id="LC3336" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3337"></td>
          <td id="LC3337" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3338"></td>
          <td id="LC3338" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3339"></td>
          <td id="LC3339" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3340"></td>
          <td id="LC3340" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3341"></td>
          <td id="LC3341" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L3342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3342"></td>
          <td id="LC3342" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3343"></td>
          <td id="LC3343" class="blob-code blob-code-inner js-file-line">Traceback (most recent call last):</td>
        </tr>
        <tr>
          <td id="L3344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3344"></td>
          <td id="LC3344" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3345"></td>
          <td id="LC3345" class="blob-code blob-code-inner js-file-line">File “&lt;pyshell#332&gt;”, line 1, in &lt;module&gt;</td>
        </tr>
        <tr>
          <td id="L3346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3346"></td>
          <td id="LC3346" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3347"></td>
          <td id="LC3347" class="blob-code blob-code-inner js-file-line">counterfunc(7)</td>
        </tr>
        <tr>
          <td id="L3348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3348"></td>
          <td id="LC3348" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3349"></td>
          <td id="LC3349" class="blob-code blob-code-inner js-file-line">File “&lt;pyshell#331&gt;”, line 2, in counterfunc</td>
        </tr>
        <tr>
          <td id="L3350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3350"></td>
          <td id="LC3350" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3351"></td>
          <td id="LC3351" class="blob-code blob-code-inner js-file-line">while(n==7):print(n)</td>
        </tr>
        <tr>
          <td id="L3352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3352"></td>
          <td id="LC3352" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3353"></td>
          <td id="LC3353" class="blob-code blob-code-inner js-file-line">KeyboardInterrupt</td>
        </tr>
        <tr>
          <td id="L3354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3354"></td>
          <td id="LC3354" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3355"></td>
          <td id="LC3355" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3356"></td>
          <td id="LC3356" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3357"></td>
          <td id="LC3357" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3358"></td>
          <td id="LC3358" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3359"></td>
          <td id="LC3359" class="blob-code blob-code-inner js-file-line">296. How is a .pyc file different from a .py file?</td>
        </tr>
        <tr>
          <td id="L3360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3360"></td>
          <td id="LC3360" class="blob-code blob-code-inner js-file-line">Ans: While both files hold bytecode, .pyc is the compiled version of a Python file. It has platform-independent bytecode. Hence, we can execute it on any platform that supports the .pyc format. Python automatically generates it to improve performance(in terms of load time, not speed).</td>
        </tr>
        <tr>
          <td id="L3361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3361"></td>
          <td id="LC3361" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3362"></td>
          <td id="LC3362" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3363"></td>
          <td id="LC3363" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3364"></td>
          <td id="LC3364" class="blob-code blob-code-inner js-file-line">297. How many types of objects does Python support?</td>
        </tr>
        <tr>
          <td id="L3365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3365"></td>
          <td id="LC3365" class="blob-code blob-code-inner js-file-line">Ans: Immutable objects- Those which do not let us modify their contents. Examples of these will be tuples, booleans, strings, integers, floats, and complexes. Iterations on such objects are faster.</td>
        </tr>
        <tr>
          <td id="L3366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3366"></td>
          <td id="LC3366" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3367"></td>
          <td id="LC3367" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; tuple=(1,2,4)</td>
        </tr>
        <tr>
          <td id="L3368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3368"></td>
          <td id="LC3368" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; tuple</td>
        </tr>
        <tr>
          <td id="L3369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3369"></td>
          <td id="LC3369" class="blob-code blob-code-inner js-file-line">(1, 2, 4)</td>
        </tr>
        <tr>
          <td id="L3370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3370"></td>
          <td id="LC3370" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3371"></td>
          <td id="LC3371" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; 2+4j</td>
        </tr>
        <tr>
          <td id="L3372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3372"></td>
          <td id="LC3372" class="blob-code blob-code-inner js-file-line">(2+4j)</td>
        </tr>
        <tr>
          <td id="L3373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3373"></td>
          <td id="LC3373" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3374"></td>
          <td id="LC3374" class="blob-code blob-code-inner js-file-line">Mutable objects – Those that let you modify their contents. Examples of these are lists, sets, and dicts. Iterations on such objects are slower.</td>
        </tr>
        <tr>
          <td id="L3375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3375"></td>
          <td id="LC3375" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3376"></td>
          <td id="LC3376" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; [2,4,9]</td>
        </tr>
        <tr>
          <td id="L3377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3377"></td>
          <td id="LC3377" class="blob-code blob-code-inner js-file-line">[2, 4, 9]</td>
        </tr>
        <tr>
          <td id="L3378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3378"></td>
          <td id="LC3378" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3379"></td>
          <td id="LC3379" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; dict1={1:1,2:2}</td>
        </tr>
        <tr>
          <td id="L3380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3380"></td>
          <td id="LC3380" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; dict1</td>
        </tr>
        <tr>
          <td id="L3381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3381"></td>
          <td id="LC3381" class="blob-code blob-code-inner js-file-line">{1: 1, 2: 2}</td>
        </tr>
        <tr>
          <td id="L3382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3382"></td>
          <td id="LC3382" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3383"></td>
          <td id="LC3383" class="blob-code blob-code-inner js-file-line">While two equal immutable objects’ reference variables share the same address, it is possible to create two mutable objects with the same content.</td>
        </tr>
        <tr>
          <td id="L3384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3384"></td>
          <td id="LC3384" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3385"></td>
          <td id="LC3385" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3386"></td>
          <td id="LC3386" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3387"></td>
          <td id="LC3387" class="blob-code blob-code-inner js-file-line">298. When is the else part of a try-except block executed?</td>
        </tr>
        <tr>
          <td id="L3388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3388"></td>
          <td id="LC3388" class="blob-code blob-code-inner js-file-line">Ans: In an if-else block, the else part is executed when the condition in the if-statement is False. But with a try-except block, the else part executes only if no exception is raised in the try part.</td>
        </tr>
        <tr>
          <td id="L3389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3389"></td>
          <td id="LC3389" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3390"></td>
          <td id="LC3390" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3391"></td>
          <td id="LC3391" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3392"></td>
          <td id="LC3392" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3393"></td>
          <td id="LC3393" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3394"></td>
          <td id="LC3394" class="blob-code blob-code-inner js-file-line">299. Explain join() and split() in Python?</td>
        </tr>
        <tr>
          <td id="L3395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3395"></td>
          <td id="LC3395" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3396"></td>
          <td id="LC3396" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3397"></td>
          <td id="LC3397" class="blob-code blob-code-inner js-file-line">1)join() lets us join characters from a string together by a character we specify.</td>
        </tr>
        <tr>
          <td id="L3398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3398"></td>
          <td id="LC3398" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3399"></td>
          <td id="LC3399" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘,’.join(‘12345’)</td>
        </tr>
        <tr>
          <td id="L3400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3400"></td>
          <td id="LC3400" class="blob-code blob-code-inner js-file-line">‘1,2,3,4,5’</td>
        </tr>
        <tr>
          <td id="L3401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3401"></td>
          <td id="LC3401" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3402"></td>
          <td id="LC3402" class="blob-code blob-code-inner js-file-line">2) split() lets us split a string around the character we specify.</td>
        </tr>
        <tr>
          <td id="L3403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3403"></td>
          <td id="LC3403" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3404"></td>
          <td id="LC3404" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; ‘1,2,3,4,5’.split(‘,’)</td>
        </tr>
        <tr>
          <td id="L3405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3405"></td>
          <td id="LC3405" class="blob-code blob-code-inner js-file-line">[‘1’, ‘2’, ‘3’, ‘4’, ‘5’]</td>
        </tr>
        <tr>
          <td id="L3406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3406"></td>
          <td id="LC3406" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3407"></td>
          <td id="LC3407" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3408"></td>
          <td id="LC3408" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3409"></td>
          <td id="LC3409" class="blob-code blob-code-inner js-file-line">300. Explain a few methods to implement Functionally Oriented Programming in Python?</td>
        </tr>
        <tr>
          <td id="L3410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3410"></td>
          <td id="LC3410" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3411"></td>
          <td id="LC3411" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3412"></td>
          <td id="LC3412" class="blob-code blob-code-inner js-file-line">Sometimes, when we want to iterate over a list, a few methods come in handy.</td>
        </tr>
        <tr>
          <td id="L3413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3413"></td>
          <td id="LC3413" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3414"></td>
          <td id="LC3414" class="blob-code blob-code-inner js-file-line">a. filter()</td>
        </tr>
        <tr>
          <td id="L3415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3415"></td>
          <td id="LC3415" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3416" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3416"></td>
          <td id="LC3416" class="blob-code blob-code-inner js-file-line">Filter lets us filter in some values based on conditional logic.</td>
        </tr>
        <tr>
          <td id="L3417" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3417"></td>
          <td id="LC3417" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3418" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3418"></td>
          <td id="LC3418" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(filter(lambda x:x&gt;5,range(8)))</td>
        </tr>
        <tr>
          <td id="L3419" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3419"></td>
          <td id="LC3419" class="blob-code blob-code-inner js-file-line">[6, 7]</td>
        </tr>
        <tr>
          <td id="L3420" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3420"></td>
          <td id="LC3420" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3421" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3421"></td>
          <td id="LC3421" class="blob-code blob-code-inner js-file-line">b. map()</td>
        </tr>
        <tr>
          <td id="L3422" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3422"></td>
          <td id="LC3422" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3423" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3423"></td>
          <td id="LC3423" class="blob-code blob-code-inner js-file-line">Map applies a function to every element in an iterable.</td>
        </tr>
        <tr>
          <td id="L3424" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3424"></td>
          <td id="LC3424" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3425" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3425"></td>
          <td id="LC3425" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(map(lambda x:x**2,range(8)))</td>
        </tr>
        <tr>
          <td id="L3426" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3426"></td>
          <td id="LC3426" class="blob-code blob-code-inner js-file-line">[0, 1, 4, 9, 16, 25, 36, 49]</td>
        </tr>
        <tr>
          <td id="L3427" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3427"></td>
          <td id="LC3427" class="blob-code blob-code-inner js-file-line">c. reduce()</td>
        </tr>
        <tr>
          <td id="L3428" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3428"></td>
          <td id="LC3428" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3429" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3429"></td>
          <td id="LC3429" class="blob-code blob-code-inner js-file-line">Reduce repeatedly reduces a sequence pair-wise until we reach a single value.</td>
        </tr>
        <tr>
          <td id="L3430" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3430"></td>
          <td id="LC3430" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3431" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3431"></td>
          <td id="LC3431" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; from functools import reduce</td>
        </tr>
        <tr>
          <td id="L3432" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3432"></td>
          <td id="LC3432" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; reduce(lambda x,y:x-y,[1,2,3,4,5])</td>
        </tr>
        <tr>
          <td id="L3433" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3433"></td>
          <td id="LC3433" class="blob-code blob-code-inner js-file-line">-13</td>
        </tr>
        <tr>
          <td id="L3434" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3434"></td>
          <td id="LC3434" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3435" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3435"></td>
          <td id="LC3435" class="blob-code blob-code-inner js-file-line">300. Explain a few methods to implement Functionally Oriented Programming in Python?</td>
        </tr>
        <tr>
          <td id="L3436" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3436"></td>
          <td id="LC3436" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3437" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3437"></td>
          <td id="LC3437" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3438" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3438"></td>
          <td id="LC3438" class="blob-code blob-code-inner js-file-line">Sometimes, when we want to iterate over a list, a few methods come in handy.</td>
        </tr>
        <tr>
          <td id="L3439" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3439"></td>
          <td id="LC3439" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3440" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3440"></td>
          <td id="LC3440" class="blob-code blob-code-inner js-file-line">a. filter()</td>
        </tr>
        <tr>
          <td id="L3441" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3441"></td>
          <td id="LC3441" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3442" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3442"></td>
          <td id="LC3442" class="blob-code blob-code-inner js-file-line">Filter lets us filter in some values based on conditional logic.</td>
        </tr>
        <tr>
          <td id="L3443" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3443"></td>
          <td id="LC3443" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3444" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3444"></td>
          <td id="LC3444" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(filter(lambda x:x&gt;5,range(8)))</td>
        </tr>
        <tr>
          <td id="L3445" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3445"></td>
          <td id="LC3445" class="blob-code blob-code-inner js-file-line">[6, 7]</td>
        </tr>
        <tr>
          <td id="L3446" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3446"></td>
          <td id="LC3446" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3447" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3447"></td>
          <td id="LC3447" class="blob-code blob-code-inner js-file-line">b. map()</td>
        </tr>
        <tr>
          <td id="L3448" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3448"></td>
          <td id="LC3448" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3449" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3449"></td>
          <td id="LC3449" class="blob-code blob-code-inner js-file-line">Map applies a function to every element in an iterable.</td>
        </tr>
        <tr>
          <td id="L3450" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3450"></td>
          <td id="LC3450" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3451" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3451"></td>
          <td id="LC3451" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(map(lambda x:x**2,range(8)))</td>
        </tr>
        <tr>
          <td id="L3452" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3452"></td>
          <td id="LC3452" class="blob-code blob-code-inner js-file-line">[0, 1, 4, 9, 16, 25, 36, 49]</td>
        </tr>
        <tr>
          <td id="L3453" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3453"></td>
          <td id="LC3453" class="blob-code blob-code-inner js-file-line">c. reduce()</td>
        </tr>
        <tr>
          <td id="L3454" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3454"></td>
          <td id="LC3454" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3455" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3455"></td>
          <td id="LC3455" class="blob-code blob-code-inner js-file-line">Reduce repeatedly reduces a sequence pair-wise until we reach a single value.</td>
        </tr>
        <tr>
          <td id="L3456" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3456"></td>
          <td id="LC3456" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3457" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3457"></td>
          <td id="LC3457" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; from functools import reduce</td>
        </tr>
        <tr>
          <td id="L3458" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3458"></td>
          <td id="LC3458" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; reduce(lambda x,y:x-y,[1,2,3,4,5])</td>
        </tr>
        <tr>
          <td id="L3459" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3459"></td>
          <td id="LC3459" class="blob-code blob-code-inner js-file-line">-13</td>
        </tr>
        <tr>
          <td id="L3460" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3460"></td>
          <td id="LC3460" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3461" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3461"></td>
          <td id="LC3461" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3462" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3462"></td>
          <td id="LC3462" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3463" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3463"></td>
          <td id="LC3463" class="blob-code blob-code-inner js-file-line">301. Is del the same as remove()? What are they?</td>
        </tr>
        <tr>
          <td id="L3464" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3464"></td>
          <td id="LC3464" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3465" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3465"></td>
          <td id="LC3465" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3466" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3466"></td>
          <td id="LC3466" class="blob-code blob-code-inner js-file-line">del and remove() are methods on lists/ ways to eliminate elements.</td>
        </tr>
        <tr>
          <td id="L3467" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3467"></td>
          <td id="LC3467" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3468" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3468"></td>
          <td id="LC3468" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list=[3,4,5,6,7]</td>
        </tr>
        <tr>
          <td id="L3469" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3469"></td>
          <td id="LC3469" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; del list[3]</td>
        </tr>
        <tr>
          <td id="L3470" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3470"></td>
          <td id="LC3470" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list</td>
        </tr>
        <tr>
          <td id="L3471" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3471"></td>
          <td id="LC3471" class="blob-code blob-code-inner js-file-line">[3, 4, 5, 7]</td>
        </tr>
        <tr>
          <td id="L3472" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3472"></td>
          <td id="LC3472" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3473" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3473"></td>
          <td id="LC3473" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list.remove(5)</td>
        </tr>
        <tr>
          <td id="L3474" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3474"></td>
          <td id="LC3474" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list</td>
        </tr>
        <tr>
          <td id="L3475" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3475"></td>
          <td id="LC3475" class="blob-code blob-code-inner js-file-line">[3, 4, 7]</td>
        </tr>
        <tr>
          <td id="L3476" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3476"></td>
          <td id="LC3476" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3477" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3477"></td>
          <td id="LC3477" class="blob-code blob-code-inner js-file-line">While del lets us delete an element at a certain index, remove() lets us remove an element by its value.</td>
        </tr>
        <tr>
          <td id="L3478" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3478"></td>
          <td id="LC3478" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3479" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3479"></td>
          <td id="LC3479" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3480" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3480"></td>
          <td id="LC3480" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3481" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3481"></td>
          <td id="LC3481" class="blob-code blob-code-inner js-file-line">302. Explain a few methods to implement Functionally Oriented Programming in Python?</td>
        </tr>
        <tr>
          <td id="L3482" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3482"></td>
          <td id="LC3482" class="blob-code blob-code-inner js-file-line">Ans: Sometimes, when we want to iterate over a list, a few methods come in handy.</td>
        </tr>
        <tr>
          <td id="L3483" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3483"></td>
          <td id="LC3483" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3484" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3484"></td>
          <td id="LC3484" class="blob-code blob-code-inner js-file-line">a. filter()</td>
        </tr>
        <tr>
          <td id="L3485" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3485"></td>
          <td id="LC3485" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3486" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3486"></td>
          <td id="LC3486" class="blob-code blob-code-inner js-file-line">Filter lets us filter in some values based on conditional logic.</td>
        </tr>
        <tr>
          <td id="L3487" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3487"></td>
          <td id="LC3487" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3488" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3488"></td>
          <td id="LC3488" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(filter(lambda x:x&gt;5,range(8)))</td>
        </tr>
        <tr>
          <td id="L3489" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3489"></td>
          <td id="LC3489" class="blob-code blob-code-inner js-file-line">[6, 7]</td>
        </tr>
        <tr>
          <td id="L3490" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3490"></td>
          <td id="LC3490" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3491" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3491"></td>
          <td id="LC3491" class="blob-code blob-code-inner js-file-line">b. map()</td>
        </tr>
        <tr>
          <td id="L3492" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3492"></td>
          <td id="LC3492" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3493" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3493"></td>
          <td id="LC3493" class="blob-code blob-code-inner js-file-line">Map applies a function to every element in an iterable.</td>
        </tr>
        <tr>
          <td id="L3494" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3494"></td>
          <td id="LC3494" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3495" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3495"></td>
          <td id="LC3495" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list(map(lambda x:x**2,range(8)))</td>
        </tr>
        <tr>
          <td id="L3496" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3496"></td>
          <td id="LC3496" class="blob-code blob-code-inner js-file-line">[0, 1, 4, 9, 16, 25, 36, 49]</td>
        </tr>
        <tr>
          <td id="L3497" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3497"></td>
          <td id="LC3497" class="blob-code blob-code-inner js-file-line">c. reduce()</td>
        </tr>
        <tr>
          <td id="L3498" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3498"></td>
          <td id="LC3498" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3499" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3499"></td>
          <td id="LC3499" class="blob-code blob-code-inner js-file-line">Reduce repeatedly reduces a sequence pair-wise until we reach a single value.</td>
        </tr>
        <tr>
          <td id="L3500" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3500"></td>
          <td id="LC3500" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3501" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3501"></td>
          <td id="LC3501" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; from functools import reduce</td>
        </tr>
        <tr>
          <td id="L3502" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3502"></td>
          <td id="LC3502" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; reduce(lambda x,y:x-y,[1,2,3,4,5])</td>
        </tr>
        <tr>
          <td id="L3503" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3503"></td>
          <td id="LC3503" class="blob-code blob-code-inner js-file-line">-13</td>
        </tr>
        <tr>
          <td id="L3504" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3504"></td>
          <td id="LC3504" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3505" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3505"></td>
          <td id="LC3505" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3506" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3506"></td>
          <td id="LC3506" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3507" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3507"></td>
          <td id="LC3507" class="blob-code blob-code-inner js-file-line">304. How do you open a file for writing?</td>
        </tr>
        <tr>
          <td id="L3508" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3508"></td>
          <td id="LC3508" class="blob-code blob-code-inner js-file-line">Ans: Let’s create a text file on our Desktop and call it tabs.txt. To open it to be able to write to it, use the following line of code-</td>
        </tr>
        <tr>
          <td id="L3509" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3509"></td>
          <td id="LC3509" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3510" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3510"></td>
          <td id="LC3510" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; file=open(‘tabs.txt’,‘w’)</td>
        </tr>
        <tr>
          <td id="L3511" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3511"></td>
          <td id="LC3511" class="blob-code blob-code-inner js-file-line">This opens the file in writing mode. You should close it once you’re done.</td>
        </tr>
        <tr>
          <td id="L3512" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3512"></td>
          <td id="LC3512" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3513" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3513"></td>
          <td id="LC3513" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; file.close()</td>
        </tr>
        <tr>
          <td id="L3514" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3514"></td>
          <td id="LC3514" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3515" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3515"></td>
          <td id="LC3515" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3516" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3516"></td>
          <td id="LC3516" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3517" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3517"></td>
          <td id="LC3517" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3518" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3518"></td>
          <td id="LC3518" class="blob-code blob-code-inner js-file-line">305. Difference between the append() and extend() methods of a list.</td>
        </tr>
        <tr>
          <td id="L3519" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3519"></td>
          <td id="LC3519" class="blob-code blob-code-inner js-file-line">Ans: The methods append() and extend() work on lists. While append() adds an element to the end of the list, extend adds another list to the end of a list.</td>
        </tr>
        <tr>
          <td id="L3520" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3520"></td>
          <td id="LC3520" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3521" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3521"></td>
          <td id="LC3521" class="blob-code blob-code-inner js-file-line">Let’s take two lists.</td>
        </tr>
        <tr>
          <td id="L3522" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3522"></td>
          <td id="LC3522" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3523" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3523"></td>
          <td id="LC3523" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list1,list2=[1,2,3],[5,6,7,8]</td>
        </tr>
        <tr>
          <td id="L3524" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3524"></td>
          <td id="LC3524" class="blob-code blob-code-inner js-file-line">This is how append() works:</td>
        </tr>
        <tr>
          <td id="L3525" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3525"></td>
          <td id="LC3525" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3526" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3526"></td>
          <td id="LC3526" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list1.append(4)</td>
        </tr>
        <tr>
          <td id="L3527" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3527"></td>
          <td id="LC3527" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list1</td>
        </tr>
        <tr>
          <td id="L3528" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3528"></td>
          <td id="LC3528" class="blob-code blob-code-inner js-file-line">[1, 2, 3, 4]</td>
        </tr>
        <tr>
          <td id="L3529" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3529"></td>
          <td id="LC3529" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3530" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3530"></td>
          <td id="LC3530" class="blob-code blob-code-inner js-file-line">And this is how extend() works:</td>
        </tr>
        <tr>
          <td id="L3531" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3531"></td>
          <td id="LC3531" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3532" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3532"></td>
          <td id="LC3532" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list1.extend(list2)</td>
        </tr>
        <tr>
          <td id="L3533" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3533"></td>
          <td id="LC3533" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list1</td>
        </tr>
        <tr>
          <td id="L3534" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3534"></td>
          <td id="LC3534" class="blob-code blob-code-inner js-file-line">[1, 2, 3, 4, 5, 6, 7, 8]</td>
        </tr>
        <tr>
          <td id="L3535" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3535"></td>
          <td id="LC3535" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3536" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3536"></td>
          <td id="LC3536" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3537" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3537"></td>
          <td id="LC3537" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3538" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3538"></td>
          <td id="LC3538" class="blob-code blob-code-inner js-file-line">306. What are the different file-processing modes with Python?</td>
        </tr>
        <tr>
          <td id="L3539" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3539"></td>
          <td id="LC3539" class="blob-code blob-code-inner js-file-line">We have the following modes-</td>
        </tr>
        <tr>
          <td id="L3540" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3540"></td>
          <td id="LC3540" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3541" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3541"></td>
          <td id="LC3541" class="blob-code blob-code-inner js-file-line">read-only – ‘r’</td>
        </tr>
        <tr>
          <td id="L3542" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3542"></td>
          <td id="LC3542" class="blob-code blob-code-inner js-file-line">write-only – ‘w’</td>
        </tr>
        <tr>
          <td id="L3543" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3543"></td>
          <td id="LC3543" class="blob-code blob-code-inner js-file-line">read-write – ‘rw’</td>
        </tr>
        <tr>
          <td id="L3544" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3544"></td>
          <td id="LC3544" class="blob-code blob-code-inner js-file-line">append – ‘a’</td>
        </tr>
        <tr>
          <td id="L3545" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3545"></td>
          <td id="LC3545" class="blob-code blob-code-inner js-file-line">We can open a text file with the option ‘t’. So to open a text file to read it, we can use the mode ‘rt’. Similarly, for binary files, we use ‘b’.</td>
        </tr>
        <tr>
          <td id="L3546" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3546"></td>
          <td id="LC3546" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3547" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3547"></td>
          <td id="LC3547" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3548" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3548"></td>
          <td id="LC3548" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3549" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3549"></td>
          <td id="LC3549" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3550" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3550"></td>
          <td id="LC3550" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3551" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3551"></td>
          <td id="LC3551" class="blob-code blob-code-inner js-file-line">307. What does the map() function do?</td>
        </tr>
        <tr>
          <td id="L3552" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3552"></td>
          <td id="LC3552" class="blob-code blob-code-inner js-file-line">Ans: map() executes the function we pass to it as the first argument; it does so on all elements of the iterable in the second argument. Let’s take an example, shall we?</td>
        </tr>
        <tr>
          <td id="L3553" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3553"></td>
          <td id="LC3553" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3554" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3554"></td>
          <td id="LC3554" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; for i in map(lambda i:i**3, (2,3,7)):</td>
        </tr>
        <tr>
          <td id="L3555" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3555"></td>
          <td id="LC3555" class="blob-code blob-code-inner js-file-line">print(i)</td>
        </tr>
        <tr>
          <td id="L3556" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3556"></td>
          <td id="LC3556" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L3557" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3557"></td>
          <td id="LC3557" class="blob-code blob-code-inner js-file-line">27</td>
        </tr>
        <tr>
          <td id="L3558" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3558"></td>
          <td id="LC3558" class="blob-code blob-code-inner js-file-line">343</td>
        </tr>
        <tr>
          <td id="L3559" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3559"></td>
          <td id="LC3559" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3560" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3560"></td>
          <td id="LC3560" class="blob-code blob-code-inner js-file-line">This gives us the cubes of the values 2, 3, and 7.</td>
        </tr>
        <tr>
          <td id="L3561" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3561"></td>
          <td id="LC3561" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3562" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3562"></td>
          <td id="LC3562" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3563" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3563"></td>
          <td id="LC3563" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3564" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3564"></td>
          <td id="LC3564" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3565" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3565"></td>
          <td id="LC3565" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3566" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3566"></td>
          <td id="LC3566" class="blob-code blob-code-inner js-file-line">308. Is there a way to remove the last object from a list?</td>
        </tr>
        <tr>
          <td id="L3567" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3567"></td>
          <td id="LC3567" class="blob-code blob-code-inner js-file-line">Yes, there is. Try running the following piece of code-</td>
        </tr>
        <tr>
          <td id="L3568" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3568"></td>
          <td id="LC3568" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3569" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3569"></td>
          <td id="LC3569" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list=[1,2,3,4,5</td>
        </tr>
        <tr>
          <td id="L3570" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3570"></td>
          <td id="LC3570" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list.pop(–1)</td>
        </tr>
        <tr>
          <td id="L3571" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3571"></td>
          <td id="LC3571" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L3572" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3572"></td>
          <td id="LC3572" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3573" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3573"></td>
          <td id="LC3573" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; list</td>
        </tr>
        <tr>
          <td id="L3574" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3574"></td>
          <td id="LC3574" class="blob-code blob-code-inner js-file-line">[1, 2, 3, 4]</td>
        </tr>
        <tr>
          <td id="L3575" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3575"></td>
          <td id="LC3575" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3576" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3576"></td>
          <td id="LC3576" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3577" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3577"></td>
          <td id="LC3577" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3578" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3578"></td>
          <td id="LC3578" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3579" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3579"></td>
          <td id="LC3579" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3580" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3580"></td>
          <td id="LC3580" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3581" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3581"></td>
          <td id="LC3581" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3582" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3582"></td>
          <td id="LC3582" class="blob-code blob-code-inner js-file-line">309. How will you convert an integer to a Unicode character?</td>
        </tr>
        <tr>
          <td id="L3583" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3583"></td>
          <td id="LC3583" class="blob-code blob-code-inner js-file-line">Ans: This is simple. All we need is the chr(x) built-in function. See how.</td>
        </tr>
        <tr>
          <td id="L3584" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3584"></td>
          <td id="LC3584" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3585" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3585"></td>
          <td id="LC3585" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; chr(52)</td>
        </tr>
        <tr>
          <td id="L3586" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3586"></td>
          <td id="LC3586" class="blob-code blob-code-inner js-file-line">‘4’</td>
        </tr>
        <tr>
          <td id="L3587" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3587"></td>
          <td id="LC3587" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3588" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3588"></td>
          <td id="LC3588" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; chr(49)</td>
        </tr>
        <tr>
          <td id="L3589" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3589"></td>
          <td id="LC3589" class="blob-code blob-code-inner js-file-line">‘1’</td>
        </tr>
        <tr>
          <td id="L3590" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3590"></td>
          <td id="LC3590" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3591" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3591"></td>
          <td id="LC3591" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; chr(67)</td>
        </tr>
        <tr>
          <td id="L3592" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3592"></td>
          <td id="LC3592" class="blob-code blob-code-inner js-file-line">‘C’</td>
        </tr>
        <tr>
          <td id="L3593" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3593"></td>
          <td id="LC3593" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3594" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3594"></td>
          <td id="LC3594" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3595" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3595"></td>
          <td id="LC3595" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3596" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3596"></td>
          <td id="LC3596" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3597" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3597"></td>
          <td id="LC3597" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3598" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3598"></td>
          <td id="LC3598" class="blob-code blob-code-inner js-file-line">310. So does recursion cause any trouble?</td>
        </tr>
        <tr>
          <td id="L3599" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3599"></td>
          <td id="LC3599" class="blob-code blob-code-inner js-file-line">Ans: Sure does:</td>
        </tr>
        <tr>
          <td id="L3600" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3600"></td>
          <td id="LC3600" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3601" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3601"></td>
          <td id="LC3601" class="blob-code blob-code-inner js-file-line">Needs more function calls.</td>
        </tr>
        <tr>
          <td id="L3602" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3602"></td>
          <td id="LC3602" class="blob-code blob-code-inner js-file-line">Each function call stores a state variable to the program stack- consumes memory, can cause memory overflow.</td>
        </tr>
        <tr>
          <td id="L3603" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3603"></td>
          <td id="LC3603" class="blob-code blob-code-inner js-file-line">Calling a function consumes time.</td>
        </tr>
        <tr>
          <td id="L3604" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3604"></td>
          <td id="LC3604" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3605" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3605"></td>
          <td id="LC3605" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3606" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3606"></td>
          <td id="LC3606" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3607" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3607"></td>
          <td id="LC3607" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3608" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3608"></td>
          <td id="LC3608" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3609" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3609"></td>
          <td id="LC3609" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3610" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3610"></td>
          <td id="LC3610" class="blob-code blob-code-inner js-file-line">311. What good is recursion?</td>
        </tr>
        <tr>
          <td id="L3611" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3611"></td>
          <td id="LC3611" class="blob-code blob-code-inner js-file-line">Ans: With recursion, we observe the following:</td>
        </tr>
        <tr>
          <td id="L3612" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3612"></td>
          <td id="LC3612" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3613" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3613"></td>
          <td id="LC3613" class="blob-code blob-code-inner js-file-line">Need to put in less efforts.</td>
        </tr>
        <tr>
          <td id="L3614" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3614"></td>
          <td id="LC3614" class="blob-code blob-code-inner js-file-line">Smaller code than that by loops.</td>
        </tr>
        <tr>
          <td id="L3615" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3615"></td>
          <td id="LC3615" class="blob-code blob-code-inner js-file-line">Easier-to-understand code.</td>
        </tr>
        <tr>
          <td id="L3616" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3616"></td>
          <td id="LC3616" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3617" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3617"></td>
          <td id="LC3617" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3618" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3618"></td>
          <td id="LC3618" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3619" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3619"></td>
          <td id="LC3619" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3620" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3620"></td>
          <td id="LC3620" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3621" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3621"></td>
          <td id="LC3621" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3622" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3622"></td>
          <td id="LC3622" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3623" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3623"></td>
          <td id="LC3623" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3624" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3624"></td>
          <td id="LC3624" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3625" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3625"></td>
          <td id="LC3625" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3626" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3626"></td>
          <td id="LC3626" class="blob-code blob-code-inner js-file-line">312. Can you remove the whitespaces from the string “aaa bbb ccc ddd eee”?</td>
        </tr>
        <tr>
          <td id="L3627" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3627"></td>
          <td id="LC3627" class="blob-code blob-code-inner js-file-line">Ans: I can think of three ways to do this.</td>
        </tr>
        <tr>
          <td id="L3628" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3628"></td>
          <td id="LC3628" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3629" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3629"></td>
          <td id="LC3629" class="blob-code blob-code-inner js-file-line">Using join-</td>
        </tr>
        <tr>
          <td id="L3630" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3630"></td>
          <td id="LC3630" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3631" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3631"></td>
          <td id="LC3631" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s=‘aaa bbb ccc ddd eee’</td>
        </tr>
        <tr>
          <td id="L3632" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3632"></td>
          <td id="LC3632" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1=”.join(s.split())</td>
        </tr>
        <tr>
          <td id="L3633" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3633"></td>
          <td id="LC3633" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1</td>
        </tr>
        <tr>
          <td id="L3634" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3634"></td>
          <td id="LC3634" class="blob-code blob-code-inner js-file-line">‘aaabbbcccdddeee’</td>
        </tr>
        <tr>
          <td id="L3635" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3635"></td>
          <td id="LC3635" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3636" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3636"></td>
          <td id="LC3636" class="blob-code blob-code-inner js-file-line">Using a list comprehension–</td>
        </tr>
        <tr>
          <td id="L3637" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3637"></td>
          <td id="LC3637" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3638" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3638"></td>
          <td id="LC3638" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s=‘aaa bbb ccc ddd eee’</td>
        </tr>
        <tr>
          <td id="L3639" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3639"></td>
          <td id="LC3639" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1=str(”.join(([i for i in s if i!=‘ ‘])))</td>
        </tr>
        <tr>
          <td id="L3640" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3640"></td>
          <td id="LC3640" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1</td>
        </tr>
        <tr>
          <td id="L3641" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3641"></td>
          <td id="LC3641" class="blob-code blob-code-inner js-file-line">‘aaabbbcccdddeee’</td>
        </tr>
        <tr>
          <td id="L3642" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3642"></td>
          <td id="LC3642" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3643" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3643"></td>
          <td id="LC3643" class="blob-code blob-code-inner js-file-line">Using replace()-</td>
        </tr>
        <tr>
          <td id="L3644" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3644"></td>
          <td id="LC3644" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3645" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3645"></td>
          <td id="LC3645" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s=‘aaa bbb ccc ddd eee’</td>
        </tr>
        <tr>
          <td id="L3646" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3646"></td>
          <td id="LC3646" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1 = s.replace(‘ ‘,”)</td>
        </tr>
        <tr>
          <td id="L3647" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3647"></td>
          <td id="LC3647" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; s1</td>
        </tr>
        <tr>
          <td id="L3648" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3648"></td>
          <td id="LC3648" class="blob-code blob-code-inner js-file-line">‘aaabbbcccdddeee’</td>
        </tr>
        <tr>
          <td id="L3649" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3649"></td>
          <td id="LC3649" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3650" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3650"></td>
          <td id="LC3650" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3651" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3651"></td>
          <td id="LC3651" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3652" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3652"></td>
          <td id="LC3652" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3653" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3653"></td>
          <td id="LC3653" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3654" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3654"></td>
          <td id="LC3654" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3655" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3655"></td>
          <td id="LC3655" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3656" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3656"></td>
          <td id="LC3656" class="blob-code blob-code-inner js-file-line">313. How do you get the current working directory using Python?</td>
        </tr>
        <tr>
          <td id="L3657" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3657"></td>
          <td id="LC3657" class="blob-code blob-code-inner js-file-line">Ans: Working on software with Python, you may need to read and write files from various directories. To find out which directory we’re presently working under, we can borrow the getcwd() method from the os module.</td>
        </tr>
        <tr>
          <td id="L3658" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3658"></td>
          <td id="LC3658" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3659" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3659"></td>
          <td id="LC3659" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; import os</td>
        </tr>
        <tr>
          <td id="L3660" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3660"></td>
          <td id="LC3660" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; os.getcwd()</td>
        </tr>
        <tr>
          <td id="L3661" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3661"></td>
          <td id="LC3661" class="blob-code blob-code-inner js-file-line">‘C:\\Users\\Raj\\AppData\\Local\\Programs\\Python\\Python37-32’</td>
        </tr>
        <tr>
          <td id="L3662" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3662"></td>
          <td id="LC3662" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3663" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3663"></td>
          <td id="LC3663" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3664" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3664"></td>
          <td id="LC3664" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3665" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3665"></td>
          <td id="LC3665" class="blob-code blob-code-inner js-file-line">314. What are the file-related modules we have in Python?</td>
        </tr>
        <tr>
          <td id="L3666" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3666"></td>
          <td id="LC3666" class="blob-code blob-code-inner js-file-line">Ans: We have the following libraries and modules that let us manipulate text and binary files on our file systems-</td>
        </tr>
        <tr>
          <td id="L3667" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3667"></td>
          <td id="LC3667" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3668" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3668"></td>
          <td id="LC3668" class="blob-code blob-code-inner js-file-line">os</td>
        </tr>
        <tr>
          <td id="L3669" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3669"></td>
          <td id="LC3669" class="blob-code blob-code-inner js-file-line">os.path</td>
        </tr>
        <tr>
          <td id="L3670" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3670"></td>
          <td id="LC3670" class="blob-code blob-code-inner js-file-line">shutil</td>
        </tr>
        <tr>
          <td id="L3671" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3671"></td>
          <td id="LC3671" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3672" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3672"></td>
          <td id="LC3672" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3673" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3673"></td>
          <td id="LC3673" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3674" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3674"></td>
          <td id="LC3674" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3675" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3675"></td>
          <td id="LC3675" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3676" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3676"></td>
          <td id="LC3676" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3677" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3677"></td>
          <td id="LC3677" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3678" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3678"></td>
          <td id="LC3678" class="blob-code blob-code-inner js-file-line">315. Explain the uses of the modules sqlite3, ctypes, pickle, traceback, and itertools.</td>
        </tr>
        <tr>
          <td id="L3679" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3679"></td>
          <td id="LC3679" class="blob-code blob-code-inner js-file-line">sqlite3- Helps with handling databases of type SQLite</td>
        </tr>
        <tr>
          <td id="L3680" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3680"></td>
          <td id="LC3680" class="blob-code blob-code-inner js-file-line">ctypes- Lets create and manipulate C data types in Python</td>
        </tr>
        <tr>
          <td id="L3681" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3681"></td>
          <td id="LC3681" class="blob-code blob-code-inner js-file-line">pickle- Lets put any data structure to external files</td>
        </tr>
        <tr>
          <td id="L3682" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3682"></td>
          <td id="LC3682" class="blob-code blob-code-inner js-file-line">traceback- Allows extraction, formatting, and printing of stack traces</td>
        </tr>
        <tr>
          <td id="L3683" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3683"></td>
          <td id="LC3683" class="blob-code blob-code-inner js-file-line">itertools– Supports working with permutations, combinations, and other useful iterables.</td>
        </tr>
        <tr>
          <td id="L3684" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3684"></td>
          <td id="LC3684" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3685" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3685"></td>
          <td id="LC3685" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3686" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3686"></td>
          <td id="LC3686" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3687" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3687"></td>
          <td id="LC3687" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3688" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3688"></td>
          <td id="LC3688" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3689" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3689"></td>
          <td id="LC3689" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3690" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3690"></td>
          <td id="LC3690" class="blob-code blob-code-inner js-file-line">316. How will you print the contents of a file?</td>
        </tr>
        <tr>
          <td id="L3691" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3691"></td>
          <td id="LC3691" class="blob-code blob-code-inner js-file-line">&gt;&gt;&gt; try:</td>
        </tr>
        <tr>
          <td id="L3692" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3692"></td>
          <td id="LC3692" class="blob-code blob-code-inner js-file-line">with open(‘tabs.txt’,‘r’) as f:</td>
        </tr>
        <tr>
          <td id="L3693" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3693"></td>
          <td id="LC3693" class="blob-code blob-code-inner js-file-line">print(f.read())</td>
        </tr>
        <tr>
          <td id="L3694" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3694"></td>
          <td id="LC3694" class="blob-code blob-code-inner js-file-line">except IOError:</td>
        </tr>
        <tr>
          <td id="L3695" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3695"></td>
          <td id="LC3695" class="blob-code blob-code-inner js-file-line">print(“File not found”)</td>
        </tr>
        <tr>
          <td id="L3696" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3696"></td>
          <td id="LC3696" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3697" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3697"></td>
          <td id="LC3697" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3698" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3698"></td>
          <td id="LC3698" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3699" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3699"></td>
          <td id="LC3699" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3700" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3700"></td>
          <td id="LC3700" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3701" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3701"></td>
          <td id="LC3701" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3702" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3702"></td>
          <td id="LC3702" class="blob-code blob-code-inner js-file-line">317. What is Virtualenv in Python?</td>
        </tr>
        <tr>
          <td id="L3703" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3703"></td>
          <td id="LC3703" class="blob-code blob-code-inner js-file-line">Ans: virtualenv is a tool to create isolated Python environments. virtualenv creates a folder which contains all the necessary executables to use the packages that a Python project would need. It can be used standalone, in place of Pipenv.</td>
        </tr>
        <tr>
          <td id="L3704" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3704"></td>
          <td id="LC3704" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3705" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3705"></td>
          <td id="LC3705" class="blob-code blob-code-inner js-file-line">Install virtualenv via pip: $ pip install virtualenv.</td>
        </tr>
        <tr>
          <td id="L3706" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3706"></td>
          <td id="LC3706" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3707" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3707"></td>
          <td id="LC3707" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3708" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3708"></td>
          <td id="LC3708" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3709" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3709"></td>
          <td id="LC3709" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3710" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3710"></td>
          <td id="LC3710" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3711" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3711"></td>
          <td id="LC3711" class="blob-code blob-code-inner js-file-line">318. What is the function of “self”?</td>
        </tr>
        <tr>
          <td id="L3712" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3712"></td>
          <td id="LC3712" class="blob-code blob-code-inner js-file-line">Ans: Self is a variable that represents the instance of the object to itself. In most of the object oriented programming language, this is passed to the methods as a hidden parameters that is defined by an object. But, in python, it is declared and passed explicitly. It is the first argument that gets created in the instance of the class A and the parameters to the methods are passed automatically. It refers to separate instance of the variable for individual objects.</td>
        </tr>
        <tr>
          <td id="L3713" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3713"></td>
          <td id="LC3713" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3714" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3714"></td>
          <td id="LC3714" class="blob-code blob-code-inner js-file-line">Let’s say you have a class ClassA which contains a method methodA defined as:</td>
        </tr>
        <tr>
          <td id="L3715" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3715"></td>
          <td id="LC3715" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3716" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3716"></td>
          <td id="LC3716" class="blob-code blob-code-inner js-file-line">def methodA(self, arg1, arg2): #do something</td>
        </tr>
        <tr>
          <td id="L3717" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3717"></td>
          <td id="LC3717" class="blob-code blob-code-inner js-file-line">and ObjectA is an instance of this class.</td>
        </tr>
        <tr>
          <td id="L3718" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3718"></td>
          <td id="LC3718" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3719" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3719"></td>
          <td id="LC3719" class="blob-code blob-code-inner js-file-line">Now when ObjectA.methodA(arg1, arg2) is called, python internally converts it for you as:</td>
        </tr>
        <tr>
          <td id="L3720" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3720"></td>
          <td id="LC3720" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3721" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3721"></td>
          <td id="LC3721" class="blob-code blob-code-inner js-file-line">ClassA.methodA(ObjectA, arg1, arg2)</td>
        </tr>
        <tr>
          <td id="L3722" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3722"></td>
          <td id="LC3722" class="blob-code blob-code-inner js-file-line">The self variable refers to the object itself.</td>
        </tr>
        <tr>
          <td id="L3723" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3723"></td>
          <td id="LC3723" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3724" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3724"></td>
          <td id="LC3724" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3725" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3725"></td>
          <td id="LC3725" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3726" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3726"></td>
          <td id="LC3726" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3727" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3727"></td>
          <td id="LC3727" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3728" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3728"></td>
          <td id="LC3728" class="blob-code blob-code-inner js-file-line">319. What does the Python nonlocal statement do (in Python 3.0 and later)?</td>
        </tr>
        <tr>
          <td id="L3729" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3729"></td>
          <td id="LC3729" class="blob-code blob-code-inner js-file-line">Ans: In short, it lets you assign values to a variable in an outer (but non-global) scope.</td>
        </tr>
        <tr>
          <td id="L3730" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3730"></td>
          <td id="LC3730" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3731" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3731"></td>
          <td id="LC3731" class="blob-code blob-code-inner js-file-line">The nonlocal statement causes the listed identifiers to refer to previously bound variables in the nearest enclosing scope excluding globals.</td>
        </tr>
        <tr>
          <td id="L3732" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3732"></td>
          <td id="LC3732" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3733" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3733"></td>
          <td id="LC3733" class="blob-code blob-code-inner js-file-line">For example the counter generator can be rewritten to use this so that it looks more like the idioms of languages with closures.</td>
        </tr>
        <tr>
          <td id="L3734" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3734"></td>
          <td id="LC3734" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3735" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3735"></td>
          <td id="LC3735" class="blob-code blob-code-inner js-file-line">def make_counter():</td>
        </tr>
        <tr>
          <td id="L3736" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3736"></td>
          <td id="LC3736" class="blob-code blob-code-inner js-file-line">    count = 0</td>
        </tr>
        <tr>
          <td id="L3737" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3737"></td>
          <td id="LC3737" class="blob-code blob-code-inner js-file-line">    def counter():</td>
        </tr>
        <tr>
          <td id="L3738" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3738"></td>
          <td id="LC3738" class="blob-code blob-code-inner js-file-line">        nonlocal count</td>
        </tr>
        <tr>
          <td id="L3739" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3739"></td>
          <td id="LC3739" class="blob-code blob-code-inner js-file-line">        count += 1</td>
        </tr>
        <tr>
          <td id="L3740" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3740"></td>
          <td id="LC3740" class="blob-code blob-code-inner js-file-line">        return count</td>
        </tr>
        <tr>
          <td id="L3741" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3741"></td>
          <td id="LC3741" class="blob-code blob-code-inner js-file-line">    return counter</td>
        </tr>
        <tr>
          <td id="L3742" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3742"></td>
          <td id="LC3742" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3743" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3743"></td>
          <td id="LC3743" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3744" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3744"></td>
          <td id="LC3744" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3745" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3745"></td>
          <td id="LC3745" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3746" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3746"></td>
          <td id="LC3746" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3747" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3747"></td>
          <td id="LC3747" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3748" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3748"></td>
          <td id="LC3748" class="blob-code blob-code-inner js-file-line">320. What are the wheels and eggs? What is the difference?</td>
        </tr>
        <tr>
          <td id="L3749" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3749"></td>
          <td id="LC3749" class="blob-code blob-code-inner js-file-line">Ans:  </td>
        </tr>
        <tr>
          <td id="L3750" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3750"></td>
          <td id="LC3750" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3751" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3751"></td>
          <td id="LC3751" class="blob-code blob-code-inner js-file-line">Wheel and Egg are both packaging formats that aim to support the use case of needing an install artifact that doesn’t require building or compilation, which can be costly in testing and production workflows.</td>
        </tr>
        <tr>
          <td id="L3752" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3752"></td>
          <td id="LC3752" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3753" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3753"></td>
          <td id="LC3753" class="blob-code blob-code-inner js-file-line">The Egg format was introduced by setuptools in 2004, whereas the Wheel format was introduced by PEP 427 in 2012.</td>
        </tr>
        <tr>
          <td id="L3754" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3754"></td>
          <td id="LC3754" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3755" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3755"></td>
          <td id="LC3755" class="blob-code blob-code-inner js-file-line">Wheel is currently considered the standard for built and binary packaging for Python.</td>
        </tr>
        <tr>
          <td id="L3756" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3756"></td>
          <td id="LC3756" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3757" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3757"></td>
          <td id="LC3757" class="blob-code blob-code-inner js-file-line">Here’s a breakdown of the important differences between Wheel and Egg.</td>
        </tr>
        <tr>
          <td id="L3758" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3758"></td>
          <td id="LC3758" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3759" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3759"></td>
          <td id="LC3759" class="blob-code blob-code-inner js-file-line">Wheel has an official PEP. Egg did not.</td>
        </tr>
        <tr>
          <td id="L3760" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3760"></td>
          <td id="LC3760" class="blob-code blob-code-inner js-file-line">Wheel is a distribution format, i.e a packaging format. 1 Egg was both a distribution format and a runtime installation format (if left zipped), and was designed to be importable.</td>
        </tr>
        <tr>
          <td id="L3761" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3761"></td>
          <td id="LC3761" class="blob-code blob-code-inner js-file-line">Wheel archives do not include .pyc files. Therefore, when the distribution only contains Python files (i.e. no compiled extensions), and is compatible with Python 2 and 3, it’s possible for a wheel to be “universal”, similar to an sdist.</td>
        </tr>
        <tr>
          <td id="L3762" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3762"></td>
          <td id="LC3762" class="blob-code blob-code-inner js-file-line">Wheel uses PEP376-compliant .dist-info directories. Egg used .egg-info.</td>
        </tr>
        <tr>
          <td id="L3763" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3763"></td>
          <td id="LC3763" class="blob-code blob-code-inner js-file-line">Wheel has a richer file naming convention. A single wheel archive can indicate its compatibility with a number of Python language versions and implementations, ABIs, and system architectures.</td>
        </tr>
        <tr>
          <td id="L3764" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3764"></td>
          <td id="LC3764" class="blob-code blob-code-inner js-file-line">Wheel is versioned. Every wheel file contains the version of the wheel specification and the implementation that packaged it.</td>
        </tr>
        <tr>
          <td id="L3765" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3765"></td>
          <td id="LC3765" class="blob-code blob-code-inner js-file-line">Wheel is internally organized by sysconfig path type, therefore making it easier to convert to other formats.</td>
        </tr>
        <tr>
          <td id="L3766" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3766"></td>
          <td id="LC3766" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3767" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3767"></td>
          <td id="LC3767" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3768" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3768"></td>
          <td id="LC3768" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3769" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3769"></td>
          <td id="LC3769" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3770" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3770"></td>
          <td id="LC3770" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3771" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3771"></td>
          <td id="LC3771" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3772" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3772"></td>
          <td id="LC3772" class="blob-code blob-code-inner js-file-line">321. What is webpack?</td>
        </tr>
        <tr>
          <td id="L3773" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3773"></td>
          <td id="LC3773" class="blob-code blob-code-inner js-file-line">Ans: Webpack is a build tool that puts all of your assets, including Javascript, images, fonts, and CSS, in a dependency graph. Webpack lets you use require() in your source code to point to local files, like images, and decide how they’re processed in your final Javascript bundle, like replacing the path with a URL pointing to a CDN.</td>
        </tr>
        <tr>
          <td id="L3774" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3774"></td>
          <td id="LC3774" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3775" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3775"></td>
          <td id="LC3775" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3776" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3776"></td>
          <td id="LC3776" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3777" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3777"></td>
          <td id="LC3777" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3778" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3778"></td>
          <td id="LC3778" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3779" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3779"></td>
          <td id="LC3779" class="blob-code blob-code-inner js-file-line">322. Name some benefits of using webpack</td>
        </tr>
        <tr>
          <td id="L3780" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3780"></td>
          <td id="LC3780" class="blob-code blob-code-inner js-file-line">Ans: Webpack and static assets in a dependency graph offers many benefits. Here’s a few:</td>
        </tr>
        <tr>
          <td id="L3781" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3781"></td>
          <td id="LC3781" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3782" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3782"></td>
          <td id="LC3782" class="blob-code blob-code-inner js-file-line">Dead asset elimination. This is killer, especially for CSS rules. You only build the images and CSS into your dist/ folder that your application actually needs.</td>
        </tr>
        <tr>
          <td id="L3783" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3783"></td>
          <td id="LC3783" class="blob-code blob-code-inner js-file-line">Easier code splitting. For example, because you know that your file Homepage.js only requires specific CSS files, Webpack could easily build a homepage.css file to greatly reduce initial file size.</td>
        </tr>
        <tr>
          <td id="L3784" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3784"></td>
          <td id="LC3784" class="blob-code blob-code-inner js-file-line">You control how assets are processed. If an image is below a certain size, you could base64 encode it directly into your Javascript for fewer HTTP requests. If a JSON file is too big, you can load it from a URL. You can require(&#39;./style.less&#39;) and it’s automaticaly parsed by Less into vanilla CSS.</td>
        </tr>
        <tr>
          <td id="L3785" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3785"></td>
          <td id="LC3785" class="blob-code blob-code-inner js-file-line">Stable production deploys. You can’t accidentally deploy code with images missing, or outdated styles.</td>
        </tr>
        <tr>
          <td id="L3786" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3786"></td>
          <td id="LC3786" class="blob-code blob-code-inner js-file-line">Webpack will slow you down at the start, but give you great speed benefits when used correctly. You get hot page reloading. True CSS management. CDN cache busting because Webpack automatically changes file names to hashes of the file contents, etc.</td>
        </tr>
        <tr>
          <td id="L3787" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3787"></td>
          <td id="LC3787" class="blob-code blob-code-inner js-file-line">Webpack is the main build tool adopted by the React community.</td>
        </tr>
        <tr>
          <td id="L3788" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3788"></td>
          <td id="LC3788" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3789" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3789"></td>
          <td id="LC3789" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3790" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3790"></td>
          <td id="LC3790" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3791" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3791"></td>
          <td id="LC3791" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3792" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3792"></td>
          <td id="LC3792" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3793" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3793"></td>
          <td id="LC3793" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3794" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3794"></td>
          <td id="LC3794" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3795" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3795"></td>
          <td id="LC3795" class="blob-code blob-code-inner js-file-line">323. Name some plugins you think are very important and helpful?</td>
        </tr>
        <tr>
          <td id="L3796" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3796"></td>
          <td id="LC3796" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L3797" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3797"></td>
          <td id="LC3797" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3798" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3798"></td>
          <td id="LC3798" class="blob-code blob-code-inner js-file-line">CommonsChunkPlugin – creates a separate file (known as a chunk), consisting of common modules shared between multiple entry points.</td>
        </tr>
        <tr>
          <td id="L3799" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3799"></td>
          <td id="LC3799" class="blob-code blob-code-inner js-file-line">DefinePlugin – allows you to create global constants which can be configured at compile time.</td>
        </tr>
        <tr>
          <td id="L3800" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3800"></td>
          <td id="LC3800" class="blob-code blob-code-inner js-file-line">HtmlWebpackPlugin – simplifies creation of HTML files to serve your webpack bundles.</td>
        </tr>
        <tr>
          <td id="L3801" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3801"></td>
          <td id="LC3801" class="blob-code blob-code-inner js-file-line">ExtractTextWebpackPlugin – Extract text from a bundle, or bundles, into a separate file.</td>
        </tr>
        <tr>
          <td id="L3802" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3802"></td>
          <td id="LC3802" class="blob-code blob-code-inner js-file-line">CompressionWebpackPlugin – Prepare compressed versions of assets to serve them with Content-Encoding.</td>
        </tr>
        <tr>
          <td id="L3803" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3803"></td>
          <td id="LC3803" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3804" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3804"></td>
          <td id="LC3804" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3805" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3805"></td>
          <td id="LC3805" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3806" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3806"></td>
          <td id="LC3806" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3807" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3807"></td>
          <td id="LC3807" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3808" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3808"></td>
          <td id="LC3808" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3809" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3809"></td>
          <td id="LC3809" class="blob-code blob-code-inner js-file-line">324. Webpack gives us a dependency graph. What does that mean?</td>
        </tr>
        <tr>
          <td id="L3810" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3810"></td>
          <td id="LC3810" class="blob-code blob-code-inner js-file-line">Ans:  Any time one file depends on another, webpack treats this as a dependency. This allows webpack to take non-code assets, such as images or web fonts, and also provide them as dependencies for your application.</td>
        </tr>
        <tr>
          <td id="L3811" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3811"></td>
          <td id="LC3811" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3812" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3812"></td>
          <td id="LC3812" class="blob-code blob-code-inner js-file-line">Webpack lets you use require() on local “static assets”:</td>
        </tr>
        <tr>
          <td id="L3813" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3813"></td>
          <td id="LC3813" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3814" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3814"></td>
          <td id="LC3814" class="blob-code blob-code-inner js-file-line">&lt;img src={ require(&#39;../../assets/logo.png&#39;) } /&gt;  </td>
        </tr>
        <tr>
          <td id="L3815" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3815"></td>
          <td id="LC3815" class="blob-code blob-code-inner js-file-line">When webpack processes your application, it starts from a list of modules defined on the command line or in its config file. Starting from these entry points, webpack recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into a small number of bundles – often, just one – to be loaded by the browser.</td>
        </tr>
        <tr>
          <td id="L3816" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3816"></td>
          <td id="LC3816" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3817" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3817"></td>
          <td id="LC3817" class="blob-code blob-code-inner js-file-line">The require(&#39;logo.png&#39;) source code never actually gets executed in the browser (nor in Node.js). Webpack builds a new Javascript file, replacing require() calls with valid Javascript code, such as URLs. The bundled file is what’s executed by Node or the browser.</td>
        </tr>
        <tr>
          <td id="L3818" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3818"></td>
          <td id="LC3818" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3819" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3819"></td>
          <td id="LC3819" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3820" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3820"></td>
          <td id="LC3820" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3821" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3821"></td>
          <td id="LC3821" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3822" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3822"></td>
          <td id="LC3822" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3823" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3823"></td>
          <td id="LC3823" class="blob-code blob-code-inner js-file-line">325. What are metaclasses in Python?</td>
        </tr>
        <tr>
          <td id="L3824" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3824"></td>
          <td id="LC3824" class="blob-code blob-code-inner js-file-line">Ans: A metaclass is the class of a class. A class defines how an instance of the class (i.e. an object) behaves while a metaclass defines how a class behaves. A class is an instance of a metaclass. You can call it a ‘class factory’.</td>
        </tr>
        <tr>
          <td id="L3825" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3825"></td>
          <td id="LC3825" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3826" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3826"></td>
          <td id="LC3826" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3827" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3827"></td>
          <td id="LC3827" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3828" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3828"></td>
          <td id="LC3828" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3829" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3829"></td>
          <td id="LC3829" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3830" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3830"></td>
          <td id="LC3830" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3831" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3831"></td>
          <td id="LC3831" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3832" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3832"></td>
          <td id="LC3832" class="blob-code blob-code-inner js-file-line">326. How to make a chain of function decorators?</td>
        </tr>
        <tr>
          <td id="L3833" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3833"></td>
          <td id="LC3833" class="blob-code blob-code-inner js-file-line">Ans:  How can I make two decorators in Python that would do the following?</td>
        </tr>
        <tr>
          <td id="L3834" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3834"></td>
          <td id="LC3834" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3835" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3835"></td>
          <td id="LC3835" class="blob-code blob-code-inner js-file-line">@makebold</td>
        </tr>
        <tr>
          <td id="L3836" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3836"></td>
          <td id="LC3836" class="blob-code blob-code-inner js-file-line">@makeitalic</td>
        </tr>
        <tr>
          <td id="L3837" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3837"></td>
          <td id="LC3837" class="blob-code blob-code-inner js-file-line">def say():</td>
        </tr>
        <tr>
          <td id="L3838" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3838"></td>
          <td id="LC3838" class="blob-code blob-code-inner js-file-line">   return &quot;Hello&quot;</td>
        </tr>
        <tr>
          <td id="L3839" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3839"></td>
          <td id="LC3839" class="blob-code blob-code-inner js-file-line">which should return:</td>
        </tr>
        <tr>
          <td id="L3840" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3840"></td>
          <td id="LC3840" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3841" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3841"></td>
          <td id="LC3841" class="blob-code blob-code-inner js-file-line">&quot;&lt;b&gt;&lt;i&gt;Hello&lt;/i&gt;&lt;/b&gt;&quot;</td>
        </tr>
        <tr>
          <td id="L3842" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3842"></td>
          <td id="LC3842" class="blob-code blob-code-inner js-file-line">Answer:</td>
        </tr>
        <tr>
          <td id="L3843" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3843"></td>
          <td id="LC3843" class="blob-code blob-code-inner js-file-line">Consider:</td>
        </tr>
        <tr>
          <td id="L3844" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3844"></td>
          <td id="LC3844" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3845" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3845"></td>
          <td id="LC3845" class="blob-code blob-code-inner js-file-line">from functools import wraps</td>
        </tr>
        <tr>
          <td id="L3846" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3846"></td>
          <td id="LC3846" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3847" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3847"></td>
          <td id="LC3847" class="blob-code blob-code-inner js-file-line">def makebold(fn):</td>
        </tr>
        <tr>
          <td id="L3848" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3848"></td>
          <td id="LC3848" class="blob-code blob-code-inner js-file-line">    @wraps(fn)</td>
        </tr>
        <tr>
          <td id="L3849" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3849"></td>
          <td id="LC3849" class="blob-code blob-code-inner js-file-line">    def wrapped(*args, **kwargs):</td>
        </tr>
        <tr>
          <td id="L3850" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3850"></td>
          <td id="LC3850" class="blob-code blob-code-inner js-file-line">        return &quot;&lt;b&gt;&quot; + fn(*args, **kwargs) + &quot;&lt;/b&gt;&quot;</td>
        </tr>
        <tr>
          <td id="L3851" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3851"></td>
          <td id="LC3851" class="blob-code blob-code-inner js-file-line">    return wrapped</td>
        </tr>
        <tr>
          <td id="L3852" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3852"></td>
          <td id="LC3852" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3853" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3853"></td>
          <td id="LC3853" class="blob-code blob-code-inner js-file-line">def makeitalic(fn):</td>
        </tr>
        <tr>
          <td id="L3854" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3854"></td>
          <td id="LC3854" class="blob-code blob-code-inner js-file-line">    @wraps(fn)</td>
        </tr>
        <tr>
          <td id="L3855" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3855"></td>
          <td id="LC3855" class="blob-code blob-code-inner js-file-line">    def wrapped(*args, **kwargs):</td>
        </tr>
        <tr>
          <td id="L3856" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3856"></td>
          <td id="LC3856" class="blob-code blob-code-inner js-file-line">        return &quot;&lt;i&gt;&quot; + fn(*args, **kwargs) + &quot;&lt;/i&gt;&quot;</td>
        </tr>
        <tr>
          <td id="L3857" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3857"></td>
          <td id="LC3857" class="blob-code blob-code-inner js-file-line">    return wrapped</td>
        </tr>
        <tr>
          <td id="L3858" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3858"></td>
          <td id="LC3858" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3859" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3859"></td>
          <td id="LC3859" class="blob-code blob-code-inner js-file-line">@makebold</td>
        </tr>
        <tr>
          <td id="L3860" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3860"></td>
          <td id="LC3860" class="blob-code blob-code-inner js-file-line">@makeitalic</td>
        </tr>
        <tr>
          <td id="L3861" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3861"></td>
          <td id="LC3861" class="blob-code blob-code-inner js-file-line">def hello():</td>
        </tr>
        <tr>
          <td id="L3862" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3862"></td>
          <td id="LC3862" class="blob-code blob-code-inner js-file-line">    return &quot;hello world&quot;</td>
        </tr>
        <tr>
          <td id="L3863" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3863"></td>
          <td id="LC3863" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3864" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3864"></td>
          <td id="LC3864" class="blob-code blob-code-inner js-file-line">@makebold</td>
        </tr>
        <tr>
          <td id="L3865" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3865"></td>
          <td id="LC3865" class="blob-code blob-code-inner js-file-line">@makeitalic</td>
        </tr>
        <tr>
          <td id="L3866" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3866"></td>
          <td id="LC3866" class="blob-code blob-code-inner js-file-line">def log(s):</td>
        </tr>
        <tr>
          <td id="L3867" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3867"></td>
          <td id="LC3867" class="blob-code blob-code-inner js-file-line">    return s</td>
        </tr>
        <tr>
          <td id="L3868" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3868"></td>
          <td id="LC3868" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3869" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3869"></td>
          <td id="LC3869" class="blob-code blob-code-inner js-file-line">print hello()        # returns &quot;&lt;b&gt;&lt;i&gt;hello world&lt;/i&gt;&lt;/b&gt;&quot;</td>
        </tr>
        <tr>
          <td id="L3870" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3870"></td>
          <td id="LC3870" class="blob-code blob-code-inner js-file-line">print hello.__name__ # with functools.wraps() this returns &quot;hello&quot;</td>
        </tr>
        <tr>
          <td id="L3871" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3871"></td>
          <td id="LC3871" class="blob-code blob-code-inner js-file-line">print log(&#39;hello&#39;)   # returns &quot;&lt;b&gt;&lt;i&gt;hello&lt;/i&gt;&lt;/b&gt;&quot;</td>
        </tr>
        <tr>
          <td id="L3872" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3872"></td>
          <td id="LC3872" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3873" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3873"></td>
          <td id="LC3873" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3874" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3874"></td>
          <td id="LC3874" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3875" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3875"></td>
          <td id="LC3875" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3876" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3876"></td>
          <td id="LC3876" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3877" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3877"></td>
          <td id="LC3877" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3878" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3878"></td>
          <td id="LC3878" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3879" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3879"></td>
          <td id="LC3879" class="blob-code blob-code-inner js-file-line">327. What is the difference between @staticmethod and @classmethod?</td>
        </tr>
        <tr>
          <td id="L3880" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3880"></td>
          <td id="LC3880" class="blob-code blob-code-inner js-file-line">Ans: A staticmethod is a method that knows nothing about the class or instance it was called on. It just gets the arguments that were passed, no implicit first argument. It’s definition is immutable via inheritance.</td>
        </tr>
        <tr>
          <td id="L3881" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3881"></td>
          <td id="LC3881" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3882" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3882"></td>
          <td id="LC3882" class="blob-code blob-code-inner js-file-line">class C:</td>
        </tr>
        <tr>
          <td id="L3883" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3883"></td>
          <td id="LC3883" class="blob-code blob-code-inner js-file-line">    @staticmethod</td>
        </tr>
        <tr>
          <td id="L3884" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3884"></td>
          <td id="LC3884" class="blob-code blob-code-inner js-file-line">    def f(arg1, arg2, ...): ... </td>
        </tr>
        <tr>
          <td id="L3885" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3885"></td>
          <td id="LC3885" class="blob-code blob-code-inner js-file-line">A classmethod, on the other hand, is a method that gets passed the class it was called on, or the class of the instance it was called on, as first argument. Its definition follows Sub class, not Parent class, via inheritance.</td>
        </tr>
        <tr>
          <td id="L3886" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3886"></td>
          <td id="LC3886" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3887" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3887"></td>
          <td id="LC3887" class="blob-code blob-code-inner js-file-line">class C:</td>
        </tr>
        <tr>
          <td id="L3888" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3888"></td>
          <td id="LC3888" class="blob-code blob-code-inner js-file-line">   @classmethod</td>
        </tr>
        <tr>
          <td id="L3889" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3889"></td>
          <td id="LC3889" class="blob-code blob-code-inner js-file-line">   def f(cls, arg1, arg2, ...): ...  </td>
        </tr>
        <tr>
          <td id="L3890" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3890"></td>
          <td id="LC3890" class="blob-code blob-code-inner js-file-line">If your method accesses other variables/methods in your class then use @classmethod.</td>
        </tr>
        <tr>
          <td id="L3891" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3891"></td>
          <td id="LC3891" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3892" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3892"></td>
          <td id="LC3892" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3893" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3893"></td>
          <td id="LC3893" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3894" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3894"></td>
          <td id="LC3894" class="blob-code blob-code-inner js-file-line">328. What’s the difference between a Python module and a Python package?</td>
        </tr>
        <tr>
          <td id="L3895" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3895"></td>
          <td id="LC3895" class="blob-code blob-code-inner js-file-line">Ans: Any Python file is a module, its name being the file’s base name without the .py extension.</td>
        </tr>
        <tr>
          <td id="L3896" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3896"></td>
          <td id="LC3896" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3897" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3897"></td>
          <td id="LC3897" class="blob-code blob-code-inner js-file-line">import my_module</td>
        </tr>
        <tr>
          <td id="L3898" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3898"></td>
          <td id="LC3898" class="blob-code blob-code-inner js-file-line">A package is a collection of Python modules: while a module is a single Python file, a package is a directory of Python modules containing an additional init.py file, to distinguish a package from a directory that just happens to contain a bunch of Python scripts. Packages can be nested to any depth, provided that the corresponding directories contain their own init.py file.</td>
        </tr>
        <tr>
          <td id="L3899" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3899"></td>
          <td id="LC3899" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3900" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3900"></td>
          <td id="LC3900" class="blob-code blob-code-inner js-file-line">Packages are modules too. They are just packaged up differently; they are formed by the combination of a directory plus init.py file. They are modules that can contain other modules.</td>
        </tr>
        <tr>
          <td id="L3901" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3901"></td>
          <td id="LC3901" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3902" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3902"></td>
          <td id="LC3902" class="blob-code blob-code-inner js-file-line">from my_package.timing.danger.internets import function_of_love</td>
        </tr>
        <tr>
          <td id="L3903" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3903"></td>
          <td id="LC3903" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3904" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3904"></td>
          <td id="LC3904" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3905" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3905"></td>
          <td id="LC3905" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3906" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3906"></td>
          <td id="LC3906" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3907" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3907"></td>
          <td id="LC3907" class="blob-code blob-code-inner js-file-line">329. What is GIL?</td>
        </tr>
        <tr>
          <td id="L3908" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3908"></td>
          <td id="LC3908" class="blob-code blob-code-inner js-file-line">Ans: Python has a construct called the Global Interpreter Lock (GIL). The GIL makes sure that only one of your ‘threads’ can execute at any one time. A thread acquires the GIL, does a little work, then passes the GIL onto the next thread. This happens very quickly so to the human eye it may seem like your threads are executing in parallel, but they are really just taking turns using the same CPU core. All this GIL passing adds overhead to execution.</td>
        </tr>
        <tr>
          <td id="L3909" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3909"></td>
          <td id="LC3909" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3910" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3910"></td>
          <td id="LC3910" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3911" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3911"></td>
          <td id="LC3911" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3912" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3912"></td>
          <td id="LC3912" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3913" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3913"></td>
          <td id="LC3913" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3914" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3914"></td>
          <td id="LC3914" class="blob-code blob-code-inner js-file-line">330. Is it a good idea to use multi-thread to speed your Python code?</td>
        </tr>
        <tr>
          <td id="L3915" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3915"></td>
          <td id="LC3915" class="blob-code blob-code-inner js-file-line">Ans:  Python doesn’t allow multi-threading in the truest sense of the word. It has a multi-threading package but if you want to multi-thread to speed your code up, then it’s usually not a good idea to use it.</td>
        </tr>
        <tr>
          <td id="L3916" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3916"></td>
          <td id="LC3916" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3917" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3917"></td>
          <td id="LC3917" class="blob-code blob-code-inner js-file-line">Python has a construct called the Global Interpreter Lock (GIL). The GIL makes sure that only one of your ‘threads’ can execute at any one time. A thread acquires the GIL, does a little work, then passes the GIL onto the next thread. This happens very quickly so to the human eye it may seem like your threads are executing in parallel, but they are really just taking turns using the same CPU core. All this GIL passing adds overhead to execution.</td>
        </tr>
        <tr>
          <td id="L3918" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3918"></td>
          <td id="LC3918" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3919" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3919"></td>
          <td id="LC3919" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3920" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3920"></td>
          <td id="LC3920" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3921" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3921"></td>
          <td id="LC3921" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3922" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3922"></td>
          <td id="LC3922" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3923" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3923"></td>
          <td id="LC3923" class="blob-code blob-code-inner js-file-line">331. How do I write a function with output parameters (call by reference)?</td>
        </tr>
        <tr>
          <td id="L3924" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3924"></td>
          <td id="LC3924" class="blob-code blob-code-inner js-file-line">Ans: In Python arguments are passed by assignment. When you call a function with a parameter, a new reference is created that refers to the object passed in. This is separate from the reference that was used in the function call, so there’s no way to update that reference and make it refer to a new object.</td>
        </tr>
        <tr>
          <td id="L3925" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3925"></td>
          <td id="LC3925" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3926" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3926"></td>
          <td id="LC3926" class="blob-code blob-code-inner js-file-line">If you pass a mutable object into a method, the method gets a reference to that same object and you can mutate it to your heart’s delight, but if you rebind the reference in the method (like b = b + 1), the outer scope will know nothing about it, and after you’re done, the outer reference will still point at the original object.</td>
        </tr>
        <tr>
          <td id="L3927" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3927"></td>
          <td id="LC3927" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3928" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3928"></td>
          <td id="LC3928" class="blob-code blob-code-inner js-file-line">So to achieve the desired effect your best choice is to return a tuple containing the multiple results:</td>
        </tr>
        <tr>
          <td id="L3929" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3929"></td>
          <td id="LC3929" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3930" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3930"></td>
          <td id="LC3930" class="blob-code blob-code-inner js-file-line">def func2(a, b):</td>
        </tr>
        <tr>
          <td id="L3931" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3931"></td>
          <td id="LC3931" class="blob-code blob-code-inner js-file-line">    a = &#39;new-value&#39;        # a and b are local names</td>
        </tr>
        <tr>
          <td id="L3932" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3932"></td>
          <td id="LC3932" class="blob-code blob-code-inner js-file-line">    b = b + 1              # assigned to new objects</td>
        </tr>
        <tr>
          <td id="L3933" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3933"></td>
          <td id="LC3933" class="blob-code blob-code-inner js-file-line">    return a, b            # return new values</td>
        </tr>
        <tr>
          <td id="L3934" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3934"></td>
          <td id="LC3934" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3935" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3935"></td>
          <td id="LC3935" class="blob-code blob-code-inner js-file-line">x, y = &#39;old-value&#39;, 99</td>
        </tr>
        <tr>
          <td id="L3936" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3936"></td>
          <td id="LC3936" class="blob-code blob-code-inner js-file-line">x, y = func2(x, y)</td>
        </tr>
        <tr>
          <td id="L3937" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3937"></td>
          <td id="LC3937" class="blob-code blob-code-inner js-file-line">print(x, y)     </td>
        </tr>
        <tr>
          <td id="L3938" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3938"></td>
          <td id="LC3938" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3939" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3939"></td>
          <td id="LC3939" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3940" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3940"></td>
          <td id="LC3940" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3941" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3941"></td>
          <td id="LC3941" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3942" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3942"></td>
          <td id="LC3942" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3943" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3943"></td>
          <td id="LC3943" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3944" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3944"></td>
          <td id="LC3944" class="blob-code blob-code-inner js-file-line">332. Whenever you exit Python, is all memory de-allocated?</td>
        </tr>
        <tr>
          <td id="L3945" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3945"></td>
          <td id="LC3945" class="blob-code blob-code-inner js-file-line">Ans:  The answer here is no. The modules with circular references to other objects, or to objects referenced from global namespaces, aren’t always freed on exiting Python. Plus, it is impossible to de-allocate portions of memory reserved by the C library.</td>
        </tr>
        <tr>
          <td id="L3946" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3946"></td>
          <td id="LC3946" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3947" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3947"></td>
          <td id="LC3947" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3948" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3948"></td>
          <td id="LC3948" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3949" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3949"></td>
          <td id="LC3949" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3950" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3950"></td>
          <td id="LC3950" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3951" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3951"></td>
          <td id="LC3951" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3952" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3952"></td>
          <td id="LC3952" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3953" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3953"></td>
          <td id="LC3953" class="blob-code blob-code-inner js-file-line">333. What is the purpose of the single underscore “_” variable in Python?</td>
        </tr>
        <tr>
          <td id="L3954" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3954"></td>
          <td id="LC3954" class="blob-code blob-code-inner js-file-line">Ans: has 4 main conventional uses in Python:</td>
        </tr>
        <tr>
          <td id="L3955" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3955"></td>
          <td id="LC3955" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3956" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3956"></td>
          <td id="LC3956" class="blob-code blob-code-inner js-file-line">To hold the result of the last executed expression(/statement) in an interactive interpreter session. This precedent was set by the standard CPython interpreter, and other interpreters have followed suit</td>
        </tr>
        <tr>
          <td id="L3957" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3957"></td>
          <td id="LC3957" class="blob-code blob-code-inner js-file-line">For translation lookup in i18n (see the gettext documentation for example), as in code like: raise forms.ValidationError(_(&quot;Please enter a correct username&quot;))</td>
        </tr>
        <tr>
          <td id="L3958" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3958"></td>
          <td id="LC3958" class="blob-code blob-code-inner js-file-line">As a general purpose “throwaway” variable name to indicate that part of a function result is being deliberately ignored (Conceptually, it is being discarded.), as in code like: label, has_label, _ = text.partition(&#39;:&#39;).</td>
        </tr>
        <tr>
          <td id="L3959" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3959"></td>
          <td id="LC3959" class="blob-code blob-code-inner js-file-line">As part of a function definition (using either def or lambda), where the signature is fixed (e.g. by a callback or parent class API), but this particular function implementation doesn’t need all of the parameters, as in code like: callback = lambda _: True</td>
        </tr>
        <tr>
          <td id="L3960" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3960"></td>
          <td id="LC3960" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3961" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3961"></td>
          <td id="LC3961" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3962" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3962"></td>
          <td id="LC3962" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3963" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3963"></td>
          <td id="LC3963" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3964" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3964"></td>
          <td id="LC3964" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3965" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3965"></td>
          <td id="LC3965" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3966" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3966"></td>
          <td id="LC3966" class="blob-code blob-code-inner js-file-line">334. How is set() implemented internally? </td>
        </tr>
        <tr>
          <td id="L3967" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3967"></td>
          <td id="LC3967" class="blob-code blob-code-inner js-file-line">I’ve seen people say that set objects in python have O(1) membership-checking. How are they implemented internally to allow this? What sort of data structure does it use? What other implications does that implementation have?</td>
        </tr>
        <tr>
          <td id="L3968" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3968"></td>
          <td id="LC3968" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3969" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3969"></td>
          <td id="LC3969" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L3970" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3970"></td>
          <td id="LC3970" class="blob-code blob-code-inner js-file-line">Indeed, CPython’s sets are implemented as something like dictionaries with dummy values (the keys being the members of the set), with some optimization(s) that exploit this lack of values.</td>
        </tr>
        <tr>
          <td id="L3971" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3971"></td>
          <td id="LC3971" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3972" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3972"></td>
          <td id="LC3972" class="blob-code blob-code-inner js-file-line">So basically a set uses a hashtable as its underlying data structure. This explains the O(1) membership checking, since looking up an item in a hashtable is an O(1) operation, on average.</td>
        </tr>
        <tr>
          <td id="L3973" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3973"></td>
          <td id="LC3973" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3974" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3974"></td>
          <td id="LC3974" class="blob-code blob-code-inner js-file-line">Also, it worth to mention when people say sets have O(1) membership-checking, they are talking about the average case. In the worst case (when all hashed values collide) membership-checking is O(n).</td>
        </tr>
        <tr>
          <td id="L3975" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3975"></td>
          <td id="LC3975" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3976" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3976"></td>
          <td id="LC3976" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3977" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3977"></td>
          <td id="LC3977" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3978" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3978"></td>
          <td id="LC3978" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3979" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3979"></td>
          <td id="LC3979" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3980" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3980"></td>
          <td id="LC3980" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3981" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3981"></td>
          <td id="LC3981" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3982" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3982"></td>
          <td id="LC3982" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3983" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3983"></td>
          <td id="LC3983" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3984" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3984"></td>
          <td id="LC3984" class="blob-code blob-code-inner js-file-line">335. What is MRO in Python? How does it work?</td>
        </tr>
        <tr>
          <td id="L3985" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3985"></td>
          <td id="LC3985" class="blob-code blob-code-inner js-file-line">Ans:  Method Resolution Order (MRO) it denotes the way a programming language resolves a method or attribute. Python supports classes inheriting from other classes. The class being inherited is called the Parent or Superclass, while the class that inherits is called the Child or Subclass.</td>
        </tr>
        <tr>
          <td id="L3986" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3986"></td>
          <td id="LC3986" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3987" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3987"></td>
          <td id="LC3987" class="blob-code blob-code-inner js-file-line">In Python,** method resolution order** defines the order in which the base classes are searched when executing a method. First, the method or attribute is searched within a class and then it follows the order we specified while inheriting. This order is also called Linearization of a class and set of rules are called MRO (Method Resolution Order). While inheriting from another class, the interpreter needs a way to resolve the methods that are being called via an instance. Thus we need the method resolution order.</td>
        </tr>
        <tr>
          <td id="L3988" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3988"></td>
          <td id="LC3988" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3989" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3989"></td>
          <td id="LC3989" class="blob-code blob-code-inner js-file-line">Python resolves method and attribute lookups using the C3 linearisation of the class and its parents. The C3 linearisation is neither depth-first nor breadth-first in complex multiple inheritance hierarchies.</td>
        </tr>
        <tr>
          <td id="L3990" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3990"></td>
          <td id="LC3990" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3991" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3991"></td>
          <td id="LC3991" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3992" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3992"></td>
          <td id="LC3992" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3993" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3993"></td>
          <td id="LC3993" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3994" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3994"></td>
          <td id="LC3994" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3995" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3995"></td>
          <td id="LC3995" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L3996" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3996"></td>
          <td id="LC3996" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L3997" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3997"></td>
          <td id="LC3997" class="blob-code blob-code-inner js-file-line">336. What is the difference between old style and new style classes in Python?</td>
        </tr>
        <tr>
          <td id="L3998" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3998"></td>
          <td id="LC3998" class="blob-code blob-code-inner js-file-line">Ans:  Declaration-wise:</td>
        </tr>
        <tr>
          <td id="L3999" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3999"></td>
          <td id="LC3999" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4000" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4000"></td>
          <td id="LC4000" class="blob-code blob-code-inner js-file-line">New-style classes inherit from object, or from another new-style class.</td>
        </tr>
        <tr>
          <td id="L4001" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4001"></td>
          <td id="LC4001" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4002" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4002"></td>
          <td id="LC4002" class="blob-code blob-code-inner js-file-line">class NewStyleClass(object):</td>
        </tr>
        <tr>
          <td id="L4003" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4003"></td>
          <td id="LC4003" class="blob-code blob-code-inner js-file-line">    pass</td>
        </tr>
        <tr>
          <td id="L4004" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4004"></td>
          <td id="LC4004" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4005" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4005"></td>
          <td id="LC4005" class="blob-code blob-code-inner js-file-line">class AnotherNewStyleClass(NewStyleClass):</td>
        </tr>
        <tr>
          <td id="L4006" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4006"></td>
          <td id="LC4006" class="blob-code blob-code-inner js-file-line">    pass</td>
        </tr>
        <tr>
          <td id="L4007" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4007"></td>
          <td id="LC4007" class="blob-code blob-code-inner js-file-line">Old-style classes don’t.</td>
        </tr>
        <tr>
          <td id="L4008" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4008"></td>
          <td id="LC4008" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4009" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4009"></td>
          <td id="LC4009" class="blob-code blob-code-inner js-file-line">class OldStyleClass():</td>
        </tr>
        <tr>
          <td id="L4010" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4010"></td>
          <td id="LC4010" class="blob-code blob-code-inner js-file-line">    pass</td>
        </tr>
        <tr>
          <td id="L4011" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4011"></td>
          <td id="LC4011" class="blob-code blob-code-inner js-file-line">Python 3 Note:</td>
        </tr>
        <tr>
          <td id="L4012" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4012"></td>
          <td id="LC4012" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4013" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4013"></td>
          <td id="LC4013" class="blob-code blob-code-inner js-file-line">Python 3 doesn’t support old style classes, so either form noted above results in a new-style class.</td>
        </tr>
        <tr>
          <td id="L4014" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4014"></td>
          <td id="LC4014" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4015" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4015"></td>
          <td id="LC4015" class="blob-code blob-code-inner js-file-line">Also, MRO (Method Resolution Order) changed:</td>
        </tr>
        <tr>
          <td id="L4016" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4016"></td>
          <td id="LC4016" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4017" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4017"></td>
          <td id="LC4017" class="blob-code blob-code-inner js-file-line">Classic classes do a depth first search from left to right. Stop on first match. They do not have the mro attribute.</td>
        </tr>
        <tr>
          <td id="L4018" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4018"></td>
          <td id="LC4018" class="blob-code blob-code-inner js-file-line">New-style classes MRO is more complicated to synthesize in a single English sentence. One of its properties is that a Base class is only searched for once all its Derived classes have been. They have the mro attribute which shows the search order.</td>
        </tr>
        <tr>
          <td id="L4019" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4019"></td>
          <td id="LC4019" class="blob-code blob-code-inner js-file-line">Some other notes:</td>
        </tr>
        <tr>
          <td id="L4020" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4020"></td>
          <td id="LC4020" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4021" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4021"></td>
          <td id="LC4021" class="blob-code blob-code-inner js-file-line">New style class objects cannot be raised unless derived from Exception.</td>
        </tr>
        <tr>
          <td id="L4022" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4022"></td>
          <td id="LC4022" class="blob-code blob-code-inner js-file-line">Old style classes are still marginally faster for attribute lookup.</td>
        </tr>
        <tr>
          <td id="L4023" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4023"></td>
          <td id="LC4023" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4024" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4024"></td>
          <td id="LC4024" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4025" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4025"></td>
          <td id="LC4025" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4026" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4026"></td>
          <td id="LC4026" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4027" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4027"></td>
          <td id="LC4027" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4028" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4028"></td>
          <td id="LC4028" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4029" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4029"></td>
          <td id="LC4029" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4030" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4030"></td>
          <td id="LC4030" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4031" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4031"></td>
          <td id="LC4031" class="blob-code blob-code-inner js-file-line">337. Why Python (CPython and others) uses the GIL?</td>
        </tr>
        <tr>
          <td id="L4032" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4032"></td>
          <td id="LC4032" class="blob-code blob-code-inner js-file-line">Ans: In CPython, the global interpreter lock, or GIL, is a mutex that prevents multiple native threads from executing Python bytecodes at once. This lock is necessary mainly because CPython’s memory management is not thread-safe.</td>
        </tr>
        <tr>
          <td id="L4033" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4033"></td>
          <td id="LC4033" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4034" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4034"></td>
          <td id="LC4034" class="blob-code blob-code-inner js-file-line">Python has a GIL as opposed to fine-grained locking for several reasons:</td>
        </tr>
        <tr>
          <td id="L4035" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4035"></td>
          <td id="LC4035" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4036" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4036"></td>
          <td id="LC4036" class="blob-code blob-code-inner js-file-line">It is faster in the single-threaded case.</td>
        </tr>
        <tr>
          <td id="L4037" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4037"></td>
          <td id="LC4037" class="blob-code blob-code-inner js-file-line">It is faster in the multi-threaded case for i/o bound programs.</td>
        </tr>
        <tr>
          <td id="L4038" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4038"></td>
          <td id="LC4038" class="blob-code blob-code-inner js-file-line">It is faster in the multi-threaded case for cpu-bound programs that do their compute-intensive work in C libraries.</td>
        </tr>
        <tr>
          <td id="L4039" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4039"></td>
          <td id="LC4039" class="blob-code blob-code-inner js-file-line">It makes C extensions easier to write: there will be no switch of Python threads except where you allow it to happen (i.e. between the Py_BEGIN_ALLOW_THREADS and Py_END_ALLOW_THREADS macros).</td>
        </tr>
        <tr>
          <td id="L4040" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4040"></td>
          <td id="LC4040" class="blob-code blob-code-inner js-file-line">It makes wrapping C libraries easier. You don’t have to worry about thread-safety. If the library is not thread-safe, you simply keep the GIL locked while you call it</td>
        </tr>
        <tr>
          <td id="L4041" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4041"></td>
          <td id="LC4041" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4042" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4042"></td>
          <td id="LC4042" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4043" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4043"></td>
          <td id="LC4043" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4044" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4044"></td>
          <td id="LC4044" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4045" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4045"></td>
          <td id="LC4045" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4046" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4046"></td>
          <td id="LC4046" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4047" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4047"></td>
          <td id="LC4047" class="blob-code blob-code-inner js-file-line">338. How are arguments passed by value or by reference in python?</td>
        </tr>
        <tr>
          <td id="L4048" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4048"></td>
          <td id="LC4048" class="blob-code blob-code-inner js-file-line">Ans: </td>
        </tr>
        <tr>
          <td id="L4049" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4049"></td>
          <td id="LC4049" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4050" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4050"></td>
          <td id="LC4050" class="blob-code blob-code-inner js-file-line">Pass by value: Copy of the actual object is passed. Changing the value of the copy of the object will not change the value of the original object.</td>
        </tr>
        <tr>
          <td id="L4051" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4051"></td>
          <td id="LC4051" class="blob-code blob-code-inner js-file-line">Pass by reference: Reference to the actual object is passed. Changing the value of the new object will change the value of the original object.</td>
        </tr>
        <tr>
          <td id="L4052" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4052"></td>
          <td id="LC4052" class="blob-code blob-code-inner js-file-line">In Python, arguments are passed by reference, i.e., reference to the actual object is passed.</td>
        </tr>
        <tr>
          <td id="L4053" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4053"></td>
          <td id="LC4053" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4054" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4054"></td>
          <td id="LC4054" class="blob-code blob-code-inner js-file-line">def appendNumber(arr):</td>
        </tr>
        <tr>
          <td id="L4055" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4055"></td>
          <td id="LC4055" class="blob-code blob-code-inner js-file-line">    arr.append(4)</td>
        </tr>
        <tr>
          <td id="L4056" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4056"></td>
          <td id="LC4056" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4057" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4057"></td>
          <td id="LC4057" class="blob-code blob-code-inner js-file-line">arr = [1, 2, 3]</td>
        </tr>
        <tr>
          <td id="L4058" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4058"></td>
          <td id="LC4058" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4059" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4059"></td>
          <td id="LC4059" class="blob-code blob-code-inner js-file-line">print(arr)  #Output: =&gt; [1, 2, 3]</td>
        </tr>
        <tr>
          <td id="L4060" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4060"></td>
          <td id="LC4060" class="blob-code blob-code-inner js-file-line">appendNumber(arr)</td>
        </tr>
        <tr>
          <td id="L4061" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4061"></td>
          <td id="LC4061" class="blob-code blob-code-inner js-file-line">print(arr)  #Output: =&gt; [1, 2, 3, 4]</td>
        </tr>
        <tr>
          <td id="L4062" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4062"></td>
          <td id="LC4062" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4063" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4063"></td>
          <td id="LC4063" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4064" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4064"></td>
          <td id="LC4064" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4065" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4065"></td>
          <td id="LC4065" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4066" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4066"></td>
          <td id="LC4066" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4067" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4067"></td>
          <td id="LC4067" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4068" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4068"></td>
          <td id="LC4068" class="blob-code blob-code-inner js-file-line">339. What is a boolean in Python?</td>
        </tr>
        <tr>
          <td id="L4069" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4069"></td>
          <td id="LC4069" class="blob-code blob-code-inner js-file-line">Ans: Boolean is one of the built-in data types in Python, it mainly contains two values, and they are true and false.</td>
        </tr>
        <tr>
          <td id="L4070" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4070"></td>
          <td id="LC4070" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4071" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4071"></td>
          <td id="LC4071" class="blob-code blob-code-inner js-file-line">Python bool() is the method used to convert a value to a boolean value.</td>
        </tr>
        <tr>
          <td id="L4072" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4072"></td>
          <td id="LC4072" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4073" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4073"></td>
          <td id="LC4073" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4074" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4074"></td>
          <td id="LC4074" class="blob-code blob-code-inner js-file-line">Syntax for bool() method: bool([a])</td>
        </tr>
        <tr>
          <td id="L4075" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4075"></td>
          <td id="LC4075" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4076" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4076"></td>
          <td id="LC4076" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4077" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4077"></td>
          <td id="LC4077" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4078" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4078"></td>
          <td id="LC4078" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4079" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4079"></td>
          <td id="LC4079" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4080" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4080"></td>
          <td id="LC4080" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4081" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4081"></td>
          <td id="LC4081" class="blob-code blob-code-inner js-file-line">340. What is Python String format and Python String replace?</td>
        </tr>
        <tr>
          <td id="L4082" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4082"></td>
          <td id="LC4082" class="blob-code blob-code-inner js-file-line">Ans:  Python String Format: The String format() method in Python is mainly used to format the given string into an accurate output or result.</td>
        </tr>
        <tr>
          <td id="L4083" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4083"></td>
          <td id="LC4083" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4084" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4084"></td>
          <td id="LC4084" class="blob-code blob-code-inner js-file-line">Syntax for String format() method:</td>
        </tr>
        <tr>
          <td id="L4085" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4085"></td>
          <td id="LC4085" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4086" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4086"></td>
          <td id="LC4086" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4087" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4087"></td>
          <td id="LC4087" class="blob-code blob-code-inner js-file-line">template.format(p0, p1, ..., k0=v0, k1=v1, ...)</td>
        </tr>
        <tr>
          <td id="L4088" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4088"></td>
          <td id="LC4088" class="blob-code blob-code-inner js-file-line">Python String Replace: This method is mainly used to return a copy of the string in which all the occurrence of the substring is replaced by another substring.</td>
        </tr>
        <tr>
          <td id="L4089" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4089"></td>
          <td id="LC4089" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4090" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4090"></td>
          <td id="LC4090" class="blob-code blob-code-inner js-file-line">Syntax for String replace() method: </td>
        </tr>
        <tr>
          <td id="L4091" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4091"></td>
          <td id="LC4091" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4092" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4092"></td>
          <td id="LC4092" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4093" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4093"></td>
          <td id="LC4093" class="blob-code blob-code-inner js-file-line">str.replace(old, new [, count])</td>
        </tr>
        <tr>
          <td id="L4094" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4094"></td>
          <td id="LC4094" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4095" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4095"></td>
          <td id="LC4095" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4096" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4096"></td>
          <td id="LC4096" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4097" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4097"></td>
          <td id="LC4097" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4098" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4098"></td>
          <td id="LC4098" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4099" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4099"></td>
          <td id="LC4099" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4100" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4100"></td>
          <td id="LC4100" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4101" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4101"></td>
          <td id="LC4101" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4102" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4102"></td>
          <td id="LC4102" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4103" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4103"></td>
          <td id="LC4103" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4104" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4104"></td>
          <td id="LC4104" class="blob-code blob-code-inner js-file-line">341. Name some of the built-in modules in Python?</td>
        </tr>
        <tr>
          <td id="L4105" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4105"></td>
          <td id="LC4105" class="blob-code blob-code-inner js-file-line">Ans: The built-in modules in Python are:</td>
        </tr>
        <tr>
          <td id="L4106" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4106"></td>
          <td id="LC4106" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4107" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4107"></td>
          <td id="LC4107" class="blob-code blob-code-inner js-file-line">sys module</td>
        </tr>
        <tr>
          <td id="L4108" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4108"></td>
          <td id="LC4108" class="blob-code blob-code-inner js-file-line">OS module</td>
        </tr>
        <tr>
          <td id="L4109" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4109"></td>
          <td id="LC4109" class="blob-code blob-code-inner js-file-line">random module</td>
        </tr>
        <tr>
          <td id="L4110" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4110"></td>
          <td id="LC4110" class="blob-code blob-code-inner js-file-line">collection module</td>
        </tr>
        <tr>
          <td id="L4111" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4111"></td>
          <td id="LC4111" class="blob-code blob-code-inner js-file-line">JSON</td>
        </tr>
        <tr>
          <td id="L4112" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4112"></td>
          <td id="LC4112" class="blob-code blob-code-inner js-file-line">Math module</td>
        </tr>
        <tr>
          <td id="L4113" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4113"></td>
          <td id="LC4113" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4114" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4114"></td>
          <td id="LC4114" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4115" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4115"></td>
          <td id="LC4115" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4116" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4116"></td>
          <td id="LC4116" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4117" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4117"></td>
          <td id="LC4117" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4118" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4118"></td>
          <td id="LC4118" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4119" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4119"></td>
          <td id="LC4119" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4120" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4120"></td>
          <td id="LC4120" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4121" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4121"></td>
          <td id="LC4121" class="blob-code blob-code-inner js-file-line">342. How do we convert the string to lowercase?</td>
        </tr>
        <tr>
          <td id="L4122" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4122"></td>
          <td id="LC4122" class="blob-code blob-code-inner js-file-line">Ans: lower() function is used to convert string to lowercase.</td>
        </tr>
        <tr>
          <td id="L4123" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4123"></td>
          <td id="LC4123" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4124" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4124"></td>
          <td id="LC4124" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L4125" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4125"></td>
          <td id="LC4125" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4126" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4126"></td>
          <td id="LC4126" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4127" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4127"></td>
          <td id="LC4127" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4128" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4128"></td>
          <td id="LC4128" class="blob-code blob-code-inner js-file-line">str = &#39;XYZ&#39;</td>
        </tr>
        <tr>
          <td id="L4129" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4129"></td>
          <td id="LC4129" class="blob-code blob-code-inner js-file-line">print(str.lower())</td>
        </tr>
        <tr>
          <td id="L4130" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4130"></td>
          <td id="LC4130" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L4131" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4131"></td>
          <td id="LC4131" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4132" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4132"></td>
          <td id="LC4132" class="blob-code blob-code-inner js-file-line">xyz</td>
        </tr>
        <tr>
          <td id="L4133" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4133"></td>
          <td id="LC4133" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4134" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4134"></td>
          <td id="LC4134" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4135" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4135"></td>
          <td id="LC4135" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4136" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4136"></td>
          <td id="LC4136" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4137" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4137"></td>
          <td id="LC4137" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4138" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4138"></td>
          <td id="LC4138" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4139" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4139"></td>
          <td id="LC4139" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4140" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4140"></td>
          <td id="LC4140" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4141" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4141"></td>
          <td id="LC4141" class="blob-code blob-code-inner js-file-line">343. How to remove values from a Python array?</td>
        </tr>
        <tr>
          <td id="L4142" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4142"></td>
          <td id="LC4142" class="blob-code blob-code-inner js-file-line">Ans: The elements can be removed from a Python array using remove() or pop() function. The difference between pop() and remove() will be explained in the below example.</td>
        </tr>
        <tr>
          <td id="L4143" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4143"></td>
          <td id="LC4143" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4144" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4144"></td>
          <td id="LC4144" class="blob-code blob-code-inner js-file-line">Example:</td>
        </tr>
        <tr>
          <td id="L4145" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4145"></td>
          <td id="LC4145" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4146" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4146"></td>
          <td id="LC4146" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4147" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4147"></td>
          <td id="LC4147" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4148" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4148"></td>
          <td id="LC4148" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4149" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4149"></td>
          <td id="LC4149" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4150" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4150"></td>
          <td id="LC4150" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4151" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4151"></td>
          <td id="LC4151" class="blob-code blob-code-inner js-file-line">x = arr.array(&#39;d&#39;,  [ 1.0, 2.2, 3.4, 4.8, 5.2, 6.6, 7.3])</td>
        </tr>
        <tr>
          <td id="L4152" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4152"></td>
          <td id="LC4152" class="blob-code blob-code-inner js-file-line">print(x.pop())</td>
        </tr>
        <tr>
          <td id="L4153" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4153"></td>
          <td id="LC4153" class="blob-code blob-code-inner js-file-line">print(x.pop(3))</td>
        </tr>
        <tr>
          <td id="L4154" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4154"></td>
          <td id="LC4154" class="blob-code blob-code-inner js-file-line">x.remove(1.0)</td>
        </tr>
        <tr>
          <td id="L4155" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4155"></td>
          <td id="LC4155" class="blob-code blob-code-inner js-file-line">print(a)</td>
        </tr>
        <tr>
          <td id="L4156" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4156"></td>
          <td id="LC4156" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L4157" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4157"></td>
          <td id="LC4157" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4158" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4158"></td>
          <td id="LC4158" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4159" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4159"></td>
          <td id="LC4159" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4160" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4160"></td>
          <td id="LC4160" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4161" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4161"></td>
          <td id="LC4161" class="blob-code blob-code-inner js-file-line">7.3</td>
        </tr>
        <tr>
          <td id="L4162" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4162"></td>
          <td id="LC4162" class="blob-code blob-code-inner js-file-line">4.8</td>
        </tr>
        <tr>
          <td id="L4163" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4163"></td>
          <td id="LC4163" class="blob-code blob-code-inner js-file-line">array(‘d’, [2.2, 3.4, 5.2, 6.6])</td>
        </tr>
        <tr>
          <td id="L4164" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4164"></td>
          <td id="LC4164" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4165" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4165"></td>
          <td id="LC4165" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4166" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4166"></td>
          <td id="LC4166" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4167" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4167"></td>
          <td id="LC4167" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4168" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4168"></td>
          <td id="LC4168" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4169" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4169"></td>
          <td id="LC4169" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4170" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4170"></td>
          <td id="LC4170" class="blob-code blob-code-inner js-file-line">344.  What is Try Block?</td>
        </tr>
        <tr>
          <td id="L4171" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4171"></td>
          <td id="LC4171" class="blob-code blob-code-inner js-file-line">A block which is preceded by the try keyword is known as a try block</td>
        </tr>
        <tr>
          <td id="L4172" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4172"></td>
          <td id="LC4172" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4173" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4173"></td>
          <td id="LC4173" class="blob-code blob-code-inner js-file-line">Syntax:</td>
        </tr>
        <tr>
          <td id="L4174" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4174"></td>
          <td id="LC4174" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4175" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4175"></td>
          <td id="LC4175" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4176" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4176"></td>
          <td id="LC4176" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4177" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4177"></td>
          <td id="LC4177" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4178" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4178"></td>
          <td id="LC4178" class="blob-code blob-code-inner js-file-line">try{</td>
        </tr>
        <tr>
          <td id="L4179" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4179"></td>
          <td id="LC4179" class="blob-code blob-code-inner js-file-line">   //statements that may cause an exception</td>
        </tr>
        <tr>
          <td id="L4180" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4180"></td>
          <td id="LC4180" class="blob-code blob-code-inner js-file-line">}</td>
        </tr>
        <tr>
          <td id="L4181" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4181"></td>
          <td id="LC4181" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4182" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4182"></td>
          <td id="LC4182" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4183" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4183"></td>
          <td id="LC4183" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4184" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4184"></td>
          <td id="LC4184" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4185" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4185"></td>
          <td id="LC4185" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4186" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4186"></td>
          <td id="LC4186" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4187" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4187"></td>
          <td id="LC4187" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4188" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4188"></td>
          <td id="LC4188" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4189" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4189"></td>
          <td id="LC4189" class="blob-code blob-code-inner js-file-line">345. How can we access a module written in Python from C?</td>
        </tr>
        <tr>
          <td id="L4190" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4190"></td>
          <td id="LC4190" class="blob-code blob-code-inner js-file-line">Ans: We can access the module written in Python from C by using the following method.</td>
        </tr>
        <tr>
          <td id="L4191" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4191"></td>
          <td id="LC4191" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4192" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4192"></td>
          <td id="LC4192" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4193" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4193"></td>
          <td id="LC4193" class="blob-code blob-code-inner js-file-line">Module == PyImport_ImportModule(&quot;&lt;modulename&gt;&quot;);</td>
        </tr>
        <tr>
          <td id="L4194" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4194"></td>
          <td id="LC4194" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4195" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4195"></td>
          <td id="LC4195" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4196" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4196"></td>
          <td id="LC4196" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4197" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4197"></td>
          <td id="LC4197" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4198" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4198"></td>
          <td id="LC4198" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4199" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4199"></td>
          <td id="LC4199" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4200" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4200"></td>
          <td id="LC4200" class="blob-code blob-code-inner js-file-line">346. Write a program to count the number of capital letters in a file?</td>
        </tr>
        <tr>
          <td id="L4201" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4201"></td>
          <td id="LC4201" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L4202" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4202"></td>
          <td id="LC4202" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4203" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4203"></td>
          <td id="LC4203" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4204" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4204"></td>
          <td id="LC4204" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4205" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4205"></td>
          <td id="LC4205" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4206" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4206"></td>
          <td id="LC4206" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4207" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4207"></td>
          <td id="LC4207" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L4208" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4208"></td>
          <td id="LC4208" class="blob-code blob-code-inner js-file-line">with open(SOME_LARGE_FILE) as countletter:</td>
        </tr>
        <tr>
          <td id="L4209" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4209"></td>
          <td id="LC4209" class="blob-code blob-code-inner js-file-line">count = 0</td>
        </tr>
        <tr>
          <td id="L4210" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4210"></td>
          <td id="LC4210" class="blob-code blob-code-inner js-file-line">text = countletter.read()</td>
        </tr>
        <tr>
          <td id="L4211" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4211"></td>
          <td id="LC4211" class="blob-code blob-code-inner js-file-line">for character in text:</td>
        </tr>
        <tr>
          <td id="L4212" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4212"></td>
          <td id="LC4212" class="blob-code blob-code-inner js-file-line">if character.isupper():</td>
        </tr>
        <tr>
          <td id="L4213" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4213"></td>
          <td id="LC4213" class="blob-code blob-code-inner js-file-line">count += 1</td>
        </tr>
        <tr>
          <td id="L4214" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4214"></td>
          <td id="LC4214" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4215" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4215"></td>
          <td id="LC4215" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4216" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4216"></td>
          <td id="LC4216" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4217" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4217"></td>
          <td id="LC4217" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4218" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4218"></td>
          <td id="LC4218" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4219" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4219"></td>
          <td id="LC4219" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4220" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4220"></td>
          <td id="LC4220" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4221" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4221"></td>
          <td id="LC4221" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4222" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4222"></td>
          <td id="LC4222" class="blob-code blob-code-inner js-file-line">347. Write a program to display the Fibonacci sequence in Python?</td>
        </tr>
        <tr>
          <td id="L4223" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4223"></td>
          <td id="LC4223" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L4224" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4224"></td>
          <td id="LC4224" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4225" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4225"></td>
          <td id="LC4225" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4226" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4226"></td>
          <td id="LC4226" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4227" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4227"></td>
          <td id="LC4227" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4228" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4228"></td>
          <td id="LC4228" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4229" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4229"></td>
          <td id="LC4229" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L4230" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4230"></td>
          <td id="LC4230" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L4231" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4231"></td>
          <td id="LC4231" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L4232" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4232"></td>
          <td id="LC4232" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L4233" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4233"></td>
          <td id="LC4233" class="blob-code blob-code-inner js-file-line">10</td>
        </tr>
        <tr>
          <td id="L4234" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4234"></td>
          <td id="LC4234" class="blob-code blob-code-inner js-file-line">11</td>
        </tr>
        <tr>
          <td id="L4235" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4235"></td>
          <td id="LC4235" class="blob-code blob-code-inner js-file-line">12</td>
        </tr>
        <tr>
          <td id="L4236" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4236"></td>
          <td id="LC4236" class="blob-code blob-code-inner js-file-line">13</td>
        </tr>
        <tr>
          <td id="L4237" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4237"></td>
          <td id="LC4237" class="blob-code blob-code-inner js-file-line">14</td>
        </tr>
        <tr>
          <td id="L4238" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4238"></td>
          <td id="LC4238" class="blob-code blob-code-inner js-file-line">15</td>
        </tr>
        <tr>
          <td id="L4239" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4239"></td>
          <td id="LC4239" class="blob-code blob-code-inner js-file-line">16</td>
        </tr>
        <tr>
          <td id="L4240" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4240"></td>
          <td id="LC4240" class="blob-code blob-code-inner js-file-line">17</td>
        </tr>
        <tr>
          <td id="L4241" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4241"></td>
          <td id="LC4241" class="blob-code blob-code-inner js-file-line">18</td>
        </tr>
        <tr>
          <td id="L4242" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4242"></td>
          <td id="LC4242" class="blob-code blob-code-inner js-file-line">19</td>
        </tr>
        <tr>
          <td id="L4243" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4243"></td>
          <td id="LC4243" class="blob-code blob-code-inner js-file-line">20</td>
        </tr>
        <tr>
          <td id="L4244" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4244"></td>
          <td id="LC4244" class="blob-code blob-code-inner js-file-line">21</td>
        </tr>
        <tr>
          <td id="L4245" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4245"></td>
          <td id="LC4245" class="blob-code blob-code-inner js-file-line"># Displaying Fibonacci sequence</td>
        </tr>
        <tr>
          <td id="L4246" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4246"></td>
          <td id="LC4246" class="blob-code blob-code-inner js-file-line">n = 10</td>
        </tr>
        <tr>
          <td id="L4247" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4247"></td>
          <td id="LC4247" class="blob-code blob-code-inner js-file-line"># first two terms</td>
        </tr>
        <tr>
          <td id="L4248" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4248"></td>
          <td id="LC4248" class="blob-code blob-code-inner js-file-line">n0 = 0</td>
        </tr>
        <tr>
          <td id="L4249" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4249"></td>
          <td id="LC4249" class="blob-code blob-code-inner js-file-line">n1 = 1</td>
        </tr>
        <tr>
          <td id="L4250" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4250"></td>
          <td id="LC4250" class="blob-code blob-code-inner js-file-line">#Count</td>
        </tr>
        <tr>
          <td id="L4251" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4251"></td>
          <td id="LC4251" class="blob-code blob-code-inner js-file-line">x = 0</td>
        </tr>
        <tr>
          <td id="L4252" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4252"></td>
          <td id="LC4252" class="blob-code blob-code-inner js-file-line"># check if the number of terms is valid</td>
        </tr>
        <tr>
          <td id="L4253" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4253"></td>
          <td id="LC4253" class="blob-code blob-code-inner js-file-line">if n &lt;= 0:</td>
        </tr>
        <tr>
          <td id="L4254" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4254"></td>
          <td id="LC4254" class="blob-code blob-code-inner js-file-line">   print(&quot;Enter positive integer&quot;)</td>
        </tr>
        <tr>
          <td id="L4255" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4255"></td>
          <td id="LC4255" class="blob-code blob-code-inner js-file-line">elif n == 1:</td>
        </tr>
        <tr>
          <td id="L4256" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4256"></td>
          <td id="LC4256" class="blob-code blob-code-inner js-file-line">   print(&quot;Numbers in Fibonacci sequence upto&quot;,n,&quot;:&quot;)</td>
        </tr>
        <tr>
          <td id="L4257" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4257"></td>
          <td id="LC4257" class="blob-code blob-code-inner js-file-line">   print(n0)</td>
        </tr>
        <tr>
          <td id="L4258" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4258"></td>
          <td id="LC4258" class="blob-code blob-code-inner js-file-line">else:</td>
        </tr>
        <tr>
          <td id="L4259" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4259"></td>
          <td id="LC4259" class="blob-code blob-code-inner js-file-line">   print(&quot;Numbers in Fibonacci sequence upto&quot;,n,&quot;:&quot;)</td>
        </tr>
        <tr>
          <td id="L4260" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4260"></td>
          <td id="LC4260" class="blob-code blob-code-inner js-file-line">   while x &lt; n:</td>
        </tr>
        <tr>
          <td id="L4261" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4261"></td>
          <td id="LC4261" class="blob-code blob-code-inner js-file-line">       print(n0,end=&#39;, &#39;)</td>
        </tr>
        <tr>
          <td id="L4262" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4262"></td>
          <td id="LC4262" class="blob-code blob-code-inner js-file-line">       nth = n0 + n1</td>
        </tr>
        <tr>
          <td id="L4263" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4263"></td>
          <td id="LC4263" class="blob-code blob-code-inner js-file-line">       n0 = n1</td>
        </tr>
        <tr>
          <td id="L4264" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4264"></td>
          <td id="LC4264" class="blob-code blob-code-inner js-file-line">       n1 = nth</td>
        </tr>
        <tr>
          <td id="L4265" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4265"></td>
          <td id="LC4265" class="blob-code blob-code-inner js-file-line">       x += 1</td>
        </tr>
        <tr>
          <td id="L4266" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4266"></td>
          <td id="LC4266" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L4267" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4267"></td>
          <td id="LC4267" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4268" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4268"></td>
          <td id="LC4268" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4269" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4269"></td>
          <td id="LC4269" class="blob-code blob-code-inner js-file-line">0, 1, 1, 2, 3, 5, 8, 13, 21, 34,</td>
        </tr>
        <tr>
          <td id="L4270" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4270"></td>
          <td id="LC4270" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4271" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4271"></td>
          <td id="LC4271" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4272" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4272"></td>
          <td id="LC4272" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4273" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4273"></td>
          <td id="LC4273" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4274" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4274"></td>
          <td id="LC4274" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4275" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4275"></td>
          <td id="LC4275" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4276" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4276"></td>
          <td id="LC4276" class="blob-code blob-code-inner js-file-line">348. Write a program in Python to produce Star triangle?</td>
        </tr>
        <tr>
          <td id="L4277" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4277"></td>
          <td id="LC4277" class="blob-code blob-code-inner js-file-line">Ans: The code to produce star triangle is as follows:</td>
        </tr>
        <tr>
          <td id="L4278" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4278"></td>
          <td id="LC4278" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4279" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4279"></td>
          <td id="LC4279" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4280" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4280"></td>
          <td id="LC4280" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4281" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4281"></td>
          <td id="LC4281" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4282" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4282"></td>
          <td id="LC4282" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4283" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4283"></td>
          <td id="LC4283" class="blob-code blob-code-inner js-file-line">def pyfun(r):</td>
        </tr>
        <tr>
          <td id="L4284" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4284"></td>
          <td id="LC4284" class="blob-code blob-code-inner js-file-line">for a in range(r):</td>
        </tr>
        <tr>
          <td id="L4285" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4285"></td>
          <td id="LC4285" class="blob-code blob-code-inner js-file-line">print(&#39; &#39;*(r-x-1)+&#39;*&#39;*(2*x+1)) </td>
        </tr>
        <tr>
          <td id="L4286" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4286"></td>
          <td id="LC4286" class="blob-code blob-code-inner js-file-line">pyfun(9)</td>
        </tr>
        <tr>
          <td id="L4287" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4287"></td>
          <td id="LC4287" class="blob-code blob-code-inner js-file-line">Output: </td>
        </tr>
        <tr>
          <td id="L4288" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4288"></td>
          <td id="LC4288" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4289" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4289"></td>
          <td id="LC4289" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4290" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4290"></td>
          <td id="LC4290" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4291" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4291"></td>
          <td id="LC4291" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4292" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4292"></td>
          <td id="LC4292" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4293" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4293"></td>
          <td id="LC4293" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4294" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4294"></td>
          <td id="LC4294" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L4295" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4295"></td>
          <td id="LC4295" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L4296" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4296"></td>
          <td id="LC4296" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L4297" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4297"></td>
          <td id="LC4297" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L4298" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4298"></td>
          <td id="LC4298" class="blob-code blob-code-inner js-file-line">        *</td>
        </tr>
        <tr>
          <td id="L4299" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4299"></td>
          <td id="LC4299" class="blob-code blob-code-inner js-file-line">       ***</td>
        </tr>
        <tr>
          <td id="L4300" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4300"></td>
          <td id="LC4300" class="blob-code blob-code-inner js-file-line">      *****</td>
        </tr>
        <tr>
          <td id="L4301" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4301"></td>
          <td id="LC4301" class="blob-code blob-code-inner js-file-line">     *******</td>
        </tr>
        <tr>
          <td id="L4302" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4302"></td>
          <td id="LC4302" class="blob-code blob-code-inner js-file-line">    *********</td>
        </tr>
        <tr>
          <td id="L4303" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4303"></td>
          <td id="LC4303" class="blob-code blob-code-inner js-file-line">   ***********</td>
        </tr>
        <tr>
          <td id="L4304" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4304"></td>
          <td id="LC4304" class="blob-code blob-code-inner js-file-line">  *************</td>
        </tr>
        <tr>
          <td id="L4305" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4305"></td>
          <td id="LC4305" class="blob-code blob-code-inner js-file-line"> ***************</td>
        </tr>
        <tr>
          <td id="L4306" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4306"></td>
          <td id="LC4306" class="blob-code blob-code-inner js-file-line">*****************</td>
        </tr>
        <tr>
          <td id="L4307" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4307"></td>
          <td id="LC4307" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4308" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4308"></td>
          <td id="LC4308" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4309" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4309"></td>
          <td id="LC4309" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4310" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4310"></td>
          <td id="LC4310" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4311" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4311"></td>
          <td id="LC4311" class="blob-code blob-code-inner js-file-line">349. Write a program to check whether the given number is prime or not?</td>
        </tr>
        <tr>
          <td id="L4312" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4312"></td>
          <td id="LC4312" class="blob-code blob-code-inner js-file-line">Ans: The code to check prime number is as follows:</td>
        </tr>
        <tr>
          <td id="L4313" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4313"></td>
          <td id="LC4313" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4314" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4314"></td>
          <td id="LC4314" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4315" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4315"></td>
          <td id="LC4315" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4316" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4316"></td>
          <td id="LC4316" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4317" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4317"></td>
          <td id="LC4317" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4318" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4318"></td>
          <td id="LC4318" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4319" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4319"></td>
          <td id="LC4319" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L4320" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4320"></td>
          <td id="LC4320" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L4321" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4321"></td>
          <td id="LC4321" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L4322" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4322"></td>
          <td id="LC4322" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L4323" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4323"></td>
          <td id="LC4323" class="blob-code blob-code-inner js-file-line">10</td>
        </tr>
        <tr>
          <td id="L4324" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4324"></td>
          <td id="LC4324" class="blob-code blob-code-inner js-file-line">11</td>
        </tr>
        <tr>
          <td id="L4325" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4325"></td>
          <td id="LC4325" class="blob-code blob-code-inner js-file-line">12</td>
        </tr>
        <tr>
          <td id="L4326" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4326"></td>
          <td id="LC4326" class="blob-code blob-code-inner js-file-line">13</td>
        </tr>
        <tr>
          <td id="L4327" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4327"></td>
          <td id="LC4327" class="blob-code blob-code-inner js-file-line">14</td>
        </tr>
        <tr>
          <td id="L4328" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4328"></td>
          <td id="LC4328" class="blob-code blob-code-inner js-file-line">15</td>
        </tr>
        <tr>
          <td id="L4329" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4329"></td>
          <td id="LC4329" class="blob-code blob-code-inner js-file-line">16</td>
        </tr>
        <tr>
          <td id="L4330" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4330"></td>
          <td id="LC4330" class="blob-code blob-code-inner js-file-line">17</td>
        </tr>
        <tr>
          <td id="L4331" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4331"></td>
          <td id="LC4331" class="blob-code blob-code-inner js-file-line"># program to check the number is prime or not</td>
        </tr>
        <tr>
          <td id="L4332" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4332"></td>
          <td id="LC4332" class="blob-code blob-code-inner js-file-line">n1 = 409</td>
        </tr>
        <tr>
          <td id="L4333" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4333"></td>
          <td id="LC4333" class="blob-code blob-code-inner js-file-line"># num1 = int(input(&quot;Enter any one number: &quot;))</td>
        </tr>
        <tr>
          <td id="L4334" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4334"></td>
          <td id="LC4334" class="blob-code blob-code-inner js-file-line"># prime number is greater than 1</td>
        </tr>
        <tr>
          <td id="L4335" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4335"></td>
          <td id="LC4335" class="blob-code blob-code-inner js-file-line">if n1 &gt; 1:</td>
        </tr>
        <tr>
          <td id="L4336" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4336"></td>
          <td id="LC4336" class="blob-code blob-code-inner js-file-line"># check the following factors</td>
        </tr>
        <tr>
          <td id="L4337" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4337"></td>
          <td id="LC4337" class="blob-code blob-code-inner js-file-line">for x is in range of(2,num1):</td>
        </tr>
        <tr>
          <td id="L4338" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4338"></td>
          <td id="LC4338" class="blob-code blob-code-inner js-file-line">if (n1 % x) == 0:</td>
        </tr>
        <tr>
          <td id="L4339" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4339"></td>
          <td id="LC4339" class="blob-code blob-code-inner js-file-line">print(n1,&quot;is not a prime number&quot;)</td>
        </tr>
        <tr>
          <td id="L4340" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4340"></td>
          <td id="LC4340" class="blob-code blob-code-inner js-file-line">print(x,&quot;times&quot;,n1//x,&quot;is&quot;,num)</td>
        </tr>
        <tr>
          <td id="L4341" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4341"></td>
          <td id="LC4341" class="blob-code blob-code-inner js-file-line">break</td>
        </tr>
        <tr>
          <td id="L4342" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4342"></td>
          <td id="LC4342" class="blob-code blob-code-inner js-file-line">else:</td>
        </tr>
        <tr>
          <td id="L4343" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4343"></td>
          <td id="LC4343" class="blob-code blob-code-inner js-file-line">print(n1,&quot;is a prime number&quot;)</td>
        </tr>
        <tr>
          <td id="L4344" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4344"></td>
          <td id="LC4344" class="blob-code blob-code-inner js-file-line"># if input number is smaller than</td>
        </tr>
        <tr>
          <td id="L4345" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4345"></td>
          <td id="LC4345" class="blob-code blob-code-inner js-file-line"># or equal to the value 1, then it is not prime number</td>
        </tr>
        <tr>
          <td id="L4346" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4346"></td>
          <td id="LC4346" class="blob-code blob-code-inner js-file-line">else:</td>
        </tr>
        <tr>
          <td id="L4347" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4347"></td>
          <td id="LC4347" class="blob-code blob-code-inner js-file-line">print(n1,&quot;is not a prime number&quot;)</td>
        </tr>
        <tr>
          <td id="L4348" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4348"></td>
          <td id="LC4348" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L4349" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4349"></td>
          <td id="LC4349" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4350" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4350"></td>
          <td id="LC4350" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4351" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4351"></td>
          <td id="LC4351" class="blob-code blob-code-inner js-file-line">409 is a prime number</td>
        </tr>
        <tr>
          <td id="L4352" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4352"></td>
          <td id="LC4352" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4353" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4353"></td>
          <td id="LC4353" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4354" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4354"></td>
          <td id="LC4354" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4355" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4355"></td>
          <td id="LC4355" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4356" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4356"></td>
          <td id="LC4356" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4357" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4357"></td>
          <td id="LC4357" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4358" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4358"></td>
          <td id="LC4358" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4359" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4359"></td>
          <td id="LC4359" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4360" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4360"></td>
          <td id="LC4360" class="blob-code blob-code-inner js-file-line">350.  Write Python code to check the given sequence is a palindrome or not?</td>
        </tr>
        <tr>
          <td id="L4361" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4361"></td>
          <td id="LC4361" class="blob-code blob-code-inner js-file-line">Ans:</td>
        </tr>
        <tr>
          <td id="L4362" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4362"></td>
          <td id="LC4362" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4363" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4363"></td>
          <td id="LC4363" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4364" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4364"></td>
          <td id="LC4364" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4365" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4365"></td>
          <td id="LC4365" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4366" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4366"></td>
          <td id="LC4366" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4367" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4367"></td>
          <td id="LC4367" class="blob-code blob-code-inner js-file-line">5</td>
        </tr>
        <tr>
          <td id="L4368" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4368"></td>
          <td id="LC4368" class="blob-code blob-code-inner js-file-line">6</td>
        </tr>
        <tr>
          <td id="L4369" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4369"></td>
          <td id="LC4369" class="blob-code blob-code-inner js-file-line">7</td>
        </tr>
        <tr>
          <td id="L4370" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4370"></td>
          <td id="LC4370" class="blob-code blob-code-inner js-file-line">8</td>
        </tr>
        <tr>
          <td id="L4371" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4371"></td>
          <td id="LC4371" class="blob-code blob-code-inner js-file-line">9</td>
        </tr>
        <tr>
          <td id="L4372" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4372"></td>
          <td id="LC4372" class="blob-code blob-code-inner js-file-line">10</td>
        </tr>
        <tr>
          <td id="L4373" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4373"></td>
          <td id="LC4373" class="blob-code blob-code-inner js-file-line">11</td>
        </tr>
        <tr>
          <td id="L4374" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4374"></td>
          <td id="LC4374" class="blob-code blob-code-inner js-file-line"># Python code to check a given sequence</td>
        </tr>
        <tr>
          <td id="L4375" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4375"></td>
          <td id="LC4375" class="blob-code blob-code-inner js-file-line">#  is palindrome or not</td>
        </tr>
        <tr>
          <td id="L4376" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4376"></td>
          <td id="LC4376" class="blob-code blob-code-inner js-file-line">my_string1 = &#39;MOM&#39;</td>
        </tr>
        <tr>
          <td id="L4377" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4377"></td>
          <td id="LC4377" class="blob-code blob-code-inner js-file-line">My_string1 = my_string1.casefold()</td>
        </tr>
        <tr>
          <td id="L4378" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4378"></td>
          <td id="LC4378" class="blob-code blob-code-inner js-file-line"># reverse the given string</td>
        </tr>
        <tr>
          <td id="L4379" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4379"></td>
          <td id="LC4379" class="blob-code blob-code-inner js-file-line">rev_string1  = reversed(my_string1)</td>
        </tr>
        <tr>
          <td id="L4380" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4380"></td>
          <td id="LC4380" class="blob-code blob-code-inner js-file-line"># check whether the string is equal to the reverse of it or not</td>
        </tr>
        <tr>
          <td id="L4381" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4381"></td>
          <td id="LC4381" class="blob-code blob-code-inner js-file-line">if list(my_string1) == list(rev_string1):</td>
        </tr>
        <tr>
          <td id="L4382" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4382"></td>
          <td id="LC4382" class="blob-code blob-code-inner js-file-line">print(&quot;It is a palindrome&quot;)</td>
        </tr>
        <tr>
          <td id="L4383" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4383"></td>
          <td id="LC4383" class="blob-code blob-code-inner js-file-line">else:</td>
        </tr>
        <tr>
          <td id="L4384" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4384"></td>
          <td id="LC4384" class="blob-code blob-code-inner js-file-line">print(&quot;It is not a palindrome&quot;)</td>
        </tr>
        <tr>
          <td id="L4385" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4385"></td>
          <td id="LC4385" class="blob-code blob-code-inner js-file-line">Output:</td>
        </tr>
        <tr>
          <td id="L4386" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4386"></td>
          <td id="LC4386" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4387" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4387"></td>
          <td id="LC4387" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4388" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4388"></td>
          <td id="LC4388" class="blob-code blob-code-inner js-file-line">it is a palindrome</td>
        </tr>
        <tr>
          <td id="L4389" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4389"></td>
          <td id="LC4389" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4390" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4390"></td>
          <td id="LC4390" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4391" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4391"></td>
          <td id="LC4391" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4392" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4392"></td>
          <td id="LC4392" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4393" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4393"></td>
          <td id="LC4393" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4394" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4394"></td>
          <td id="LC4394" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4395" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4395"></td>
          <td id="LC4395" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4396" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4396"></td>
          <td id="LC4396" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4397" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4397"></td>
          <td id="LC4397" class="blob-code blob-code-inner js-file-line">351. Write Python code to sort a numerical dataset?</td>
        </tr>
        <tr>
          <td id="L4398" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4398"></td>
          <td id="LC4398" class="blob-code blob-code-inner js-file-line">Ans: The code to sort a numerical dataset is as follows:</td>
        </tr>
        <tr>
          <td id="L4399" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4399"></td>
          <td id="LC4399" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4400" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4400"></td>
          <td id="LC4400" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4401" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4401"></td>
          <td id="LC4401" class="blob-code blob-code-inner js-file-line">2</td>
        </tr>
        <tr>
          <td id="L4402" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4402"></td>
          <td id="LC4402" class="blob-code blob-code-inner js-file-line">3</td>
        </tr>
        <tr>
          <td id="L4403" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4403"></td>
          <td id="LC4403" class="blob-code blob-code-inner js-file-line">4</td>
        </tr>
        <tr>
          <td id="L4404" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4404"></td>
          <td id="LC4404" class="blob-code blob-code-inner js-file-line">list = [ &quot;13&quot;, &quot;16&quot;, &quot;1&quot;, &quot;5&quot; , &quot;8&quot;]</td>
        </tr>
        <tr>
          <td id="L4405" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4405"></td>
          <td id="LC4405" class="blob-code blob-code-inner js-file-line">list = [int(x) for x in the list]</td>
        </tr>
        <tr>
          <td id="L4406" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4406"></td>
          <td id="LC4406" class="blob-code blob-code-inner js-file-line">list.sort()</td>
        </tr>
        <tr>
          <td id="L4407" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4407"></td>
          <td id="LC4407" class="blob-code blob-code-inner js-file-line">print(list)</td>
        </tr>
        <tr>
          <td id="L4408" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4408"></td>
          <td id="LC4408" class="blob-code blob-code-inner js-file-line">Output: </td>
        </tr>
        <tr>
          <td id="L4409" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4409"></td>
          <td id="LC4409" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4410" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4410"></td>
          <td id="LC4410" class="blob-code blob-code-inner js-file-line">1</td>
        </tr>
        <tr>
          <td id="L4411" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4411"></td>
          <td id="LC4411" class="blob-code blob-code-inner js-file-line">1, 5, 8, 13, 16</td>
        </tr>
        <tr>
          <td id="L4412" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4412"></td>
          <td id="LC4412" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4413" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4413"></td>
          <td id="LC4413" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
        <tr>
          <td id="L4414" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4414"></td>
          <td id="LC4414" class="blob-code blob-code-inner js-file-line"> </td>
        </tr>
        <tr>
          <td id="L4415" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4415"></td>
          <td id="LC4415" class="blob-code blob-code-inner js-file-line"></td>
        </tr>
  </table>
</div>

  <details class="details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none" aria-hidden="true">
    <summary class="btn-octicon ml-0 px-2 p-0 color-bg-default border color-border-default rounded-2" aria-label="Inline file action toolbar">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal">
    <path d="M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
</svg>
    </summary>
    <details-menu>

      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se ml-2 mt-2"
      style="width:185px"
      >
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" aria-label="Copy lines">
            Copy lines
          </clipboard-copy>
        </li>
        <li>
          <clipboard-copy role="menuitem" class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" aria-label="Copy permalink">
            Copy permalink
          </clipboard-copy>
        </li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" role="menuitem" href="/kiransagar1/300-python-Interview-questions-and-solutions/blame/1f6fae35b30bcc395edf7701362321b01c599972/350interview.txt">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" role="menuitem" href="/kiransagar1/300-python-Interview-questions-and-solutions/issues/new">Reference in new issue</a></li>
      </ul>
    </details-menu>
  </details>

    </div>

    </div>


  

  <details class="details-reset details-overlay details-overlay-dark" id="jumpto-line-details-dialog">
    <summary data-hotkey="l" aria-label="Jump to line"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast linejump" aria-label="Jump to line">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" data-turbo="false" action="" accept-charset="UTF-8" method="get">
        <input class="form-control flex-auto mr-3 linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
          <button data-close-dialog="" type="submit" data-view-component="true" class="btn">    Go
</button>
</form>    </details-dialog>
  </details>



</div>

  </div>


  </div>

  </turbo-frame>


    </main>
  </div>

  </div>

          <footer class="footer width-full container-xl p-responsive">
  <h2 class='sr-only'>Footer</h2>

  <div class="position-relative d-flex flex-items-center pb-2 f6 color-fg-muted border-top color-border-muted flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap mt-6 pt-6">
    <div class="list-style-none d-flex flex-wrap col-0 col-lg-2 flex-justify-start flex-lg-justify-between mb-2 mb-lg-0">
      <div class="mt-2 mt-lg-0 d-flex flex-items-center">
        <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-2" href="https://github.com">
          <svg aria-hidden="true" height="24" viewBox="0 0 16 16" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">
    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
</svg>
</a>        <span>
        &copy; 2023 GitHub, Inc.
        </span>
      </div>
    </div>

    <nav aria-label='footer' class="col-12 col-lg-8">
      <h3 class='sr-only' id='sr-footer-heading'>Footer navigation</h3>
      <ul class="list-style-none d-flex flex-wrap col-12 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0" aria-labelledby='sr-footer-heading'>
          <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-terms-of-service" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}">Terms</a></li>
          <li class="mr-3 mr-lg-0"><a href="https://docs.github.com/en/github/site-policy/github-privacy-statement" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}">Privacy</a></li>
          <li class="mr-3 mr-lg-0"><a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security">Security</a></li>
          <li class="mr-3 mr-lg-0"><a href="https://www.githubstatus.com/" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}">Status</a></li>
          <li class="mr-3 mr-lg-0"><a data-ga-click="Footer, go to help, text:Docs" href="https://docs.github.com">Docs</a></li>
          <li class="mr-3 mr-lg-0"><a href="https://support.github.com?tags=dotcom-footer" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}">Contact GitHub</a></li>
          <li class="mr-3 mr-lg-0"><a href="https://github.com/pricing" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Pricing&quot;,&quot;label&quot;:&quot;text:Pricing&quot;}">Pricing</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://docs.github.com" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to api&quot;,&quot;label&quot;:&quot;text:api&quot;}">API</a></li>
        <li class="mr-3 mr-lg-0"><a href="https://services.github.com" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to training&quot;,&quot;label&quot;:&quot;text:training&quot;}">Training</a></li>
          <li class="mr-3 mr-lg-0"><a href="https://github.blog" data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to blog&quot;,&quot;label&quot;:&quot;text:blog&quot;}">Blog</a></li>
          <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>
      </ul>
    </nav>
  </div>

  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 color-fg-muted"></span>
  </div>
</footer>




  <div id="ajax-error-message" class="ajax-error-message flash flash-error" hidden>
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
    </button>
    You can’t perform that action at this time.
  </div>

  <div class="js-stale-session-flash flash flash-warn flash-banner" hidden
    >
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path fill-rule="evenodd" d="M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z"></path>
</svg>
    <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path fill-rule="evenodd" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large" style="width:360px;">
  </div>
</div>

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0 tooltipped-no-delay" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path fill-rule="evenodd" d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z"></path><path fill-rule="evenodd" d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path fill-rule="evenodd" d="M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>


    <style>
      .user-mention[href$="/subbukasturi"] {
        color: var(--color-user-mention-fg);
        background-color: var(--color-user-mention-bg);
        border-radius: 2px;
        margin-left: -2px;
        margin-right: -2px;
        padding: 0 2px;
      }
    </style>


    </div>

    <div id="js-global-screen-reader-notice" class="sr-only" aria-live="polite" ></div>
  </body>
</html>

